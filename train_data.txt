{"features":[{"feature_idx":0,"name":"code","type":{"dtype":"string","_type":"Value"}},{"feature_idx":1,"name":"repo_name","type":{"dtype":"string","_type":"Value"}},{"feature_idx":2,"name":"path","type":{"dtype":"string","_type":"Value"}},{"feature_idx":3,"name":"language","type":{"dtype":"string","_type":"Value"}},{"feature_idx":4,"name":"license","type":{"dtype":"string","_type":"Value"}},{"feature_idx":5,"name":"size","type":{"dtype":"int32","_type":"Value"}}],"rows":[{"row_idx":0,"row":{"code":"public class Student {\n\n\tprivate String namn;\n\tprivate int födelseår, status, id;\n\n\n\tpublic Student(){}\n\n\tpublic String getNamn() {\n\t\treturn namn;\n\t}\n\tpublic void setNamn(String nyNamn) {\n\t\tnamn=nyNamn;\n\t}\n\tpublic int getId() {\n\t\treturn id;\n\t}\n\tpublic void setId(int nyId) {\n\t\tid=nyId;\n\t}\n\tpublic int getStatus() {\n\t\treturn status;\n\t}\n\tpublic void setStatus(int nyStatus) {\n\t\tstatus=nyStatus;\n\t}\n\tpublic int getFödelseår() {\n\t\treturn födelseår;\n\t}\n\tpublic void setFödelseår(int nyFödelseår) {\n\t\tfödelseår=nyFödelseår;\n\t}\n\tpublic String print() {\n\t\treturn namn+\"\\t\"+id+\"\\t\"+födelseår;\n\t}\n}\n","repo_name":"andreasaronsson/introduktion_till_informatik","path":"tebrakod/Student.java","language":"Java","license":"apache-2.0","size":589},"truncated_cells":[]},{"row_idx":1,"row":{"code":"package com.jerry.controller;\n\nimport com.jerry.model.TBanquet;\nimport com.jerry.service.BanquetService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.util.List;\n\n@RestController\n@RequestMapping(\"/banquet\")\npublic class BanquetController {\n\n    @Autowired\n    BanquetService banquetService;\n\n    @GetMapping(\"/listBanquetByRestaurantId\")\n    public List<TBanquet> listBanquetByRestaurantId(String restaurantId) {\n        return banquetService.listBanquetByRestaurantId(restaurantId);\n    }\n\n    @GetMapping(\"/findOne\")\n    public TBanquet findOne(String banquetId) {\n        return banquetService.findOne(banquetId);\n    }\n}\n","repo_name":"luoyefeiwu/learn_java","path":"jpa/src/main/java/com/jerry/controller/BanquetController.java","language":"Java","license":"apache-2.0","size":840},"truncated_cells":[]},{"row_idx":2,"row":{"code":"---\ntitle: Multicluster\ntest: n/a\n---\n\nMulticluster is a deployment model that consists of a\n[mesh](/docs/reference/glossary/#service-mesh) with multiple\n[clusters](/docs/reference/glossary/#cluster).\n","repo_name":"istio/istio.io","path":"content/en/docs/reference/glossary/multicluster.md","language":"Markdown","license":"apache-2.0","size":201},"truncated_cells":[]},{"row_idx":3,"row":{"code":"/*!\r\n * Ext JS Library 3.4.0\r\n * Copyright(c) 2006-2011 Sencha Inc.\r\n * licensing@sencha.com\r\n * http://www.sencha.com/license\r\n */\r\n/**\r\n * @class Ext.dd.DragTracker\r\n * @extends Ext.util.Observable\r\n * A DragTracker listens for drag events on an Element and fires events at the start and end of the drag,\r\n * as well as during the drag. This is useful for components such as {@link Ext.slider.MultiSlider}, where there is\r\n * an element that can be dragged around to change the Slider's value.\r\n * DragTracker provides a series of template methods that should be overridden to provide functionality\r\n * in response to detected drag operations. These are onBeforeStart, onStart, onDrag and onEnd.\r\n * See {@link Ext.slider.MultiSlider}'s initEvents function for an example implementation.\r\n */\r\nExt.dd.DragTracker = Ext.extend(Ext.util.Observable,  {    \r\n    /**\r\n     * @cfg {Boolean} active\r\n\t * Defaults to <tt>false</tt>.\r\n\t */\t\r\n    active: false,\r\n    /**\r\n     * @cfg {Number} tolerance\r\n\t * Number of pixels the drag target must be moved before dragging is considered to have started. Defaults to <tt>5</tt>.\r\n\t */\t\r\n    tolerance: 5,\r\n    /**\r\n     * @cfg {Boolean/Number} autoStart\r\n\t * Defaults to <tt>false</tt>. Specify <tt>true</tt> to defer trigger start by 1000 ms.\r\n\t * Specify a Number for the number of milliseconds to defer trigger start.\r\n\t */\t\r\n    autoStart: false,\r\n    \r\n    constructor : function(config){\r\n        Ext.apply(this, config);\r\n\t    this.addEvents(\r\n\t        /**\r\n\t         * @event mousedown\r\n\t         * @param {Object} this\r\n\t         * @param {Object} e event object\r\n\t         */\r\n\t        'mousedown',\r\n\t        /**\r\n\t         * @event mouseup\r\n\t         * @param {Object} this\r\n\t         * @param {Object} e event object\r\n\t         */\r\n\t        'mouseup',\r\n\t        /**\r\n\t         * @event mousemove\r\n\t         * @param {Object} this\r\n\t         * @param {Object} e event object\r\n\t         */\r\n\t        'mousemove',\r\n\t        /**\r\n\t         * @event dragstart\r\n\t         * @param {Object} this\r\n\t         * @param {Object} e event object\r\n\t         */\r\n\t        'dragstart',\r\n\t        /**\r\n\t         * @event dragend\r\n\t         * @param {Object} this\r\n\t         * @param {Object} e event object\r\n\t         */\r\n\t        'dragend',\r\n\t        /**\r\n\t         * @event drag\r\n\t         * @param {Object} this\r\n\t         * @param {Object} e event object\r\n\t         */\r\n\t        'drag'\r\n\t    );\r\n\t\r\n\t    this.dragRegion = new Ext.lib.Region(0,0,0,0);\r\n\t\r\n\t    if(this.el){\r\n\t        this.initEl(this.el);\r\n\t    }\r\n        Ext.dd.DragTracker.superclass.constructor.call(this, config);\r\n    },\r\n\r\n    initEl: function(el){\r\n        this.el = Ext.get(el);\r\n        el.on('mousedown', this.onMouseDown, this,\r\n                this.delegate ? {delegate: this.delegate} : undefined);\r\n    },\r\n\r\n    destroy : function(){\r\n        this.el.un('mousedown', this.onMouseDown, this);\r\n        delete this.el;\r\n    },\r\n\r\n    onMouseDown: function(e, target){\r\n        if(this.fireEvent('mousedown', this, e) !== false && this.onBeforeStart(e) !== false){\r\n            this.startXY = this.lastXY = e.getXY();\r\n            this.dragTarget = this.delegate ? target : this.el.dom;\r\n            if(this.preventDefault !== false){\r\n                e.preventDefault();\r\n            }\r\n            Ext.getDoc().on({\r\n                scope: this,\r\n                mouseup: this.onMouseUp,\r\n                mousemove: this.onMouseMove,\r\n                selectstart: this.stopSelect\r\n            });\r\n            if(this.autoStart){\r\n                this.timer = this.triggerStart.defer(this.autoStart === true ? 1000 : this.autoStart, this, [e]);\r\n            }\r\n        }\r\n    },\r\n\r\n    onMouseMove: function(e, target){\r\n        // HACK: IE hack to see if button was released outside of window. */\r\n        if(this.active && Ext.isIE && !e.browserEvent.button){\r\n            e.preventDefault();\r\n            this.onMouseUp(e);\r\n            return;\r\n        }\r\n\r\n        e.preventDefault();\r\n        var xy = e.getXY(), s = this.startXY;\r\n        this.lastXY = xy;\r\n        if(!this.active){\r\n            if(Math.abs(s[0]-xy[0]) > this.tolerance || Math.abs(s[1]-xy[1]) > this.tolerance){\r\n                this.triggerStart(e);\r\n            }else{\r\n                return;\r\n            }\r\n        }\r\n        this.fireEvent('mousemove', this, e);\r\n        this.onDrag(e);\r\n        this.fireEvent('drag', this, e);\r\n    },\r\n\r\n    onMouseUp: function(e) {\r\n        var doc = Ext.getDoc(),\r\n            wasActive = this.active;\r\n            \r\n        doc.un('mousemove', this.onMouseMove, this);\r\n        doc.un('mouseup', this.onMouseUp, this);\r\n        doc.un('selectstart', this.stopSelect, this);\r\n        e.preventDefault();\r\n        this.clearStart();\r\n        this.active = false;\r\n        delete this.elRegion;\r\n        this.fireEvent('mouseup', this, e);\r\n        if(wasActive){\r\n            this.onEnd(e);\r\n            this.fireEvent('dragend', this, e);\r\n        }\r\n    },\r\n\r\n    triggerStart: function(e) {\r\n        this.clearStart();\r\n        this.active = true;\r\n        this.onStart(e);\r\n        this.fireEvent('dragstart', this, e);\r\n    },\r\n\r\n    clearStart : function() {\r\n        if(this.timer){\r\n            clearTimeout(this.timer);\r\n            delete this.timer;\r\n        }\r\n    },\r\n\r\n    stopSelect : function(e) {\r\n        e.stopEvent();\r\n        return false;\r\n    },\r\n    \r\n    /**\r\n     * Template method which should be overridden by each DragTracker instance. Called when the user first clicks and\r\n     * holds the mouse button down. Return false to disallow the drag\r\n     * @param {Ext.EventObject} e The event object\r\n     */\r\n    onBeforeStart : function(e) {\r\n\r\n    },\r\n\r\n    /**\r\n     * Template method which should be overridden by each DragTracker instance. Called when a drag operation starts\r\n     * (e.g. the user has moved the tracked element beyond the specified tolerance)\r\n     * @param {Ext.EventObject} e The event object\r\n     */\r\n    onStart : function(xy) {\r\n\r\n    },\r\n\r\n    /**\r\n     * Template method which should be overridden by each DragTracker instance. Called whenever a drag has been detected.\r\n     * @param {Ext.EventObject} e The event object\r\n     */\r\n    onDrag : function(e) {\r\n\r\n    },\r\n\r\n    /**\r\n     * Template method which should be overridden by each DragTracker instance. Called when a drag operation has been completed\r\n     * (e.g. the user clicked and held the mouse down, dragged the element and then released the mouse button)\r\n     * @param {Ext.EventObject} e The event object\r\n     */\r\n    onEnd : function(e) {\r\n\r\n    },\r\n\r\n    /**\r\n     * Returns the drag target\r\n     * @return {Ext.Element} The element currently being tracked\r\n     */\r\n    getDragTarget : function(){\r\n        return this.dragTarget;\r\n    },\r\n\r\n    getDragCt : function(){\r\n        return this.el;\r\n    },\r\n\r\n    getXY : function(constrain){\r\n        return constrain ?\r\n               this.constrainModes[constrain].call(this, this.lastXY) : this.lastXY;\r\n    },\r\n\r\n    getOffset : function(constrain){\r\n        var xy = this.getXY(constrain),\r\n            s = this.startXY;\r\n        return [s[0]-xy[0], s[1]-xy[1]];\r\n    },\r\n\r\n    constrainModes: {\r\n        'point' : function(xy){\r\n\r\n            if(!this.elRegion){\r\n                this.elRegion = this.getDragCt().getRegion();\r\n            }\r\n\r\n            var dr = this.dragRegion;\r\n\r\n            dr.left = xy[0];\r\n            dr.top = xy[1];\r\n            dr.right = xy[0];\r\n            dr.bottom = xy[1];\r\n\r\n            dr.constrainTo(this.elRegion);\r\n\r\n            return [dr.left, dr.top];\r\n        }\r\n    }\r\n});","repo_name":"ahwxl/cms","path":"icms/src/main/webapp/res/extjs/src/dd/DragTracker.js","language":"JavaScript","license":"apache-2.0","size":7637},"truncated_cells":[]},{"row_idx":4,"row":{"code":"<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\n\n    \n    \n    <link rel=\"SHORTCUT ICON\" href=\"../../../../../img/clover.ico\" />\n\n    <link rel=\"stylesheet\" href=\"../../../../../aui/css/aui.min.css\" media=\"all\"/>\n    <link rel=\"stylesheet\" href=\"../../../../../aui/css/aui-experimental.min.css\" media=\"all\"/>\n    <!--[if IE 9]><link rel=\"stylesheet\" href=\"../../../../../aui/css/aui-ie9.min.css\" media=\"all\"/><![endif]-->\n\n    <style type=\"text/css\" media=\"all\">\n        @import url('../../../../../style.css');\n        @import url('../../../../../tree.css');\n        \n    </style>\n\n    <script src=\"../../../../../jquery-1.8.3.min.js\" type=\"text/javascript\"></script>\n    <script src=\"../../../../../aui/js/aui.min.js\" type=\"text/javascript\"></script>\n    <script src=\"../../../../../aui/js/aui-experimental.min.js\" type=\"text/javascript\"></script>\n    <script src=\"../../../../../aui/js/aui-soy.min.js\" type=\"text/javascript\"></script>\n\n    <script src=\"../../../../../package-nodes-tree.js\" type=\"text/javascript\"></script>\n    <script src=\"../../../../../clover-tree.js\" type=\"text/javascript\"></script>\n    <script src=\"../../../../../clover.js\" type=\"text/javascript\"></script>\n    <script src=\"../../../../../clover-descriptions.js\" type=\"text/javascript\"></script>\n    <script src=\"../../../../../cloud.js\" type=\"text/javascript\"></script>\n\n            <title>ABA Route Transit Number Validator 1.0.1-SNAPSHOT</title>\n    </head>\n\n\n<body>\r\n    <div id=\"page\">\r\n        \r\n        \n\n\n<header id=\"header\" role=\"banner\">\n    <nav class=\"aui-header aui-dropdown2-trigger-group\" role=\"navigation\">\n        <div class=\"aui-header-inner\">\n            <div class=\"aui-header-primary\">\n                <h1 id=\"logo\" class=\"aui-header-logo aui-header-logo-clover\">\n                    <a href=\"http://openclover.org\" title=\"Visit OpenClover home page\"><span class=\"aui-header-logo-device\">OpenClover</span></a>\n                </h1>\n                            </div>\n            <div class=\"aui-header-secondary\">\n                <ul class=\"aui-nav\">\n                    <li id=\"system-help-menu\">\n                        <a class=\"aui-nav-link\" title=\"Open online documentation\" target=\"_blank\"\n                           href=\"http://openclover.org/documentation\">\n                            <span class=\"aui-icon aui-icon-small aui-iconfont-help\">&#160;Help</span>\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n</header>\r\n        \r\n        <div class=\"aui-page-panel\">\r\n            <div class=\"aui-page-panel-inner\">\r\n                <div class=\"aui-page-panel-nav aui-page-panel-nav-clover\">\r\n                    \n\n<div class=\"aui-page-header-inner\" style=\"margin-bottom: 20px;\">\n    <div class=\"aui-page-header-image\">\n                    <a href=\"http://cardatechnologies.com\" target=\"_top\">\n                <div class=\"aui-avatar aui-avatar-large aui-avatar-project\">\n            <div class=\"aui-avatar-inner\">\n                                    <img src=\"../../../../../img/clover_logo_large.png\" alt=\"Clover icon\"/>\n                            </div>\n        </div>\n                    </a>\n            </div>\n    <div class=\"aui-page-header-main\" >\n        <h1>\n                            <a href=\"http://cardatechnologies.com\" target=\"_top\">\n                                        ABA Route Transit Number Validator 1.0.1-SNAPSHOT\n                                        </a>\n                    </h1>\n    </div>\n</div>\n\n<nav class=\"aui-navgroup aui-navgroup-vertical\">\n    <div class=\"aui-navgroup-inner\">\n                                            <ul class=\"aui-nav\">\n                <li class=\"\">\n                    <a href=\"../../../../../dashboard.html\">Project overview</a>\n                </li>\n            </ul>\n        \n                <div class=\"aui-nav-heading packages-nav-heading\">\n            <strong>Packages</strong>\n        </div>\n        <div class=\"aui-nav project-packages\">\n            <form method=\"get\" action=\"#\" class=\"aui package-filter-container\">\n                <input type=\"text\" autocomplete=\"off\" class=\"package-filter text\"\n                       placeholder=\"Type to filter packages...\" name=\"package-filter\" id=\"package-filter\"\n                       title=\"Start typing package name (or part of the name) to search through the tree. Use arrow keys and the Enter key to navigate.\"/>\n            </form>\n            <p class=\"package-filter-no-results-message hidden\">\n                <small>No results found.</small>\n            </p>\n                                                <div class=\"packages-tree-wrapper\" data-root-relative=\"../../../../../\" data-package-name=\"com.cardatechnologies.utils.validators.abaroutevalidator\">\n                <div class=\"packages-tree-container\"></div>\n                <div class=\"clover-packages-lozenges\"></div>\n            </div>\n        </div>\n        \n            </div>\n</nav>                </div>\r\n                <section class=\"aui-page-panel-content\">\r\n                    <div class=\"aui-page-panel-content-clover\">\r\n\r\n                    \r\n                    <div class=\"aui-page-header-main\"><ol class=\"aui-nav aui-nav-breadcrumbs\">\n    \n    <li><a href=\"../../../../../dashboard.html\"> Project Clover database Sat Aug 7 2021 12:29:33 MDT</a></li>\n     <li><a href=\"test-pkg-summary.html\">Package com.cardatechnologies.utils.validators.abaroutevalidator</a></li>\n     <li><a href=\"test-Test_AbaRouteValidator_03.html\">Class Test_AbaRouteValidator_03</a></li>\n</ol></div>\r\n    \n<h1 class=\"aui-h2-clover\">\n                        \n            Test testAbaNumberCheck_4953_good\n            </h1>\n\n\n<table class=\"aui\">\n    <thead>\n        <tr>\n            <th>Test</th>\n                        <th><label title=\"The test result. Either a Pass, Fail or Error.\">Status</label></th>\n            <th><label title=\"When the test execution was started\">Start time</label></th>\n            <th><label title=\"The total time in seconds taken to run this test.\">Time (seconds)</label></th>\n            <th><label title=\"A failure or error message if the test is not successful.\">Message</label></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>\n                <a  href=\"../../../../../com/cardatechnologies/utils/validators/abaroutevalidator/Test_AbaRouteValidator_03.html?line=58937#src-58937\" >testAbaNumberCheck_4953_good</a>\n            </td>\n                        <td>\n                                          <span class=\"sortValue\">1</span><span class=\"aui-lozenge aui-lozenge-success\">PASS</span>\n                              </td>\n            <td>\n                7 Aug 12:33:30\n            </td>\n            <td>\n                0.0            </td>\n            <td>\n                <div></div>\n                <div class=\"errorMessage\"></div>\n            </td>\n        </tr>\n    </tbody>\n</table>\n\n<div>&#160;</div>\n\n    <table class=\"aui aui-table-sortable\">\n        <thead>\n            <tr>\n                <th style=\"white-space:nowrap;\"><label title=\"A class that was directly hit by this test.\">Target Class</label></th>\n                                <th colspan=\"4\"><label title=\"The percentage of coverage contributed by each single test.\">Coverage contributed by</label> testAbaNumberCheck_4953_good</th>\n            </tr>\n        </thead>\n        <tbody>\n\n\n        <tr>\n        <td>\n            <span class=\"sortValue\">com.cardatechnologies.utils.validators.abaroutevalidator.AbaRouteValidator</span>\n            &#160;&#160;<a             href=\"../../../../../com/cardatechnologies/utils/validators/abaroutevalidator/AbaRouteValidator.html?id=14548#AbaRouteValidator\"             title=\"AbaRouteValidator\" name=\"sl-47\">com.cardatechnologies.utils.validators.abaroutevalidator.AbaRouteValidator</a>\n        </td>\n                <td>\n            <span class=\"sortValue\">0.7352941</span>73.5%\n        </td>\n        <td class=\"align-middle\" style=\"width: 100%\" colspan=\"3\">\n                        <div>\n<div title=\"73.5% Covered\" style=\"min-width:40px;\" class=\"barNegative contribBarNegative contribBarNegative\"><div class=\"barPositive contribBarPositive contribBarPositive\" style=\"width:73.5%\"></div></div></div>        </td>\n    </tr>\n \n        </tbody>\n    </table>\n\n                        </div> <!-- class=\"aui-page-panel-content-clover\" -->\n                    <footer id=\"footer\" role=\"contentinfo\">\n    <section class=\"footer-body\">\n        <ul>\n            <li>\n                Report generated by <a target=\"_new\" href=\"http://openclover.org\">OpenClover</a> v 4.4.1\n                on Sat Aug 7 2021 12:49:26 MDT using coverage data from Sat Aug 7 2021 12:47:23 MDT.\n            </li>\n        </ul>\n        <ul>\n            <li>OpenClover is free and open-source software. </li>\n        </ul>\n    </section>\n</footer>                </section> <!-- class=\"aui-page-panel-content\" -->\n            </div> <!-- class=\"aui-page-panel-inner\" -->\n        </div> <!-- class=\"aui-page-panel\" -->\n    </div> <!-- id=\"page\" -->\n</body>\n</html>","repo_name":"dcarda/aba.route.validator","path":"target13/site/clover/com/cardatechnologies/utils/validators/abaroutevalidator/Test_AbaRouteValidator_03_testAbaNumberCheck_4953_good_b84.html","language":"HTML","license":"apache-2.0","size":9178},"truncated_cells":[]},{"row_idx":5,"row":{"code":"<?php\n\n/**\n * @link https://www.humhub.org/\n * @copyright Copyright (c) 2015 HumHub GmbH & Co. KG\n * @license https://www.humhub.com/licences\n */\n\nnamespace humhub\\modules\\content\\widgets;\n\n/**\n * Delete Link for Wall Entries\n *\n * This widget will attached to the WallEntryControlsWidget and displays\n * the \"Delete\" Link to the Content Objects.\n *\n * @package humhub.modules_core.wall.widgets\n * @since 0.5\n */\nclass DeleteLink extends \\yii\\base\\Widget\n{\n\n    /**\n     * @var \\humhub\\modules\\content\\components\\ContentActiveRecord\n     */\n    public $content = null;\n\n    /**\n     * Executes the widget.\n     */\n    public function run()\n    {\n        if ($this->content->content->canDelete()) {\n            return $this->render('deleteLink', array(\n                        'model' => $this->content->content->object_model,\n                        'id' => $this->content->content->object_id\n            ));\n        }\n    }\n\n}\n\n?>","repo_name":"calonso-conabio/intranet","path":"protected/humhub/modules/content/widgets/DeleteLink.php","language":"PHP","license":"apache-2.0","size":931},"truncated_cells":[]},{"row_idx":6,"row":{"code":"/*\r\n * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\r\n * agreements. See the NOTICE file distributed with this work for additional information regarding\r\n * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License. You may obtain a\r\n * copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n * or implied. See the License for the specific language governing permissions and limitations under\r\n * the License.\r\n */\r\npackage net.gcolin.jmx.console.embedded;\r\n\r\nimport net.gcolin.jmx.console.JmxHtml;\r\nimport net.gcolin.jmx.console.JmxProcessException;\r\nimport net.gcolin.jmx.console.JmxResult;\r\nimport net.gcolin.jmx.console.JmxTool;\r\n\r\nimport java.io.IOException;\r\nimport java.io.Writer;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.Map.Entry;\r\n\r\nimport javax.servlet.ServletException;\r\nimport javax.servlet.http.HttpServlet;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\n/**\r\n * A Jmx servlet with bootstrap style.\r\n *\r\n * @author Gael COLIN\r\n *\r\n */\r\npublic class BootStrapJmxServlet extends HttpServlet {\r\n\r\n  private static final long serialVersionUID = 7998004606230901933L;\r\n  protected transient JmxTool tool;\r\n  protected transient JmxHtml html;\r\n\r\n  @Override\r\n  public void init() throws ServletException {\r\n    tool = new JmxTool();\r\n    html = new JmxHtml() {\r\n      protected String getButtonCss() {\r\n        return \"btn btn-primary\";\r\n      }\r\n\r\n      protected String getInputTextClass() {\r\n        return \"form-control\";\r\n      }\r\n\r\n      protected String getFormClass() {\r\n        return \"form-inline\";\r\n      }\r\n\r\n      protected String getSelectClass() {\r\n        return \"form-control\";\r\n      }\r\n\r\n      protected String getMenuUlClass() {\r\n        return \"menu\";\r\n      }\r\n\r\n      @Override\r\n      protected String getTableClass() {\r\n        return \"table table-bordered\";\r\n      }\r\n\r\n      protected void writeCss(Writer writer) throws IOException {\r\n        writer.write(\"<link href=\\\"/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\" />\");\r\n        writer.write(\"<link href=\\\"/css/bootstrap-theme.min.css\\\" rel=\\\"stylesheet\\\" />\");\r\n        writer.write(\"<style type='text/css'>.menu li.active>a{font-weight:bold}\"\r\n            + \".col{display:table-cell}.space{padding-left:16px;}</style>\");\r\n      }\r\n    };\r\n  }\r\n\r\n  @SuppressWarnings(\"unchecked\")\r\n  @Override\r\n  protected void doGet(HttpServletRequest req, HttpServletResponse resp)\r\n      throws ServletException, IOException {\r\n    Map<String, String> parameters = new HashMap<String, String>();\r\n    for (Object elt : req.getParameterMap().entrySet()) {\r\n      Entry<String, String[]> entry = (Entry<String, String[]>) elt;\r\n      parameters.put(entry.getKey(), entry.getValue()[0]);\r\n    }\r\n    JmxResult result;\r\n    try {\r\n      result = tool.build(parameters);\r\n    } catch (JmxProcessException ex) {\r\n      throw new ServletException(ex);\r\n    }\r\n    result.setRequestUri(req.getRequestURI());\r\n    result.setQueryParams(req.getQueryString());\r\n    resp.setContentType(\"text/html\");\r\n    html.write(result, parameters, resp.getWriter());\r\n  }\r\n\r\n  @Override\r\n  protected void doPost(HttpServletRequest req, HttpServletResponse resp)\r\n      throws ServletException, IOException {\r\n    doGet(req, resp);\r\n  }\r\n\r\n}\r\n","repo_name":"gcolin/jmx-web-console","path":"jmx-embedded/src/main/java/net/gcolin/jmx/console/embedded/BootStrapJmxServlet.java","language":"Java","license":"apache-2.0","size":3657},"truncated_cells":[]},{"row_idx":7,"row":{"code":"﻿using IronFoundry.Warden.Containers;\nusing Xunit;\n\nnamespace IronFoundry.Warden.Test\n{\n    using System;\n\n    public class ContainerHandleTests\n    {\n        [Theory]\n        [InlineData(1, \"idq1ypm7dyb\")]\n        [InlineData(2, \"1of9dl2qia1\")]\n        public void GeneratesIdFromRandomGenerator(int input, string expectedId)\n        {\n            var handle = new ContainerHandle(new Random(input));\n            Assert.Equal<string>(expectedId, handle);\n        }\n\n        [Fact]\n        public void GeneratesUniqueIds()\n        {\n            var handle1 = new ContainerHandle();\n            var handle2 = new ContainerHandle();\n\n            Assert.Equal(11, handle1.ToString().Length);\n            Assert.Equal(11, handle2.ToString().Length);\n            Assert.NotEqual(handle1, handle2);\n        }\n    }\n}\n","repo_name":"cloudfoundry-incubator/if_warden","path":"IronFoundry.Warden.Test/Containers/ContainerHandleTests.cs","language":"C#","license":"apache-2.0","size":813},"truncated_cells":[]},{"row_idx":8,"row":{"code":"Pindrop    {#pindrop_index}\n=======\n\n[Pindrop][] is an audio engine designed with the needs of games in mind.  It's\nnot just an audio mixer, it also manages the prioritization, adjusts gain based\ndistance,  manages buses, and more. It is largely data-driven.  The library user\nneeds only to load a handful of configuration files and Pindrop handles the\nrest.\n\n## Features\n\n### Sound Bank Management\n\nTo save memory, only load the sounds you need by grouping them into sound banks.\nLoad as many banks as you need. Samples are reference counted, so you'll never\nload the same sample multiple times.\n\n### Channel Prioritization\n\nIn a busy scene a game might have thousands of samples playing at the same time.\nSometimes that is more than the game can handle. Pindrop will manage the\npriority of each audio channel and only drop the least important channels when\ntoo many simultaneous streams play at once.\n\n### Distance Attenuation\n\n[Pindrop][] supports positional and non-positional sounds. Positional sounds can\nbe set to attenuate based on their distance from the listener. The attenuation\ncurve can be customized so that the audio rolls off with the curve that sounds\nright.\n\n### Buses\n\nA series of hierarchical buses may be specified that can automatically adjust\nchannel gain on the fly. If there is an important sound or voice over that needs\nto be heard, audio playing on less important buses can be [ducked][] to ensure\nthe player hears what they need.\n\n### Easy to Use\n\n[Pindrop][] only requires a few [JSON][] based configuration files, and the code\nrequired to hook it into your own game engine is minimal. File loading is made\nfast by [FlatBuffers][]. All you need to do is initialize the library and run\n`AdvanceFrame` once each frame in your main loop.\n\n## Dependencies\n\n[FlatBuffers][], a fast serialization system, is used to store the game's data.\nThe game configuration data is stored in [JSON][] files which are converted to\nFlatBuffer binary files using the flatc compiler.\n\n[MathFu][], a geometry math library optimized for [ARM][] and [x86][]\nprocessors. Pindrop uses [MathFu][] three dimensional vectors for distance\nattenuation calculations.\n\n[SDL Mixer][], an audio mixing library that sits on top of [SDL][]. SDL Mixer\nhandles mixing the playing audio samples and streams that Pindrop manages.  SDL\nMixer in turn depends on [libogg][] and [libvorbis][] as well.\n\nIn addition, [fplutil][] is used to build, deploy, and run the game; build and\narchive the game; and profile the game's CPU performance.\n\n## Supported Platforms\n\n[Pindrop][] has been tested on the following platforms:\n\n   * [Nexus Player][], an [Android TV][] device\n   * [Android][] phones and tablets\n   * [Linux][] (x86_64)\n   * [OS X][]\n   * [Windows][]\n\nWe use [SDL][] as our cross platform layer.\n\n[Pindrop][] is written entirely in C++. The library can be compiled using\n[Linux][], [OS X][] or [Windows][].\n\n## Download\n\n[Pindrop][] can be downloaded from:\n   * [GitHub][] (source)\n   * [GitHub Releases Page](http://github.com/google/pindrop/releases) (source)\n\n**Important**: Pindrop uses submodules to reference other components it\ndepends upon, so download the source from [GitHub][] using:\n\n~~~{.sh}\n    git clone --recursive https://github.com/google/pindrop.git\n~~~\n\n## Feedback and Reporting Bugs\n\n   * Discuss Pindrop with other developers and users on the\n     [Pindrop Google Group][].\n   * File issues on the [Pindrop Issues Tracker][].\n   * Post your questions to [stackoverflow.com][] with a mention of\n     **fpl pindrop**.\n\n<br>\n\n  [Android TV]: http://www.android.com/tv/\n  [Android]: http://www.android.com\n  [ducked]: http://en.wikipedia.org/wiki/Ducking\n  [FlatBuffers]: http://google-opensource.blogspot.ca/2014/06/flatbuffers-memory-efficient.html\n  [fplutil]: http://android-developers.blogspot.ca/2014/11/utilities-for-cc-android-developers.html\n  [GitHub]: http://github.com/google/pindrop\n  [JSON]: http://www.json.org/\n  [Linux]: http://en.m.wikipedia.org/wiki/Linux\n  [MathFu]: http://googledevelopers.blogspot.ca/2014/11/geometry-math-library-for-c-game.html\n  [Nexus Player]: http://www.google.com/nexus/player/\n  [OS X]: http://www.apple.com/osx/\n  [Pindrop Google Group]: http://groups.google.com/group/pindrop\n  [Pindrop Issues Tracker]: http://github.com/google/pindrop/issues\n  [Pindrop]: @ref pindrop_index\n  [SDL]: https://www.libsdl.org/\n  [stackoverflow.com]: http://stackoverflow.com/search?q=fpl+pindrop\n  [stackoverflow.com]: http://www.stackoverflow.com\n  [WebP]: https://developers.google.com/speed/webp\n  [Windows]: http://windows.microsoft.com/\n  [x86]: http://en.wikipedia.org/wiki/X86\n\n","repo_name":"google/pindrop","path":"docs/src/index.md","language":"Markdown","license":"apache-2.0","size":4628},"truncated_cells":[]},{"row_idx":9,"row":{"code":"/**\n *  Copyright 2014 TangoMe Inc.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\npackage com.tango.logstash.flume.redis.sink.serializer;\n\nimport org.apache.flume.Event;\nimport org.apache.flume.conf.Configurable;\nimport org.apache.flume.conf.ConfigurableComponent;\n\npublic interface Serializer extends Configurable, ConfigurableComponent {\n\n\t/**\n\t * Serialize an event for storage in Redis\n\t * \n\t * @param event\n\t *            Event to serialize\n\t * @return Serialized data\n\t */\n\tbyte[] serialize(Event event) throws RedisSerializerException;\n}\n","repo_name":"DevOps-TangoMe/flume-redis","path":"flume-redis-sink/src/main/java/com/tango/logstash/flume/redis/sink/serializer/Serializer.java","language":"Java","license":"apache-2.0","size":1070},"truncated_cells":[]},{"row_idx":10,"row":{"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.io.output;\n\nimport java.io.IOException;\nimport java.io.OutputStream;\n\n/**\n * Classic splitter of OutputStream. Named after the unix 'tee' \n * command. It allows a stream to be branched off so there \n * are now two streams.\n *\n */\npublic class TeeOutputStream extends ProxyOutputStream {\n\n    /** the second OutputStream to write to */\n    protected OutputStream branch; //TODO consider making this private\n\n    /**\n     * Constructs a TeeOutputStream.\n     * @param out the main OutputStream\n     * @param branch the second OutputStream\n     */\n    public TeeOutputStream(final OutputStream out, final OutputStream branch) {\n        super(out);\n        this.branch = branch;\n    }\n\n    /**\n     * Write the bytes to both streams.\n     * @param b the bytes to write\n     * @throws IOException if an I/O error occurs\n     */\n    @Override\n    public synchronized void write(final byte[] b) throws IOException {\n        super.write(b);\n        this.branch.write(b);\n    }\n\n    /**\n     * Write the specified bytes to both streams.\n     * @param b the bytes to write\n     * @param off The start offset\n     * @param len The number of bytes to write\n     * @throws IOException if an I/O error occurs\n     */\n    @Override\n    public synchronized void write(final byte[] b, final int off, final int len) throws IOException {\n        super.write(b, off, len);\n        this.branch.write(b, off, len);\n    }\n\n    /**\n     * Write a byte to both streams.\n     * @param b the byte to write\n     * @throws IOException if an I/O error occurs\n     */\n    @Override\n    public synchronized void write(final int b) throws IOException {\n        super.write(b);\n        this.branch.write(b);\n    }\n\n    /**\n     * Flushes both streams.\n     * @throws IOException if an I/O error occurs\n     */\n    @Override\n    public void flush() throws IOException {\n        super.flush();\n        this.branch.flush();\n    }\n\n    /**\n     * Closes both output streams.\n     * \n     * If closing the main output stream throws an exception, attempt to close the branch output stream.\n     * \n     * If closing the main and branch output streams both throw exceptions, which exceptions is thrown by this method is\n     * currently unspecified and subject to change.\n     * \n     * @throws IOException\n     *             if an I/O error occurs\n     */\n    @Override\n    public void close() throws IOException {\n        try {\n            super.close();\n        } finally {\n            this.branch.close();\n        }\n    }\n\n}\n","repo_name":"pimtegelaar/commons-io-test3","path":"src/main/java/org/apache/commons/io/output/TeeOutputStream.java","language":"Java","license":"apache-2.0","size":3320},"truncated_cells":[]},{"row_idx":11,"row":{"code":"\npackage org.renjin.primitives;\n\nimport org.renjin.eval.Context;\nimport org.renjin.eval.EvalException;\nimport org.renjin.primitives.annotations.processor.ArgumentException;\nimport org.renjin.primitives.annotations.processor.ArgumentIterator;\nimport org.renjin.primitives.annotations.processor.WrapperRuntime;\nimport org.renjin.primitives.files.Files;\nimport org.renjin.sexp.BuiltinFunction;\nimport org.renjin.sexp.DoubleVector;\nimport org.renjin.sexp.Environment;\nimport org.renjin.sexp.FunctionCall;\nimport org.renjin.sexp.IntVector;\nimport org.renjin.sexp.LogicalVector;\nimport org.renjin.sexp.PairList;\nimport org.renjin.sexp.SEXP;\nimport org.renjin.sexp.StringVector;\n\npublic class R$primitive$file$access\n    extends BuiltinFunction\n{\n\n\n    public R$primitive$file$access() {\n        super(\"file.access\");\n    }\n\n    public SEXP apply(Context context, Environment environment, FunctionCall call, PairList args) {\n        try {\n            ArgumentIterator argIt = new ArgumentIterator(context, environment, args);\n            SEXP s0 = argIt.evalNext();\n            SEXP s1 = argIt.evalNext();\n            if (!argIt.hasNext()) {\n                return this.doApply(context, environment, s0, s1);\n            }\n            throw new EvalException(\"file.access: too many arguments, expected at most 2.\");\n        } catch (ArgumentException e) {\n            throw new EvalException(context, \"Invalid argument: %s. Expected:\\n\\tfile.access(character, integer(1))\", e.getMessage());\n        } catch (EvalException e) {\n            e.initContext(context);\n            throw e;\n        } catch (RuntimeException e) {\n            throw e;\n        } catch (Exception e) {\n            throw new EvalException(e);\n        }\n    }\n\n    public static SEXP doApply(Context context, Environment environment, FunctionCall call, String[] argNames, SEXP[] args) {\n        try {\n            if ((args.length) == 2) {\n                return doApply(context, environment, args[ 0 ], args[ 1 ]);\n            }\n        } catch (EvalException e) {\n            e.initContext(context);\n            throw e;\n        } catch (RuntimeException e) {\n            throw e;\n        } catch (Exception e) {\n            throw new EvalException(e);\n        }\n        throw new EvalException(\"file.access: max arity is 2\");\n    }\n\n    public SEXP apply(Context context, Environment environment, FunctionCall call, String[] argNames, SEXP[] args) {\n        return R$primitive$file$access.doApply(context, environment, call, argNames, args);\n    }\n\n    public static SEXP doApply(Context context, Environment environment, SEXP arg0, SEXP arg1)\n        throws Exception\n    {\n        if ((arg0 instanceof StringVector)&&(((arg1 instanceof IntVector)||(arg1 instanceof DoubleVector))||(arg1 instanceof LogicalVector))) {\n            return Files.fileAccess(context, ((StringVector) arg0), WrapperRuntime.convertToInt(arg1));\n        } else {\n            throw new EvalException(String.format(\"Invalid argument:\\n\\tfile.access(%s, %s)\\n\\tExpected:\\n\\tfile.access(character, integer(1))\", arg0 .getTypeName(), arg1 .getTypeName()));\n        }\n    }\n\n}\n","repo_name":"bedatadriven/renjin-statet","path":"org.renjin.core/src-gen/org/renjin/primitives/R$primitive$file$access.java","language":"Java","license":"apache-2.0","size":3115},"truncated_cells":[]},{"row_idx":12,"row":{"code":"/*******************************************************************************\n * Copyright 2012 EMBL-EBI, Hinxton outstation\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *   http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ******************************************************************************/\npackage uk.ac.ebi.embl.api.validation.check.sourcefeature;\n\nimport static org.junit.Assert.*;\n\nimport java.util.Collection;\n\nimport org.junit.After;\nimport org.junit.Before;\nimport org.junit.Test;\n\nimport uk.ac.ebi.embl.api.entry.Entry;\nimport uk.ac.ebi.embl.api.entry.EntryFactory;\nimport uk.ac.ebi.embl.api.entry.feature.Feature;\nimport uk.ac.ebi.embl.api.entry.feature.FeatureFactory;\nimport uk.ac.ebi.embl.api.entry.qualifier.Qualifier;\nimport uk.ac.ebi.embl.api.entry.sequence.Sequence;\nimport uk.ac.ebi.embl.api.entry.sequence.SequenceFactory;\nimport uk.ac.ebi.embl.api.storage.DataRow;\nimport uk.ac.ebi.embl.api.validation.*;\n\npublic class MoleculeTypeAndSourceQualifierCheckTest {\n\n\tprivate Entry entry;\n\tprivate Feature source;\n\tprivate MoleculeTypeAndSourceQualifierCheck check;\n\n\t@Before\n\tpublic void setUp() {\n\t\tValidationMessageManager\n\t\t\t\t.addBundle(ValidationMessageManager.STANDARD_VALIDATION_BUNDLE);\n\t\tEntryFactory entryFactory = new EntryFactory();\n\t\tSequenceFactory sequenceFactory = new SequenceFactory();\n\t\tFeatureFactory featureFactory = new FeatureFactory();\n\n\t\tentry = entryFactory.createEntry();\n\t\tsource = featureFactory.createSourceFeature();\n\t\tentry.addFeature(source);\n\n\t\tSequence sequence = sequenceFactory.createSequence();\n\t\tentry.setSequence(sequence);\n\n\t\tDataRow dataRow = new DataRow(\n\t\t\t\t\"tissue_type,dev_stage,isolation_source,collection_date,host,lab_host,sex,mating_type,haplotype,cultivar,ecotype,variety,breed,isolate,strain,clone,country,lat_lon,specimen_voucher,culture_collection,biomaterial,PCR_primers\",\n\t\t\t\t\"mRNA\");\n\t\tGlobalDataSets.addTestDataSet(GlobalDataSetFile.MOLTYPE_SOURCE_QUALIFIERS, dataRow);\n\n\t\tDataRow dataRow1=new DataRow(\"genomic DNA\",Qualifier.GERMLINE_QUALIFIER_NAME);\n\t\tGlobalDataSets.addTestDataSet(GlobalDataSetFile.SOURCE_QUALIFIERS_MOLTYPE_VALUES, dataRow1);\n\n\t\tcheck = new MoleculeTypeAndSourceQualifierCheck();\n\t}\n\n\t@After\n\tpublic void tearDown() {\n\t\tGlobalDataSets.resetTestDataSets();\n\t}\n\n\t@Test\n\tpublic void testCheck_NoEntry() {\n\t\tassertTrue(check.check(null).isValid());\n\t}\n\n\t@Test\n\tpublic void testCheck_NoMoleculeType() {\n\t\tentry.getSequence().setMoleculeType(null);\n\t\tsource.addQualifier(\"organism\", \"Deltavirus\");\n\n\t\tassertTrue(check.check(entry).isValid());\n\t}\n\n\t@Test\n\tpublic void testCheck_NoSequence() {\n\t\tentry.setSequence(null);\n\t\tsource.addQualifier(\"organism\", \"liver\");\n\t\tassertTrue(check.check(entry).isValid());\n\t}\n\n\t@Test\n\tpublic void testCheck_noSourceQualifier() {\n\t\tentry.getSequence().setMoleculeType(\"mRNA\");\n\t\tValidationResult result = check.check(entry);\n\t\tassertEquals(2, result.count(\"MoleculeTypeAndSourceQualifierCheck\",\n\t\t\t\tSeverity.ERROR));\n\t}\n\n\t@Test\n\tpublic void testCheck_NoSource() {\n\t\tentry.getSequence().setMoleculeType(\"mRNA\");\n\t\tentry.removeFeature(source);\n\n\t\tValidationResult result = check.check(entry);\n\t\tassertEquals(0, result.getMessages().size());\n\t}\n\n\t@Test\n\tpublic void testCheck_noRequiredQualifier() {\n\t\tentry.getSequence().setMoleculeType(\"mRNA\");\n\t\tsource.addQualifier(\"organism\", \"some organism\");\n\n\t\tValidationResult result = check.check(entry);\n\t\tassertEquals(1, result.getMessages().size());\n\t}\n\n\t@Test\n\tpublic void testCheck_requiredQualifier() {\n\t\tentry.getSequence().setMoleculeType(\"mRNA\");\n\t\tsource.addQualifier(\"tissue_type\", \"liver\");\n\t\tValidationResult result = check.check(entry);\n\t\tassertEquals(0, result.getMessages().size());\n\t}\n\n\t@Test\n\tpublic void testCheck_Message() {\n\t\tentry.getSequence().setMoleculeType(\"mRNA\");\n\n\t\tValidationResult result = check.check(entry);\n\t\tCollection<ValidationMessage<Origin>> messages = result.getMessages(\n\t\t\t\t\"MoleculeTypeAndSourceQualifierCheck\", Severity.ERROR);\n\t\tassertEquals(\n\t\t\t\t\"At least one of the Qualifiers \\\"tissue_type, dev_stage, isolation_source, collection_date, host, lab_host, sex, mating_type, haplotype, cultivar, ecotype, variety, breed, isolate, strain, clone, country, lat_lon, specimen_voucher, culture_collection, biomaterial, PCR_primers\\\" must exist in Source feature if Molecule Type matches the Value \\\"mRNA\\\".\",\n\t\t\t\tmessages.iterator().next().getMessage());\n\t}\n\t\n\t@Test\n\tpublic void testCheck_invalidMolTypeValue() {\n\t\tentry.getSequence().setMoleculeType(\"mRNA\");\n\t\tsource.addQualifier(Qualifier.GERMLINE_QUALIFIER_NAME);\n\t\tentry.addFeature(source);\n\t\tValidationResult result = check.check(entry);\n\t\tassertEquals(1,result.getMessages(\"MoleculeTypeAndSourceQualifierCheck_1\", Severity.ERROR).size());\n\t\t}\n\t\n\t@Test\n\tpublic void testCheck_validMolTypeValue() {\n\t\tentry.getSequence().setMoleculeType(\"genomic DNA\");\n\t\tsource.addQualifier(Qualifier.GERMLINE_QUALIFIER_NAME);\n\t\tentry.addFeature(source);\n\t\tValidationResult result = check.check(entry);\n\t\tassertEquals(0,result.getMessages(\"MoleculeTypeAndSourceQualifierCheck_1\", Severity.ERROR).size());\n\t\t}\n\n}\n","repo_name":"enasequence/sequencetools","path":"src/test/java/uk/ac/ebi/embl/api/validation/check/sourcefeature/MoleculeTypeAndSourceQualifierCheckTest.java","language":"Java","license":"apache-2.0","size":5528},"truncated_cells":[]},{"row_idx":13,"row":{"code":"﻿<p>\n    This example shows how Telerik DatePicker for ASP.NET MVC is being validated through the built-in server-side validation capabilities of ASP.NET MVC.\n</p>\n<pre class=\"prettyprint\">\n\n&lt%= Html.ValidationSummary() %&gt;\n&lt% using (Html.BeginForm(\"Action\", \"Controller\")) { %&gt\n    &lt%= Html.Telerik().DatePicker()\n            .Name(\"deliveryDate\")\n    %>\n    &lt%= Html.ValidationMessage(\"deliveryDate\", \"*\") %&gt\n    &lt;input type=\"submit\" value=\"Post\" /&gt\n<% } %>\n</pre>\n<p>\n    Additionally you can use <em>DatePickerFor</em> extension in order to create DatePicker for a concrete <em>Model property</em>.\n    If it has <strong>Range</strong> attribute, DatePicker component will use it to define min and max date\n    contraints.\n</p>","repo_name":"wenbinke/susucms","path":"SusuCMS.Web/Content/DatePicker/Descriptions/ServerValidation.html","language":"HTML","license":"apache-2.0","size":752},"truncated_cells":[]},{"row_idx":14,"row":{"code":"package com.baicai.util.help;\r\n\r\nimport java.io.File;\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport org.beetl.core.Configuration;\r\nimport org.beetl.core.GroupTemplate;\r\nimport org.beetl.core.Template;\r\nimport org.beetl.core.resource.FileResourceLoader;\r\n\r\n/**\r\n * \r\n * @Description: 使用beetl来生成model类，未完成\r\n * @author 猪肉有毒 waitfox@qq.com\r\n * @date 2016年1月16日 下午11:31:04\r\n * @version V1.0 我只为你回眸一笑，即使不够倾国倾城，我只为你付出此生，换来生再次相守\r\n */\r\npublic class GenModel {\r\n\tpublic static final String RESOURCEPATH = \"F:/data/eclipse/p2p/src/test/resources\";\r\n\r\n\tpublic static void generetor(String tableName) throws IOException {\r\n\t\tFileResourceLoader resourceLo = new FileResourceLoader(RESOURCEPATH, \"utf-8\");\r\n\t\tresourceLo.setRoot(RESOURCEPATH);\r\n\t\tConfiguration config = Configuration.defaultConfiguration();\r\n\t\tconfig.getResourceMap().put(\"root\", null);// 这里需要重置root，否则会去找配置文件\r\n\t\tGroupTemplate gt = new GroupTemplate(resourceLo, config);\r\n\t\tTemplate t = gt.getTemplate(\"model.htm\");\r\n\t\tTableBean tb = Generator.getTable(tableName);\r\n\t\tString date = new SimpleDateFormat(\"yyyy/MM/dd HH:mm:ss\").format(new Date());\r\n\t\tt.binding(\"table\", tb);\r\n\t\tt.binding(\"package\", Generator.PACKAGE_BASE);\r\n\t\tt.binding(\"createDate\", date);\r\n\t\tString str = t.render();\r\n\t\tSystem.out.println(str);\r\n\t\tFile f = new File(Generator.OUTPUT_PATH+tb.getTableNameCapitalized()+\".java\");// 新建一个文件对象\r\n\t\tFileWriter fw;\r\n\t\ttry {\r\n\t\t\tfw = new FileWriter(f);// 新建一个FileWriter\r\n\t\t\tfw.write(str);// 将字符串写入到指定的路径下的文件中\r\n\t\t\tfw.close();\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static void main(String[] args) throws IOException {\r\n\t\tgeneretor(\"p2p_project\");\r\n\t}\r\n\r\n}\r\n","repo_name":"iminto/baicai","path":"src/main/java/com/baicai/util/help/GenModel.java","language":"Java","license":"apache-2.0","size":1924},"truncated_cells":[]},{"row_idx":15,"row":{"code":"using System.Diagnostics;\n\nnamespace Lucene.Net.Index\n{\n    using Lucene.Net.Util;\n\n    /*\n     * Licensed to the Apache Software Foundation (ASF) under one or more\n     * contributor license agreements.  See the NOTICE file distributed with\n     * this work for additional information regarding copyright ownership.\n     * The ASF licenses this file to You under the Apache License, Version 2.0\n     * (the \"License\"); you may not use this file except in compliance with\n     * the License.  You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n\n    /// <summary>\n    /// Filters the incoming reader and makes all documents appear deleted.\n    /// </summary>\n    public class AllDeletedFilterReader : FilterAtomicReader\n    {\n        internal readonly IBits LiveDocs_Renamed;\n\n        public AllDeletedFilterReader(AtomicReader @in)\n            : base(@in)\n        {\n            LiveDocs_Renamed = new Bits.MatchNoBits(@in.MaxDoc);\n            Debug.Assert(MaxDoc == 0 || HasDeletions);\n        }\n\n        public override IBits LiveDocs\n        {\n            get\n            {\n                return LiveDocs_Renamed;\n            }\n        }\n\n        public override int NumDocs\n        {\n            get { return 0; }\n        }\n    }\n}","repo_name":"laimis/lucenenet","path":"src/Lucene.Net.TestFramework/Index/AllDeletedFilterReader.cs","language":"C#","license":"apache-2.0","size":1641},"truncated_cells":[]},{"row_idx":16,"row":{"code":"package files\n\nimport (\n\t\"bytes\"\n\t\"io\"\n\t\"io/ioutil\"\n\t\"strings\"\n\n\t\"github.com/golang/protobuf/proto\"\n\t\"github.com/octavore/nagax/util/errors\"\n\tuuid \"github.com/satori/go.uuid\"\n\t\"github.com/willnorris/imageproxy\"\n\n\t\"github.com/ketchuphq/ketchup/proto/ketchup/models\"\n)\n\nfunc (m *Module) Upload(filename string, wr io.Reader) (*models.File, error) {\n\t// files are assigned a random id when stored to discourage manual renaming of files\n\tfilename = strings.TrimPrefix(filename, \"/\")\n\tfile, err := m.DB.GetFileByName(filename)\n\tif err != nil {\n\t\treturn nil, errors.Wrap(err)\n\t}\n\n\tif file == nil || file.GetUuid() == \"\" {\n\t\tfile = &models.File{\n\t\t\tUuid: proto.String(uuid.NewV4().String()),\n\t\t\tName: proto.String(filename),\n\t\t}\n\t}\n\n\terr = m.store.Upload(file.GetUuid(), wr)\n\tif err != nil {\n\t\treturn nil, errors.Wrap(err)\n\t}\n\n\terr = m.DB.UpdateFile(file)\n\tif err != nil {\n\t\treturn nil, errors.Wrap(err)\n\t}\n\n\treturn file, nil\n}\n\n// Get returns a reader, and nil, nil if file is not found\nfunc (m *Module) Get(filename string) (io.ReadCloser, error) {\n\tfilename = strings.TrimPrefix(filename, \"/\")\n\tfile, err := m.DB.GetFileByName(filename)\n\tif err != nil {\n\t\treturn nil, errors.Wrap(err)\n\t}\n\tif file == nil {\n\t\treturn nil, nil\n\t}\n\treturn m.store.Get(file.GetUuid())\n}\n\n// Get returns a reader, and nil, nil if file is not found\nfunc (m *Module) Delete(uuid string) error {\n\tfile, err := m.DB.GetFile(uuid)\n\tif err != nil {\n\t\treturn errors.Wrap(err)\n\t}\n\tif file == nil {\n\t\treturn nil\n\t}\n\terr = m.DB.DeleteFile(file)\n\tif err != nil {\n\t\treturn errors.Wrap(err)\n\t}\n\treturn m.store.Delete(file.GetUuid())\n}\n\n// GetWithTransform attempts to transform the image\nfunc (m *Module) GetWithTransform(filename string, optStr string) (io.ReadCloser, error) {\n\tfilename = strings.TrimPrefix(filename, \"/\")\n\tr, err := m.Get(filename)\n\tif r == nil || err != nil || optStr == \"\" {\n\t\treturn r, err\n\t}\n\n\tdefer r.Close()\n\tdata, err := ioutil.ReadAll(r)\n\tif err != nil {\n\t\treturn nil, errors.Wrap(err)\n\t}\n\n\topts := imageproxy.ParseOptions(optStr)\n\toutput, err := imageproxy.Transform(data, opts)\n\tif err != nil {\n\t\treturn nil, errors.Wrap(err)\n\t}\n\n\treturn ioutil.NopCloser(bytes.NewBuffer(output)), nil\n}\n","repo_name":"ketchuphq/ketchup","path":"server/files/actions.go","language":"GO","license":"apache-2.0","size":2177},"truncated_cells":[]},{"row_idx":17,"row":{"code":"<!-- Do not edit this file. It is automatically generated by API Documenter. -->\r\n\r\n[Home](./index.md) &gt; [puppeteer](./puppeteer.md) &gt; [Protocol](./puppeteer.protocol.md) &gt; [SystemInfo](./puppeteer.protocol.systeminfo.md) &gt; [GPUInfo](./puppeteer.protocol.systeminfo.gpuinfo.md) &gt; [videoEncoding](./puppeteer.protocol.systeminfo.gpuinfo.videoencoding.md)\r\n\r\n## Protocol.SystemInfo.GPUInfo.videoEncoding property\r\n\r\nSupported accelerated video encoding capabilities.\r\n\r\n<b>Signature:</b>\r\n\r\n```typescript\r\nvideoEncoding: VideoEncodeAcceleratorCapability[];\r\n```\r\n","repo_name":"GoogleChrome/puppeteer","path":"new-docs/puppeteer.protocol.systeminfo.gpuinfo.videoencoding.md","language":"Markdown","license":"apache-2.0","size":576},"truncated_cells":[]},{"row_idx":18,"row":{"code":"sap.ui.define(['sap/ui/webc/common/thirdparty/base/asset-registries/Icons'], function (Icons) { 'use strict';\n\n\tconst name = \"status-completed\";\n\tconst pathData = \"M256 0q53 0 99.5 20T437 75t55 81.5 20 99.5-20 99.5-55 81.5-81.5 55-99.5 20-99.5-20T75 437t-55-81.5T0 256t20-99.5T75 75t81.5-55T256 0zM128 256q-14 0-23 9t-9 23q0 12 9 23l64 64q11 9 23 9 13 0 23-9l192-192q9-11 9-23 0-13-9.5-22.5T384 128q-12 0-23 9L192 307l-41-42q-10-9-23-9z\";\n\tconst ltr = false;\n\tconst collection = \"SAP-icons-v5\";\n\tconst packageName = \"@ui5/webcomponents-icons\";\n\tIcons.registerIcon(name, { pathData, ltr, collection, packageName });\n\tvar pathDataV4 = { pathData };\n\n\treturn pathDataV4;\n\n});\n","repo_name":"SAP/openui5","path":"src/sap.ui.webc.common/src/sap/ui/webc/common/thirdparty/icons/v5/status-completed.js","language":"JavaScript","license":"apache-2.0","size":673},"truncated_cells":[]},{"row_idx":19,"row":{"code":"package com.yueny.demo.downlatch.holder;\r\n\r\nimport java.util.List;\r\nimport java.util.Vector;\r\n\r\nimport org.apache.commons.collections4.CollectionUtils;\r\n\r\nimport com.yueny.demo.downlatch.bo.RecoverResult;\r\n\r\n/**\r\n * @author yueny09 <deep_blue_yang@163.com>\r\n *\r\n * @DATE 2016年3月22日 下午1:15:25\r\n *\r\n */\r\npublic class TransResultHolder {\r\n\tprivate final List<RecoverResult> failList = new Vector<RecoverResult>();\r\n\r\n\tprivate Integer recoverCount = 0;\r\n\r\n\tprivate final List<String> succList = new Vector<String>();\r\n\r\n\tpublic synchronized void addResults(final List<RecoverResult> resultList) {\r\n\t\tif (!CollectionUtils.isEmpty(resultList)) {\r\n\t\t\trecoverCount += resultList.size();\r\n\t\t\tfor (final RecoverResult recoverResult : resultList) {\r\n\t\t\t\tif (recoverResult.isSucc()) {\r\n\t\t\t\t\tsuccList.add(recoverResult.getTransId());\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfailList.add(recoverResult);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic synchronized List<RecoverResult> getFailList() {\r\n\t\treturn failList;\r\n\t}\r\n\r\n\tpublic synchronized Integer getRecoverCount() {\r\n\t\treturn recoverCount;\r\n\t}\r\n\r\n\tpublic synchronized List<String> getSuccList() {\r\n\t\treturn succList;\r\n\t}\r\n\r\n}\r\n","repo_name":"yueny/pra","path":"exec/src/main/java/com/yueny/demo/downlatch/holder/TransResultHolder.java","language":"Java","license":"apache-2.0","size":1149},"truncated_cells":[]},{"row_idx":20,"row":{"code":"﻿using System.Collections.Generic;\nusing System.Data.Entity;\nusing System.Linq;\nusing System.Web.Http;\nusing Divergent.Sales.Data.Context;\n\nnamespace Divergent.Sales.API.Controllers\n{\n    [RoutePrefix(\"api/orders\")]\n    public class OrdersController : ApiController\n    {\n        private readonly ISalesContext _context;\n\n        public OrdersController(ISalesContext context)\n        {\n            _context = context;\n        }\n\n        [HttpGet]\n        public IEnumerable<dynamic> Get(int p = 0, int s = 10)\n        {\n            var orders = _context.Orders\n                .Include(i => i.Items)\n                .Include(i => i.Items.Select(x => x.Product))\n                .ToArray();\n\n            return orders\n                .Skip(p * s)\n                .Take(s)\n                .Select(o => new\n                {\n                    o.Id,\n                    o.CustomerId,\n                    ProductIds = o.Items.Select(i => i.Product.Id),\n                    ItemsCount = o.Items.Count\n                });\n        }\n    }\n}\n","repo_name":"jbogard/Workshop.Microservices","path":"exercises/src/01 CompositeUI/after/Divergent.Sales.API/Controllers/OrdersController.cs","language":"C#","license":"apache-2.0","size":1038},"truncated_cells":[]},{"row_idx":21,"row":{"code":"from google.appengine.ext import db\n\nclass Stuff (db.Model):\n    owner = db.UserProperty(required=True, auto_current_user=True)\n    pulp = db.BlobProperty()\n\nclass Greeting(db.Model):\n    author = db.UserProperty()\n    content = db.StringProperty(multiline=True)\n    avatar = db.BlobProperty()\n    date = db.DateTimeProperty(auto_now_add=True)\n\nclass Placebo(db.Model):\n    developer = db.StringProperty()\n    OID = db.StringProperty()\n    concept = db.StringProperty()\n    category = db.StringProperty()\n    taxonomy = db.StringProperty()\n    taxonomy_version = db.StringProperty()\n    code = db.StringProperty()\n    descriptor = db.StringProperty()\n","repo_name":"0--key/lib","path":"portfolio/2009_GoogleAppEngine/apps/0--key/models.py","language":"Python","license":"apache-2.0","size":651},"truncated_cells":[]},{"row_idx":22,"row":{"code":"package io.github.mayunfei.simple;\n\n/**\n * Created by mayunfei on 17-9-7.\n */\n\npublic class OrientationUtils {\n}\n","repo_name":"MaYunFei/TXLiveDemo","path":"app/src/main/java/io/github/mayunfei/simple/OrientationUtils.java","language":"Java","license":"apache-2.0","size":113},"truncated_cells":[]},{"row_idx":23,"row":{"code":"﻿using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nusing LCL.Domain.Model;\r\nusing LCL.Domain.Specifications;\r\n\r\n\r\nnamespace LCL.Domain.Repositories.Specifications\r\n{\r\n    public class SalesOrderIDEqualsSpecification : Specification<SalesOrder>\r\n    {\r\n        private readonly Guid orderID;\r\n\r\n        public SalesOrderIDEqualsSpecification(Guid orderID)\r\n        {\r\n            this.orderID = orderID;\r\n        }\r\n\r\n        public override System.Linq.Expressions.Expression<Func<SalesOrder, bool>> GetExpression()\r\n        {\r\n            return p => p.ID == orderID;\r\n        }\r\n    }\r\n}\r\n","repo_name":"luomingui/LCLFramework","path":"LCLDemo/LCL.Domain/Specifications/SalesOrderIDEqualsSpecification.cs","language":"C#","license":"apache-2.0","size":635},"truncated_cells":[]},{"row_idx":24,"row":{"code":"/*\n * Swift Parallel Scripting Language (http://swift-lang.org)\n * Code from Java CoG Kit Project (see notice below) with modifications.\n *\n * Copyright 2005-2014 University of Chicago\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//----------------------------------------------------------------------\n//This code is developed as part of the Java CoG Kit project\n//The terms of the license can be found at http://www.cogkit.org/license\n//This message may not be removed or altered.\n//----------------------------------------------------------------------\n\n/*\n * Created on Mar 28, 2014\n */\npackage org.griphyn.vdl.mapping.nodes;\n\nimport java.util.HashMap;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\n\nimport k.thr.LWThread;\n\nimport org.griphyn.vdl.karajan.Pair;\nimport org.griphyn.vdl.mapping.DSHandle;\nimport org.griphyn.vdl.mapping.DuplicateMappingChecker;\nimport org.griphyn.vdl.mapping.HandleOpenException;\nimport org.griphyn.vdl.mapping.Mapper;\nimport org.griphyn.vdl.mapping.Path;\nimport org.griphyn.vdl.mapping.RootHandle;\nimport org.griphyn.vdl.mapping.file.FileGarbageCollector;\nimport org.griphyn.vdl.type.Field;\nimport org.griphyn.vdl.type.Types;\n\npublic class RootClosedMapDataNode extends AbstractClosedDataNode implements ArrayHandle, RootHandle {\n\tprivate int line = -1;\n    private LWThread thread;\n    private Mapper mapper;\n    private Map<Comparable<?>, DSHandle> values;\n    \n    public RootClosedMapDataNode(Field field, Map<?, ?> values, DuplicateMappingChecker dmChecker) {\n    \tsuper(field);\n    \tsetValues(values);\n    \tif (getType().itemType().hasMappedComponents()) {\n            this.mapper = new InitMapper(dmChecker);\n        }\n    }\n    \n    private void setValues(Map<?, ?> m) {\n        values = new HashMap<Comparable<?>, DSHandle>();\n        for (Map.Entry<?, ? extends Object> e : m.entrySet()) {\n            Comparable<?> k = (Comparable<?>) e.getKey();\n            Object n = e.getValue();\n            if (n instanceof DSHandle) {\n                values.put(k, (DSHandle) n);\n            }\n            else if (n instanceof String) {\n                values.put(k, \n                    NodeFactory.newNode(Field.Factory.createField(k, Types.STRING), getRoot(), this, n));\n            }\n            else if (n instanceof Integer) {\n                values.put(k, \n                    NodeFactory.newNode(Field.Factory.createField(k, Types.INT), getRoot(), this, n));\n            }\n            else if (n instanceof Double) {\n                values.put(k, \n                    NodeFactory.newNode(Field.Factory.createField(k, Types.FLOAT), getRoot(), this, n));\n            }\n            else {\n                throw new RuntimeException(\n                        \"An array variable can only be initialized by a list of DSHandle or primitive values\");\n            }\n        }\n    }\n\n    @Override\n    public RootHandle getRoot() {\n        return this;\n    }\n\n    @Override\n    public DSHandle getParent() {\n        return null;\n    }\n\n    @Override\n    public Path getPathFromRoot() {\n        return Path.EMPTY_PATH;\n    }\n\n    @Override\n    public void init(Mapper mapper) {\n        if (!getType().itemType().hasMappedComponents()) {\n            return;\n        }\n        if (mapper == null) {\n            initialized();\n        }\n        else {\n            this.getInitMapper().setMapper(mapper);\n            this.mapper.initialize(this);\n        }  \n    }\n    \n    @Override\n    public void mapperInitialized(Mapper mapper) {\n        synchronized(this) {\n            this.mapper = mapper;\n        }\n        initialized();\n    }\n\n    protected void initialized() {\n        if (variableTracer.isEnabled()) {\n            variableTracer.trace(thread, line, getName() + \" INITIALIZED \" + mapper);\n        }\n    }\n    \n    public synchronized Mapper getMapper() {\n        if (mapper instanceof InitMapper) {\n            return ((InitMapper) mapper).getMapper();\n        }\n        else {\n            return mapper;\n        }\n    }\n\n    @Override\n    public int getLine() {\n        return line;\n    }\n\n    @Override\n    public void setLine(int line) {\n        this.line = line;\n    }\n\n    @Override\n    public void setThread(LWThread thread) {\n        this.thread = thread;\n    }\n\n    @Override\n    public LWThread getThread() {\n        return thread;\n    }\n    \n    @Override\n    public String getName() {\n        return (String) getField().getId();\n    }\n    \n    @Override\n    protected AbstractDataNode getParentNode() {\n        return null;\n    }\n\n    @Override\n    public Mapper getActualMapper() {\n        return mapper;\n    }\n\n    @Override\n    public void closeArraySizes() {\n        // already closed\n    }\n\n    @Override\n    public Object getValue() {\n        return values;\n    }\n    \n    @Override\n    public Map<Comparable<?>, DSHandle> getArrayValue() {\n        return values;\n    }\n\n    @Override\n    public boolean isArray() {\n        return true;\n    }\n    \n    \n\n    @Override\n    public Iterable<List<?>> entryList() {\n        final Iterator<Map.Entry<Comparable<?>, DSHandle>> i = values.entrySet().iterator();\n        return new Iterable<List<?>>() {\n            @Override\n            public Iterator<List<?>> iterator() {\n                return new Iterator<List<?>>() {\n                    @Override\n                    public boolean hasNext() {\n                        return i.hasNext();\n                    }\n\n                    @Override\n                    public List<?> next() {\n                        Map.Entry<Comparable<?>, DSHandle> e = i.next();\n                        return new Pair<Object>(e.getKey(), e.getValue());\n                    }\n\n                    @Override\n                    public void remove() {\n                        i.remove();\n                    }\n                };\n            }\n        };\n    }\n\n    @Override\n    protected Object getRawValue() {\n        return values;\n    }\n\n    @Override\n    protected void getFringePaths(List<Path> list, Path myPath)\n            throws HandleOpenException {\n        for (Map.Entry<Comparable<?>, DSHandle> e : values.entrySet()) {\n            DSHandle h = e.getValue();\n            if (h instanceof AbstractDataNode) {\n                AbstractDataNode ad = (AbstractDataNode) h;\n                ad.getFringePaths(list, myPath.addLast(e.getKey()));\n            }\n            else {\n                list.addAll(h.getFringePaths());\n            }\n        }\n    }\n\n    @Override\n    public void getLeaves(List<DSHandle> list) throws HandleOpenException {\n        for (Map.Entry<Comparable<?>, DSHandle> e : values.entrySet()) {\n            DSHandle h = e.getValue();\n            if (h instanceof AbstractDataNode) {\n                AbstractDataNode ad = (AbstractDataNode) h;\n                ad.getLeaves(list);\n            }\n            else {\n                list.addAll(h.getLeaves());\n            }\n        }\n    }\n    \n    @Override\n    public int arraySize() {\n        return values.size();\n    }\n    \n    @Override\n    protected void clean0() {\n        FileGarbageCollector.getDefault().clean(this);\n        super.clean0();\n    }\n    \n    @Override\n    protected void finalize() throws Throwable {\n        if (!isCleaned()) {\n            clean();\n        }\n        super.finalize();\n    }\n}\n","repo_name":"swift-lang/swift-k","path":"src/org/griphyn/vdl/mapping/nodes/RootClosedMapDataNode.java","language":"Java","license":"apache-2.0","size":7772},"truncated_cells":[]},{"row_idx":25,"row":{"code":"var baseClone = require('./_baseClone');\n\n/**\n * This method is like `_.clone` except that it accepts `customizer` which\n * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n * cloning is handled by the method instead. The `customizer` is invoked with\n * up to four arguments; (value [, index|key, object, stack]).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to clone.\n * @param {Function} [customizer] The function to customize cloning.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeepWith\n * @example\n *\n * function customizer(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(false);\n *   }\n * }\n *\n * var el = _.cloneWith(document.body, customizer);\n *\n * console.log(el === document.body);\n * // => false\n * console.log(el.nodeName);\n * // => 'BODY'\n * console.log(el.childNodes.length);\n * // => 0\n */\nfunction cloneWith(value, customizer) {\n    customizer = typeof customizer == 'function' ? customizer : undefined;\n    return baseClone(value, false, true, customizer);\n}\n\nmodule.exports = cloneWith;\n","repo_name":"ionutbarau/petstore","path":"petstore-app/src/main/resources/static/node_modules/bower/lib/node_modules/lodash/cloneWith.js","language":"JavaScript","license":"apache-2.0","size":1117},"truncated_cells":[]},{"row_idx":26,"row":{"code":"# Copyright 2015 Google Inc. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ==============================================================================\n\n\"\"\"Tests for tensorflow.ops.math_ops.matmul.\"\"\"\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\nimport tensorflow.python.platform\n\nimport numpy as np\nimport tensorflow as tf\n\nfrom tensorflow.python.kernel_tests import gradient_checker as gc\n\n\nclass MatMulTest(tf.test.TestCase):\n\n  def _testCpuMatmul(self, x, y, transpose_x=False, transpose_y=False):\n    x_mat = np.matrix(x).T if transpose_x else np.matrix(x)\n    y_mat = np.matrix(y).T if transpose_y else np.matrix(y)\n    np_ans = x_mat * y_mat\n    with self.test_session(use_gpu=False):\n      tf_ans = tf.matmul(x, y, transpose_x, transpose_y).eval()\n    self.assertAllClose(np_ans, tf_ans)\n    self.assertAllEqual(np_ans.shape, tf_ans.shape)\n\n  def _testGpuMatmul(self, x, y, transpose_x=False, transpose_y=False):\n    x_mat = np.matrix(x).T if transpose_x else np.matrix(x)\n    y_mat = np.matrix(y).T if transpose_y else np.matrix(y)\n    np_ans = x_mat * y_mat\n    with self.test_session(use_gpu=True):\n      tf_ans = tf.matmul(x, y, transpose_x, transpose_y).eval()\n    self.assertAllClose(np_ans, tf_ans)\n    self.assertAllEqual(np_ans.shape, tf_ans.shape)\n\n  def _randMatrix(self, rows, cols, dtype):\n    if dtype is np.complex64:\n      real = self._randMatrix(rows, cols, np.float32)\n      imag = self._randMatrix(rows, cols, np.float32)\n      return real + np.complex(0, 1) * imag\n    else:\n      return np.random.uniform(low=1.0, high=100.0, size=rows * cols).reshape(\n          [rows, cols]).astype(dtype)\n\n  # Basic test:\n  #   [ [1],\n  #     [2],\n  #     [3],   *  [1, 2]\n  #     [4] ]\n  def testFloatBasic(self):\n    x = np.arange(1., 5.).reshape([4, 1]).astype(np.float32)\n    y = np.arange(1., 3.).reshape([1, 2]).astype(np.float32)\n    self._testCpuMatmul(x, y)\n    self._testGpuMatmul(x, y)\n\n  def testDoubleBasic(self):\n    x = np.arange(1., 5.).reshape([4, 1]).astype(np.float64)\n    y = np.arange(1., 3.).reshape([1, 2]).astype(np.float64)\n    self._testCpuMatmul(x, y)\n\n  def testInt32Basic(self):\n    x = np.arange(1., 5.).reshape([4, 1]).astype(np.int32)\n    y = np.arange(1., 3.).reshape([1, 2]).astype(np.int32)\n    self._testCpuMatmul(x, y)\n\n  def testSComplexBasic(self):\n    x = np.arange(1., 5.).reshape([4, 1]).astype(np.complex64)\n    y = np.arange(1., 3.).reshape([1, 2]).astype(np.complex64)\n    self._testCpuMatmul(x, y)\n\n  # Tests testing random sized matrices.\n  def testFloatRandom(self):\n    for _ in range(10):\n      n, k, m = np.random.randint(1, 100, size=3)\n      x = self._randMatrix(n, k, np.float32)\n      y = self._randMatrix(k, m, np.float32)\n      self._testCpuMatmul(x, y)\n      self._testGpuMatmul(x, y)\n\n  def testDoubleRandom(self):\n    for _ in range(10):\n      n, k, m = np.random.randint(1, 100, size=3)\n      x = self._randMatrix(n, k, np.float64)\n      y = self._randMatrix(k, m, np.float64)\n      self._testCpuMatmul(x, y)\n\n  def testInt32Random(self):\n    for _ in range(10):\n      n, k, m = np.random.randint(1, 100, size=3)\n      x = self._randMatrix(n, k, np.int32)\n      y = self._randMatrix(k, m, np.int32)\n      self._testCpuMatmul(x, y)\n\n  def testSComplexRandom(self):\n    for _ in range(10):\n      n, k, m = np.random.randint(1, 100, size=3)\n      x = self._randMatrix(n, k, np.complex64)\n      y = self._randMatrix(k, m, np.complex64)\n      self._testCpuMatmul(x, y)\n\n  # Test the cases that transpose the matrices before multiplying.\n  # NOTE(keveman): The cases where only one of the inputs is\n  # transposed are covered by tf.matmul's gradient function.\n  def testFloatRandomTransposeBoth(self):\n    for _ in range(10):\n      n, k, m = np.random.randint(1, 100, size=3)\n      x = self._randMatrix(k, n, np.float32)\n      y = self._randMatrix(m, k, np.float32)\n      self._testCpuMatmul(x, y, True, True)\n      self._testGpuMatmul(x, y, True, True)\n\n  def testDoubleRandomTranposeBoth(self):\n    for _ in range(10):\n      n, k, m = np.random.randint(1, 100, size=3)\n      x = self._randMatrix(k, n, np.float64)\n      y = self._randMatrix(m, k, np.float64)\n      self._testCpuMatmul(x, y, True, True)\n\n  def testMatMul_OutEmpty_A(self):\n    n, k, m = 0, 8, 3\n    x = self._randMatrix(n, k, np.float32)\n    y = self._randMatrix(k, m, np.float32)\n    self._testCpuMatmul(x, y)\n    self._testGpuMatmul(x, y)\n\n  def testMatMul_OutEmpty_B(self):\n    n, k, m = 3, 8, 0\n    x = self._randMatrix(n, k, np.float32)\n    y = self._randMatrix(k, m, np.float32)\n    self._testCpuMatmul(x, y)\n    self._testGpuMatmul(x, y)\n\n  def testMatMul_Inputs_Empty(self):\n    n, k, m = 3, 0, 4\n    x = self._randMatrix(n, k, np.float32)\n    y = self._randMatrix(k, m, np.float32)\n    self._testCpuMatmul(x, y)\n    self._testGpuMatmul(x, y)\n\n\n# TODO(zhifengc): Figures out how to test matmul gradients on GPU.\nclass MatMulGradientTest(tf.test.TestCase):\n\n  def testGradientInput0(self):\n    with self.test_session(use_gpu=False):\n      x = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2],\n                   dtype=tf.float64, name=\"x\")\n      y = tf.constant([1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7],\n                   shape=[2, 4], dtype=tf.float64, name=\"y\")\n      m = tf.matmul(x, y, name=\"matmul\")\n      err = gc.ComputeGradientError(x, [3, 2], m, [3, 4])\n    print(\"matmul input0 gradient err = \", err)\n    self.assertLess(err, 1e-10)\n\n  def testGradientInput1(self):\n    with self.test_session(use_gpu=False):\n      x = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2],\n                   dtype=tf.float64, name=\"x\")\n      y = tf.constant([1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7],\n                   shape=[2, 4], dtype=tf.float64, name=\"y\")\n      m = tf.matmul(x, y, name=\"matmul\")\n      err = gc.ComputeGradientError(y, [2, 4], m, [3, 4])\n    print(\"matmul input1 gradient err = \", err)\n    self.assertLess(err, 1e-10)\n\n  def _VerifyInput0(self, transpose_a, transpose_b):\n    shape_x = [3, 2]\n    shape_y = [2, 4]\n    if transpose_a:\n      shape_x = list(reversed(shape_x))\n    if transpose_b:\n      shape_y = list(reversed(shape_y))\n    with self.test_session(use_gpu=False):\n      x = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=shape_x,\n                   dtype=tf.float64, name=\"x\")\n      y = tf.constant([1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7],\n                   shape=shape_y, dtype=tf.float64, name=\"y\")\n      m = tf.matmul(x, y, transpose_a, transpose_b, name=\"matmul\")\n      err = gc.ComputeGradientError(x, shape_x, m, [3, 4])\n    print(\"matmul input0 gradient err = \", err)\n    self.assertLess(err, 1e-10)\n\n  def testGradientInput0WithTranspose(self):\n    self._VerifyInput0(transpose_a=True, transpose_b=False)\n    self._VerifyInput0(transpose_a=False, transpose_b=True)\n    self._VerifyInput0(transpose_a=True, transpose_b=True)\n\n  def _VerifyInput1(self, transpose_a, transpose_b):\n    shape_x = [3, 2]\n    shape_y = [2, 4]\n    if transpose_a:\n      shape_x = list(reversed(shape_x))\n    if transpose_b:\n      shape_y = list(reversed(shape_y))\n    with self.test_session(use_gpu=False):\n      x = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=shape_x,\n                   dtype=tf.float64, name=\"x\")\n      y = tf.constant([1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7],\n                   shape=shape_y, dtype=tf.float64, name=\"y\")\n      m = tf.matmul(x, y, transpose_a, transpose_b, name=\"matmul\")\n      err = gc.ComputeGradientError(y, shape_y, m, [3, 4])\n    print(\"matmul input1 gradient err = \", err)\n    self.assertLess(err, 1e-10)\n\n  def testGradientInput1WithTranspose(self):\n    self._VerifyInput1(transpose_a=True, transpose_b=False)\n    self._VerifyInput1(transpose_a=False, transpose_b=True)\n    self._VerifyInput1(transpose_a=True, transpose_b=True)\n\n\nif __name__ == \"__main__\":\n  tf.test.main()\n","repo_name":"MehdiSfr/tensor-flow","path":"tensorflow/python/kernel_tests/matmul_op_test.py","language":"Python","license":"apache-2.0","size":8392},"truncated_cells":[]},{"row_idx":27,"row":{"code":"/*\n * #!\n * Ontopoly Editor\n * #-\n * Copyright (C) 2001 - 2013 The Ontopia Project\n * #-\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * !#\n */\npackage ontopoly.components;\n\nimport java.util.Objects;\nimport net.ontopia.topicmaps.core.OccurrenceIF;\nimport ontopoly.model.FieldInstance;\nimport ontopoly.models.FieldValueModel;\nimport ontopoly.pages.AbstractOntopolyPage;\nimport ontopoly.validators.ExternalValidation;\nimport ontopoly.validators.RegexValidator;\nimport org.apache.wicket.markup.ComponentTag;\nimport org.apache.wicket.markup.html.form.TextField;\nimport org.apache.wicket.model.Model;\n\n\npublic class FieldInstanceNumberField extends TextField<String> {\n\n  private FieldValueModel fieldValueModel;\n  private String oldValue;\n  private String cols = \"20\";\n  \n  public FieldInstanceNumberField(String id, FieldValueModel fieldValueModel) {\n    super(id);\n    this.fieldValueModel = fieldValueModel;\n    \n    OccurrenceIF occ = (OccurrenceIF)fieldValueModel.getObject();\n    this.oldValue = (occ == null ? null : occ.getValue());\n    setModel(new Model<String>(oldValue));\n    \n    add(new RegexValidator(this, fieldValueModel.getFieldInstanceModel()) {\n      @Override\n      protected String getRegex() {\n        return \"^[-+]?\\\\d+(\\\\.\\\\d+)?$\";   \n      }\n      @Override\n      protected String resourceKeyInvalidValue() {\n        return \"validators.RegexValidator.number\";\n      }\n    });\n\n    // validate field using registered validators\n    ExternalValidation.validate(this, oldValue);\n  }\n\n  public void setCols(int cols) {\n    this.cols = Integer.toString(cols);\n  }\n  \n  @Override\n  protected void onComponentTag(ComponentTag tag) {\n    tag.setName(\"input\");\n    tag.put(\"type\", \"text\");\n    tag.put(\"size\", cols);\n    super.onComponentTag(tag);\n  }\n  \n  @Override\n  protected void onModelChanged() {\n    super.onModelChanged();\n    String newValue = (String)getModelObject();\n    if (Objects.equals(newValue, oldValue)) return;\n    AbstractOntopolyPage page = (AbstractOntopolyPage)getPage();\n    FieldInstance fieldInstance = fieldValueModel.getFieldInstanceModel().getFieldInstance();\n    if (fieldValueModel.isExistingValue() && oldValue != null)\n      fieldInstance.removeValue(oldValue, page.getListener());\n    if (newValue != null && !newValue.equals(\"\")) {\n      fieldInstance.addValue(newValue, page.getListener());\n      fieldValueModel.setExistingValue(newValue);\n    }\n    oldValue = newValue;\n  }\n  \n}\n","repo_name":"ontopia/ontopia","path":"ontopoly-editor/src/main/java/ontopoly/components/FieldInstanceNumberField.java","language":"Java","license":"apache-2.0","size":2944},"truncated_cells":[]},{"row_idx":28,"row":{"code":"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<!-- NewPage -->\n<html lang=\"en\">\n<head>\n<!-- Generated by javadoc (1.8.0_45) on Tue Jul 28 00:20:21 PDT 2015 -->\n<title>Uses of Package org.apache.zookeeper.client (ZooKeeper 3.5.1-alpha API)</title>\n<meta name=\"date\" content=\"2015-07-28\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../../../../stylesheet.css\" title=\"Style\">\n<script type=\"text/javascript\" src=\"../../../../script.js\"></script>\n</head>\n<body>\n<script type=\"text/javascript\"><!--\n    try {\n        if (location.href.indexOf('is-external=true') == -1) {\n            parent.document.title=\"Uses of Package org.apache.zookeeper.client (ZooKeeper 3.5.1-alpha API)\";\n        }\n    }\n    catch(err) {\n    }\n//-->\n</script>\n<noscript>\n<div>JavaScript is disabled on your browser.</div>\n</noscript>\n<!-- ========= START OF TOP NAVBAR ======= -->\n<div class=\"topNav\"><a name=\"navbar.top\">\n<!--   -->\n</a>\n<div class=\"skipNav\"><a href=\"#skip.navbar.top\" title=\"Skip navigation links\">Skip navigation links</a></div>\n<a name=\"navbar.top.firstrow\">\n<!--   -->\n</a>\n<ul class=\"navList\" title=\"Navigation\">\n<li><a href=\"../../../../overview-summary.html\">Overview</a></li>\n<li><a href=\"package-summary.html\">Package</a></li>\n<li>Class</li>\n<li class=\"navBarCell1Rev\">Use</li>\n<li><a href=\"package-tree.html\">Tree</a></li>\n<li><a href=\"../../../../deprecated-list.html\">Deprecated</a></li>\n<li><a href=\"../../../../index-all.html\">Index</a></li>\n<li><a href=\"../../../../help-doc.html\">Help</a></li>\n</ul>\n</div>\n<div class=\"subNav\">\n<ul class=\"navList\">\n<li>Prev</li>\n<li>Next</li>\n</ul>\n<ul class=\"navList\">\n<li><a href=\"../../../../index.html?org/apache/zookeeper/client/package-use.html\" target=\"_top\">Frames</a></li>\n<li><a href=\"package-use.html\" target=\"_top\">No&nbsp;Frames</a></li>\n</ul>\n<ul class=\"navList\" id=\"allclasses_navbar_top\">\n<li><a href=\"../../../../allclasses-noframe.html\">All&nbsp;Classes</a></li>\n</ul>\n<div>\n<script type=\"text/javascript\"><!--\n  allClassesLink = document.getElementById(\"allclasses_navbar_top\");\n  if(window==top) {\n    allClassesLink.style.display = \"block\";\n  }\n  else {\n    allClassesLink.style.display = \"none\";\n  }\n  //-->\n</script>\n</div>\n<a name=\"skip.navbar.top\">\n<!--   -->\n</a></div>\n<!-- ========= END OF TOP NAVBAR ========= -->\n<div class=\"header\">\n<h1 title=\"Uses of Package org.apache.zookeeper.client\" class=\"title\">Uses of Package<br>org.apache.zookeeper.client</h1>\n</div>\n<div class=\"contentContainer\">No usage of org.apache.zookeeper.client</div>\n<!-- ======= START OF BOTTOM NAVBAR ====== -->\n<div class=\"bottomNav\"><a name=\"navbar.bottom\">\n<!--   -->\n</a>\n<div class=\"skipNav\"><a href=\"#skip.navbar.bottom\" title=\"Skip navigation links\">Skip navigation links</a></div>\n<a name=\"navbar.bottom.firstrow\">\n<!--   -->\n</a>\n<ul class=\"navList\" title=\"Navigation\">\n<li><a href=\"../../../../overview-summary.html\">Overview</a></li>\n<li><a href=\"package-summary.html\">Package</a></li>\n<li>Class</li>\n<li class=\"navBarCell1Rev\">Use</li>\n<li><a href=\"package-tree.html\">Tree</a></li>\n<li><a href=\"../../../../deprecated-list.html\">Deprecated</a></li>\n<li><a href=\"../../../../index-all.html\">Index</a></li>\n<li><a href=\"../../../../help-doc.html\">Help</a></li>\n</ul>\n</div>\n<div class=\"subNav\">\n<ul class=\"navList\">\n<li>Prev</li>\n<li>Next</li>\n</ul>\n<ul class=\"navList\">\n<li><a href=\"../../../../index.html?org/apache/zookeeper/client/package-use.html\" target=\"_top\">Frames</a></li>\n<li><a href=\"package-use.html\" target=\"_top\">No&nbsp;Frames</a></li>\n</ul>\n<ul class=\"navList\" id=\"allclasses_navbar_bottom\">\n<li><a href=\"../../../../allclasses-noframe.html\">All&nbsp;Classes</a></li>\n</ul>\n<div>\n<script type=\"text/javascript\"><!--\n  allClassesLink = document.getElementById(\"allclasses_navbar_bottom\");\n  if(window==top) {\n    allClassesLink.style.display = \"block\";\n  }\n  else {\n    allClassesLink.style.display = \"none\";\n  }\n  //-->\n</script>\n</div>\n<a name=\"skip.navbar.bottom\">\n<!--   -->\n</a></div>\n<!-- ======== END OF BOTTOM NAVBAR ======= -->\n<p class=\"legalCopy\"><small>Copyright &copy; 2015 The Apache Software Foundation</small></p>\n</body>\n</html>\n","repo_name":"BZCareer/zookeeper-quickstart","path":"docs/api/org/apache/zookeeper/client/package-use.html","language":"HTML","license":"apache-2.0","size":4173},"truncated_cells":[]},{"row_idx":29,"row":{"code":"This quick start guide will teach you how to wire up TypeScript with [Knockout.js](http://knockoutjs.com/).\n\nWe assume that you're already using [Node.js](https://nodejs.org/) with [npm](https://www.npmjs.com/).\n\n# Lay out the project\n\nLet's start out with a new directory.\nWe'll name it `proj` for now, but you can change it to whatever you want.\n\n```shell\nmkdir proj\ncd proj\n```\n\nTo start, we're going to structure our project in the following way:\n\n```text\nproj/\n   +- src/\n   +- built/\n```\n\nTypeScript files will start out in your `src` folder, run through the TypeScript compiler, and end up in `built`.\n\nLet's scaffold this out:\n\n```shell\nmkdir src\nmkdir built\n```\n\n# Install our build dependencies\n\nFirst ensure TypeScript and Typings are installed globally.\n\n```shell\nnpm install -g typescript typings\n```\n\nYou obviously know about TypeScript, but you might not know about Typings.\n[Typings](https://www.npmjs.com/package/typings) is a package manager for grabbing definition files.\nWe'll now use Typings to grab declaration files for Knockout:\n\n```shell\ntypings install --global --save dt~knockout\n```\n\nThe `--global` flag will tell Typings to grab any declaration files from [DefinitelyTyped](https://github.com/DefinitelyTyped/DefinitelyTyped), a repository of community-authored `.d.ts` files.\nThis command will create a file called `typings.json` and a folder called `typings` in the current directory.\n\n# Grab our runtime dependencies\n\nWe'll need to grab Knockout itself, as well as something called RequireJS.\n[RequireJS](http://www.requirejs.org/) is a library that enables us to load modules at runtime asynchronously.\n\nThere are several ways we can go about this:\n\n1. Download the files manually and host them.\n2. Download the files through a package manager like [Bower](http://bower.io/) and host them.\n3. Use a Content Delivery Network (CDN) to host both files.\n\nWe'll keep it simple and go with the first option, but Knockout's documentation has [details on using a CDN](http://knockoutjs.com/downloads/index.html), and more libraries like RequireJS can be searched for on [cdnjs](https://cdnjs.com/).\n\nLet's create an `externals` folder in the root of our project.\n\n```shell\nmkdir externals\n```\n\nNow [download Knockout](http://knockoutjs.com/downloads/index.html) and [download RequireJS](http://www.requirejs.org/docs/download.html#latest) into that folder.\nThe latest and minified versions of the files should work just fine.\n\n# Add a TypeScript configuration file\n\nYou'll want to bring your TypeScript files together - both the code you'll be writing as well as any necessary declaration files.\n\nTo do this, you'll need to create a `tsconfig.json` which contains a list of your input files as well as all your compilation settings.\nSimply create a new file in your project root named `tsconfig.json` and fill it with the following contents:\n\n```json\n{\n    \"compilerOptions\": {\n        \"outDir\": \"./built/\",\n        \"sourceMap\": true,\n        \"noImplicitAny\": true,\n        \"module\": \"amd\",\n        \"target\": \"es5\"\n    },\n    \"files\": [\n        \"./typings/index.d.ts\",\n        \"./src/require-config.ts\",\n        \"./src/hello.ts\"\n    ]\n}\n```\n\nWe're including `typings/index.d.ts`, which Typings created for us.\nThat file automatically includes all of your installed dependencies.\n\nYou can learn more about `tsconfig.json` files [here](../tsconfig.json.md).\n\n# Write some code\n\nLet's write our first TypeScript file using Knockout.\nFirst, create a new file in your `src` directory named `hello.ts`.\n\n```ts\nimport * as ko from \"knockout\";\n\nclass HelloViewModel {\n    language: KnockoutObservable<string>\n    framework: KnockoutObservable<string>\n\n    constructor(language: string, framework: string) {\n        this.language = ko.observable(language);\n        this.framework = ko.observable(framework);\n    }\n}\n\nko.applyBindings(new HelloViewModel(\"TypeScript\", \"Knockout\"));\n```\n\nNext, we'll create a file named `require-config.ts` in `src` as well.\n\n```ts\ndeclare var require: any;\nrequire.config({\n    paths: {\n        \"knockout\": \"externals/knockout-3.4.0\",\n    }\n});\n```\n\nThis file will tell RequireJS where to find Knockout when we import it, just like we did in `hello.ts`.\nAny page that you create should include this immediately after RequireJS, but before importing anything else.\nTo get a better understanding of this file and how to configure RequireJS, you can [read up on its documentation](http://requirejs.org/docs/api.html#config).\n\nWe'll also need a view to display our `HelloViewModel`.\nCreate a file at the root of `proj` named `index.html` with the following contents:\n\n```html\n<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"UTF-8\" />\n        <title>Hello Knockout!</title>\n    </head>\n    <body>\n        <p>\n            Hello from\n            <strong data-bind=\"text: language\">todo</strong>\n            and\n            <strong data-bind=\"text: framework\">todo</strong>!\n        </p>\n\n        <p>Language: <input data-bind=\"value: language\" /></p>\n        <p>Framework: <input data-bind=\"value: framework\" /></p>\n\n        <script src=\"./externals/require.js\"></script>\n        <script src=\"./built/require-config.js\"></script>\n        <script>\n            require([\"built/hello\"]);\n        </script>\n    </body>\n</html>\n```\n\nNotice there are three script tags.\nFirst, we're including RequireJS itself.\nThen we're mapping the paths of our external dependencies in `require-config.js` so that RequireJS knows where to look for them.\nFinally, we're calling `require` with a list of modules we'd like to load.\n\n# Putting it all together\n\nJust run:\n\n```shell\ntsc\n```\n\nNow open up `index.html` in your favorite browser and everything should be ready to use!\nYou should see a page that says \"Hello from TypeScript and Knockout!\"\nBelow that, you'll also see two input boxes.\nAs you modify their contents and switch focus, you'll see that the original message changes.\n","repo_name":"zspitz/TypeScript-Handbook","path":"pages/tutorials/Knockout.md","language":"Markdown","license":"apache-2.0","size":5913},"truncated_cells":[]},{"row_idx":30,"row":{"code":"/**********************************************************************\r\nCopyright (c) 2006 Erik Bengtson and others. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. \r\n\r\n\r\nContributors:\r\n    ...\r\n**********************************************************************/\r\npackage org.jpox.samples.types.stringbuffer;\r\n\r\n/**\r\n * Object with a StringBuffer.\r\n */\r\npublic class StringBufferHolder\r\n{\r\n    StringBuffer sb = new StringBuffer();\r\n\r\n    public StringBuffer getStringBuffer()\r\n    {\r\n        return sb;\r\n    }\r\n\r\n    public void setStringBuffer(StringBuffer sb)\r\n    {\r\n        this.sb = sb;\r\n    }\r\n\r\n    public void appendText(String text)\r\n    {\r\n        // Since DataNucleus doesn't support updates to the contents of a StringBuffer we replace it\r\n        StringBuffer sb2 = new StringBuffer(sb.append(text));\r\n        sb = sb2;\r\n    }\r\n\r\n    public String getText()\r\n    {\r\n        return sb.toString();\r\n    }\r\n}","repo_name":"hopecee/texsts","path":"samples/src/java/org/jpox/samples/types/stringbuffer/StringBufferHolder.java","language":"Java","license":"apache-2.0","size":1432},"truncated_cells":[]},{"row_idx":31,"row":{"code":"/*\n * Copyright 2017-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n * \n * http://aws.amazon.com/apache2.0\n * \n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\npackage com.amazonaws.services.importexport.model.transform;\n\nimport javax.annotation.Generated;\n\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.Request;\nimport com.amazonaws.DefaultRequest;\nimport com.amazonaws.http.HttpMethodName;\nimport com.amazonaws.services.importexport.model.*;\nimport com.amazonaws.transform.Marshaller;\nimport com.amazonaws.util.StringUtils;\n\n/**\n * CancelJobRequest Marshaller\n */\n\n@Generated(\"com.amazonaws:aws-java-sdk-code-generator\")\npublic class CancelJobRequestMarshaller implements Marshaller<Request<CancelJobRequest>, CancelJobRequest> {\n\n    public Request<CancelJobRequest> marshall(CancelJobRequest cancelJobRequest) {\n\n        if (cancelJobRequest == null) {\n            throw new SdkClientException(\"Invalid argument passed to marshall(...)\");\n        }\n\n        Request<CancelJobRequest> request = new DefaultRequest<CancelJobRequest>(cancelJobRequest, \"AmazonImportExport\");\n        request.addParameter(\"Action\", \"CancelJob\");\n        request.addParameter(\"Version\", \"2010-06-01\");\n        request.setHttpMethod(HttpMethodName.POST);\n\n        if (cancelJobRequest.getJobId() != null) {\n            request.addParameter(\"JobId\", StringUtils.fromString(cancelJobRequest.getJobId()));\n        }\n\n        if (cancelJobRequest.getAPIVersion() != null) {\n            request.addParameter(\"APIVersion\", StringUtils.fromString(cancelJobRequest.getAPIVersion()));\n        }\n\n        return request;\n    }\n\n}\n","repo_name":"aws/aws-sdk-java","path":"aws-java-sdk-importexport/src/main/java/com/amazonaws/services/importexport/model/transform/CancelJobRequestMarshaller.java","language":"Java","license":"apache-2.0","size":2038},"truncated_cells":[]},{"row_idx":32,"row":{"code":"/*\n * Copyright 2017-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n * \n * http://aws.amazon.com/apache2.0\n * \n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\npackage com.amazonaws.services.personalize.model;\n\nimport java.io.Serializable;\nimport javax.annotation.Generated;\n\nimport com.amazonaws.AmazonWebServiceRequest;\n\n/**\n * \n * @see <a href=\"http://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/DescribeAlgorithm\" target=\"_top\">AWS API\n *      Documentation</a>\n */\n@Generated(\"com.amazonaws:aws-java-sdk-code-generator\")\npublic class DescribeAlgorithmRequest extends com.amazonaws.AmazonWebServiceRequest implements Serializable, Cloneable {\n\n    /**\n     * <p>\n     * The Amazon Resource Name (ARN) of the algorithm to describe.\n     * </p>\n     */\n    private String algorithmArn;\n\n    /**\n     * <p>\n     * The Amazon Resource Name (ARN) of the algorithm to describe.\n     * </p>\n     * \n     * @param algorithmArn\n     *        The Amazon Resource Name (ARN) of the algorithm to describe.\n     */\n\n    public void setAlgorithmArn(String algorithmArn) {\n        this.algorithmArn = algorithmArn;\n    }\n\n    /**\n     * <p>\n     * The Amazon Resource Name (ARN) of the algorithm to describe.\n     * </p>\n     * \n     * @return The Amazon Resource Name (ARN) of the algorithm to describe.\n     */\n\n    public String getAlgorithmArn() {\n        return this.algorithmArn;\n    }\n\n    /**\n     * <p>\n     * The Amazon Resource Name (ARN) of the algorithm to describe.\n     * </p>\n     * \n     * @param algorithmArn\n     *        The Amazon Resource Name (ARN) of the algorithm to describe.\n     * @return Returns a reference to this object so that method calls can be chained together.\n     */\n\n    public DescribeAlgorithmRequest withAlgorithmArn(String algorithmArn) {\n        setAlgorithmArn(algorithmArn);\n        return this;\n    }\n\n    /**\n     * Returns a string representation of this object. This is useful for testing and debugging. Sensitive data will be\n     * redacted from this string using a placeholder value.\n     *\n     * @return A string representation of this object.\n     *\n     * @see java.lang.Object#toString()\n     */\n    @Override\n    public String toString() {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"{\");\n        if (getAlgorithmArn() != null)\n            sb.append(\"AlgorithmArn: \").append(getAlgorithmArn());\n        sb.append(\"}\");\n        return sb.toString();\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        if (this == obj)\n            return true;\n        if (obj == null)\n            return false;\n\n        if (obj instanceof DescribeAlgorithmRequest == false)\n            return false;\n        DescribeAlgorithmRequest other = (DescribeAlgorithmRequest) obj;\n        if (other.getAlgorithmArn() == null ^ this.getAlgorithmArn() == null)\n            return false;\n        if (other.getAlgorithmArn() != null && other.getAlgorithmArn().equals(this.getAlgorithmArn()) == false)\n            return false;\n        return true;\n    }\n\n    @Override\n    public int hashCode() {\n        final int prime = 31;\n        int hashCode = 1;\n\n        hashCode = prime * hashCode + ((getAlgorithmArn() == null) ? 0 : getAlgorithmArn().hashCode());\n        return hashCode;\n    }\n\n    @Override\n    public DescribeAlgorithmRequest clone() {\n        return (DescribeAlgorithmRequest) super.clone();\n    }\n\n}\n","repo_name":"aws/aws-sdk-java","path":"aws-java-sdk-personalize/src/main/java/com/amazonaws/services/personalize/model/DescribeAlgorithmRequest.java","language":"Java","license":"apache-2.0","size":3808},"truncated_cells":[]},{"row_idx":33,"row":{"code":"package testPpermission;\n\nimport android.annotation.TargetApi;\nimport android.app.Application;\nimport android.os.Build;\n\n/**\n * Created by nubor on 13/02/2017.\n */\npublic class App extends Application {\n  @TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH) @Override public void onCreate() {\n    super.onCreate();\n\nthis.registerActivityLifecycleCallbacks(new AppLifeCycle() );\n  }\n}\n","repo_name":"GigigoGreenLabs/gggUtilsSuite","path":"testapplication/src/main/java/testPpermission/App.java","language":"Java","license":"apache-2.0","size":382},"truncated_cells":[]},{"row_idx":34,"row":{"code":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta http-equiv=\"refresh\" content=\"0;URL=type.U27.html\">\n</head>\n<body>\n    <p>Redirecting to <a href=\"type.U27.html\">type.U27.html</a>...</p>\n    <script>location.replace(\"type.U27.html\" + location.search + location.hash);</script>\n</body>\n</html>","repo_name":"nitro-devs/nitro-game-engine","path":"docs/typenum/consts/U27.t.html","language":"HTML","license":"apache-2.0","size":293},"truncated_cells":[]},{"row_idx":35,"row":{"code":"package com.couchbase.lite.testapp.ektorp.tests;\n\nimport org.ektorp.support.OpenCouchDbDocument;\n\nimport java.util.List;\nimport java.util.Set;\n\n@SuppressWarnings(\"serial\")\npublic class TestObject extends OpenCouchDbDocument {\n\n    private Integer foo;\n    private Boolean bar;\n    private String baz;\n    private String status;\n    private String key;\n    private List<String> stuff;\n    private Set<String> stuffSet;\n\n    public Set<String> getStuffSet() {\n        return stuffSet;\n    }\n\n    public void setStuffSet(Set<String> stuffSet) {\n        this.stuffSet = stuffSet;\n    }\n\n\n    public List<String> getStuff() {\n        return stuff;\n    }\n\n    public void setStuff(List<String> stuff) {\n        this.stuff = stuff;\n    }\n\n    public Integer getFoo() {\n        return foo;\n    }\n\n    public void setFoo(Integer foo) {\n        this.foo = foo;\n    }\n\n    public Boolean getBar() {\n        return bar;\n    }\n\n    public void setBar(Boolean bar) {\n        this.bar = bar;\n    }\n\n    public String getBaz() {\n        return baz;\n    }\n\n    public void setBaz(String baz) {\n        this.baz = baz;\n    }\n\n    public String getStatus() {\n        return status;\n    }\n\n    public void setStatus(String status) {\n        this.status = status;\n    }\n\n    public String getKey() {\n        return key;\n    }\n\n    public void setKey(String key) {\n        this.key = key;\n    }\n\n    public TestObject() {\n\n    }\n\n    public TestObject(Integer foo, Boolean bar, String baz) {\n        this.foo = foo;\n        this.bar = bar;\n        this.baz = baz;\n        this.status = null;\n    }\n\n    public TestObject(Integer foo, Boolean bar, String baz, String status) {\n        this.foo = foo;\n        this.bar = bar;\n        this.baz = baz;\n        this.status = status;\n    }\n\n    public TestObject(String id, String key) {\n        this.setId(id);\n        this.key = key;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if(o instanceof TestObject) {\n            TestObject other = (TestObject)o;\n            if(getId() != null && other.getId() != null && getId().equals(other.getId())) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n}\n","repo_name":"couchbaselabs/couchbase-lite-android-ektorp","path":"src/instrumentTest/java/com/couchbase/lite/testapp/ektorp/tests/TestObject.java","language":"Java","license":"apache-2.0","size":2177},"truncated_cells":[]},{"row_idx":36,"row":{"code":"package libgbust\n\nimport (\n\t\"io/ioutil\"\n\t\"net/http\"\n\t\"net/url\"\n\t\"unicode/utf8\"\n)\n\n// CheckDir is used to execute a directory check\nfunc (a *Attacker) CheckDir(word string) *Result {\n\tend, err := url.Parse(word)\n\tif err != nil {\n\t\treturn &Result{\n\t\t\tMsg: \"[!] failed to parse word\",\n\t\t\tErr: err,\n\t\t}\n\t}\n\tfullURL := a.config.URL.ResolveReference(end)\n\treq, err := http.NewRequest(\"GET\", fullURL.String(), nil)\n\tif err != nil {\n\t\treturn &Result{\n\t\t\tMsg: \"[!] failed to create new request\",\n\t\t\tErr: err,\n\t\t}\n\t}\n\n\tfor _, cookie := range a.config.Cookies {\n\t\treq.Header.Set(\"Cookie\", cookie)\n\t}\n\n\tresp, err := a.client.Do(req)\n\tif err != nil {\n\t\treturn &Result{\n\t\t\tErr: err,\n\t\t\tMsg: \"[!] failed to do request\",\n\t\t}\n\t}\n\tdefer resp.Body.Close()\n\n\tlength := new(int64)\n\tif resp.ContentLength <= 0 {\n\t\tbody, err := ioutil.ReadAll(resp.Body)\n\t\tif err == nil {\n\t\t\t*length = int64(utf8.RuneCountInString(string(body)))\n\t\t}\n\t} else {\n\t\t*length = resp.ContentLength\n\t}\n\n\treturn &Result{\n\t\tStatusCode: resp.StatusCode,\n\t\tSize:       length,\n\t\tURL:        resp.Request.URL,\n\t}\n}\n","repo_name":"kkirsche/gbust","path":"libgbust/check.go","language":"GO","license":"apache-2.0","size":1062},"truncated_cells":[]},{"row_idx":37,"row":{"code":"# Uragoga erythrantha Kuntze SPECIES\n\n#### Status\nSYNONYM\n\n#### According to\nThe Catalogue of Life, 3rd January 2011\n\n#### Published in\nnull\n\n#### Original name\nnull\n\n### Remarks\nnull","repo_name":"mdoering/backbone","path":"life/Plantae/Magnoliophyta/Magnoliopsida/Gentianales/Rubiaceae/Palicourea/Palicourea crocea/ Syn. Uragoga erythrantha/README.md","language":"Markdown","license":"apache-2.0","size":183},"truncated_cells":[]},{"row_idx":38,"row":{"code":"# Unona buchananii Engl. SPECIES\n\n#### Status\nSYNONYM\n\n#### According to\nThe Catalogue of Life, 3rd January 2011\n\n#### Published in\nnull\n\n#### Original name\nnull\n\n### Remarks\nnull","repo_name":"mdoering/backbone","path":"life/Plantae/Magnoliophyta/Magnoliopsida/Magnoliales/Annonaceae/Monanthotaxis/Monanthotaxis buchananii/ Syn. Unona buchananii/README.md","language":"Markdown","license":"apache-2.0","size":179},"truncated_cells":[]},{"row_idx":39,"row":{"code":"# Stecchericium solomonense Corner, 1989 SPECIES\n\n#### Status\nSYNONYM\n\n#### According to\nThe Catalogue of Life, 3rd January 2011\n\n#### Published in\nBeih. Nova Hedwigia 96: 124 (1989)\n\n#### Original name\nStecchericium solomonense Corner, 1989\n\n### Remarks\nnull","repo_name":"mdoering/backbone","path":"life/Fungi/Basidiomycota/Agaricomycetes/Russulales/Bondarzewiaceae/Wrightoporia/Wrightoporia solomonensis/ Syn. Stecchericium solomonense/README.md","language":"Markdown","license":"apache-2.0","size":259},"truncated_cells":[]},{"row_idx":40,"row":{"code":"# Tasmannia coriacea (Pulle) A.C.Sm. SPECIES\n\n#### Status\nACCEPTED\n\n#### According to\nInternational Plant Names Index\n\n#### Published in\nnull\n\n#### Original name\nnull\n\n### Remarks\nnull","repo_name":"mdoering/backbone","path":"life/Plantae/Magnoliophyta/Magnoliopsida/Canellales/Winteraceae/Tasmannia/Tasmannia coriacea/README.md","language":"Markdown","license":"apache-2.0","size":184},"truncated_cells":[]},{"row_idx":41,"row":{"code":"# Carex diclina Phil. SPECIES\n\n#### Status\nSYNONYM\n\n#### According to\nThe Catalogue of Life, 3rd January 2011\n\n#### Published in\nnull\n\n#### Original name\nnull\n\n### Remarks\nnull","repo_name":"mdoering/backbone","path":"life/Plantae/Magnoliophyta/Liliopsida/Poales/Cyperaceae/Carex/Carex gayana/ Syn. Carex diclina/README.md","language":"Markdown","license":"apache-2.0","size":176},"truncated_cells":[]},{"row_idx":42,"row":{"code":"# Otopappus pittieri (Greenm.) B.L.Turner SPECIES\n\n#### Status\nACCEPTED\n\n#### According to\nInternational Plant Names Index\n\n#### Published in\nnull\n\n#### Original name\nZexmenia pittieri Greenm.\n\n### Remarks\nnull","repo_name":"mdoering/backbone","path":"life/Plantae/Magnoliophyta/Magnoliopsida/Asterales/Asteraceae/Otopappus/Otopappus pittieri/README.md","language":"Markdown","license":"apache-2.0","size":210},"truncated_cells":[]},{"row_idx":43,"row":{"code":"# Schima beccarii Warb. SPECIES\n\n#### Status\nACCEPTED\n\n#### According to\nInternational Plant Names Index\n\n#### Published in\nnull\n\n#### Original name\nnull\n\n### Remarks\nnull","repo_name":"mdoering/backbone","path":"life/Plantae/Magnoliophyta/Magnoliopsida/Ericales/Theaceae/Schima/Schima beccarii/README.md","language":"Markdown","license":"apache-2.0","size":171},"truncated_cells":[]},{"row_idx":44,"row":{"code":"# Amyridaceae Kunth FAMILY\n\n#### Status\nSYNONYM\n\n#### According to\nGRIN Taxonomy for Plants\n\n#### Published in\nnull\n\n#### Original name\nnull\n\n### Remarks\nnull","repo_name":"mdoering/backbone","path":"life/Plantae/Magnoliophyta/Magnoliopsida/Sapindales/Rutaceae/ Syn. Amyridaceae/README.md","language":"Markdown","license":"apache-2.0","size":158},"truncated_cells":[]},{"row_idx":45,"row":{"code":"# Eugenia turneri McVaugh SPECIES\n\n#### Status\nACCEPTED\n\n#### According to\nThe Catalogue of Life, 3rd January 2011\n\n#### Published in\nnull\n\n#### Original name\nnull\n\n### Remarks\nnull","repo_name":"mdoering/backbone","path":"life/Plantae/Magnoliophyta/Magnoliopsida/Myrtales/Myrtaceae/Eugenia/Eugenia turneri/README.md","language":"Markdown","license":"apache-2.0","size":181},"truncated_cells":[]},{"row_idx":46,"row":{"code":"# Ebnerella moelleriana (Boed.) P.Buxb. SPECIES\n\n#### Status\nACCEPTED\n\n#### According to\nInternational Plant Names Index\n\n#### Published in\nnull\n\n#### Original name\nnull\n\n### Remarks\nnull","repo_name":"mdoering/backbone","path":"life/Plantae/Magnoliophyta/Magnoliopsida/Caryophyllales/Cactaceae/Mammillaria/Ebnerella moelleriana/README.md","language":"Markdown","license":"apache-2.0","size":187},"truncated_cells":[]},{"row_idx":47,"row":{"code":"# Biophytum casiquiarense Knuth SPECIES\n\n#### Status\nACCEPTED\n\n#### According to\nInternational Plant Names Index\n\n#### Published in\nnull\n\n#### Original name\nnull\n\n### Remarks\nnull","repo_name":"mdoering/backbone","path":"life/Plantae/Magnoliophyta/Magnoliopsida/Oxalidales/Oxalidaceae/Biophytum/Biophytum casiquiarense/README.md","language":"Markdown","license":"apache-2.0","size":179},"truncated_cells":[]},{"row_idx":48,"row":{"code":"# Gigotorcya Buc'hoz GENUS\n\n#### Status\nACCEPTED\n\n#### According to\nInternational Plant Names Index\n\n#### Published in\nnull\n\n#### Original name\nnull\n\n### Remarks\nnull","repo_name":"mdoering/backbone","path":"life/Plantae/Gigotorcya/README.md","language":"Markdown","license":"apache-2.0","size":166},"truncated_cells":[]},{"row_idx":49,"row":{"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.s4.comm.zk;\n\nimport org.apache.s4.comm.core.CommEventCallback;\nimport org.apache.s4.comm.core.DefaultWatcher;\nimport org.apache.s4.comm.core.TaskManager;\nimport org.apache.s4.comm.util.JSONUtil;\nimport org.apache.s4.comm.util.ConfigParser.Cluster.ClusterType;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Random;\nimport org.apache.log4j.Logger;\nimport org.apache.zookeeper.CreateMode;\nimport org.apache.zookeeper.KeeperException;\nimport org.apache.zookeeper.ZooDefs.Ids;\nimport org.apache.zookeeper.data.Stat;\n\npublic class ZkTaskManager extends DefaultWatcher implements TaskManager {\n    static Logger logger = Logger.getLogger(ZkTaskManager.class);\n    String tasksListRoot;\n    String processListRoot;\n\n    public ZkTaskManager(String address, String ClusterName, ClusterType clusterType) {\n        this(address, ClusterName, clusterType, null);\n    }\n\n    /**\n     * Constructor of TaskManager\n     * \n     * @param address\n     * @param ClusterName\n     */\n    public ZkTaskManager(String address, String ClusterName, ClusterType clusterType,\n            CommEventCallback callbackHandler) {\n        super(address, callbackHandler);\n        this.root = \"/\" + ClusterName + \"/\" + clusterType.toString();\n        this.tasksListRoot = root + \"/task\";\n        this.processListRoot = root + \"/process\";\n    }\n\n    /**\n     * This will block the process thread from starting the task, when it is\n     * unblocked it will return the data stored in the task node. This data can\n     * be used by the This call assumes that the tasks are already set up\n     * \n     * @return Object containing data related to the task\n     */\n    @Override\n    public Object acquireTask(Map<String, String> customTaskData) {\n        while (true) {\n            synchronized (mutex) {\n                try {\n                    Stat tExists = zk.exists(tasksListRoot, false);\n                    if (tExists == null) {\n                        logger.error(\"Tasks znode:\" + tasksListRoot\n                                + \" not setup.Going to wait\");\n                        tExists = zk.exists(tasksListRoot, true);\n                        if (tExists == null) {\n                            mutex.wait();\n                        }\n                        continue;\n                    }\n                    Stat pExists = zk.exists(processListRoot, false);\n                    if (pExists == null) {\n                        logger.error(\"Process root znode:\" + processListRoot\n                                + \" not setup.Going to wait\");\n                        pExists = zk.exists(processListRoot, true);\n                        if (pExists == null) {\n                            mutex.wait();\n                        }\n                        continue;\n                    }\n                    // setting watch true to tasks node will trigger call back\n                    // if there is any change to task node,\n                    // this is useful to add additional tasks\n                    List<String> tasks = zk.getChildren(tasksListRoot, true);\n                    List<String> processes = zk.getChildren(processListRoot,\n                                                            true);\n                    if (processes.size() < tasks.size()) {\n                        ArrayList<String> tasksAvailable = new ArrayList<String>();\n                        for (int i = 0; i < tasks.size(); i++) {\n                            tasksAvailable.add(\"\" + i);\n                        }\n                        if (processes != null) {\n                            for (String s : processes) {\n                                String taskId = s.split(\"-\")[1];\n                                tasksAvailable.remove(taskId);\n                            }\n                        }\n                        // try pick up a random task\n                        Random random = new Random();\n                        int id = Integer.parseInt(tasksAvailable.get(random.nextInt(tasksAvailable.size())));\n                        String pNode = processListRoot + \"/\" + \"task-\" + id;\n                        String tNode = tasksListRoot + \"/\" + \"task-\" + id;\n                        Stat pNodeStat = zk.exists(pNode, false);\n                        if (pNodeStat == null) {\n                            Stat tNodeStat = zk.exists(tNode, false);\n                            byte[] bytes = zk.getData(tNode, false, tNodeStat);\n                            Map<String, Object> map = (Map<String, Object>) JSONUtil.getMapFromJson(new String(bytes));\n                            // if(!map.containsKey(\"address\")){\n                            // map.put(\"address\",\n                            // InetAddress.getLocalHost().getHostName());\n                            // }\n                            if (customTaskData != null) {\n                                for (String key : customTaskData.keySet()) {\n                                    if (!map.containsKey(key)) {\n                                        map.put(key, customTaskData.get(key));\n                                    }\n                                }\n\n                            }\n                            map.put(\"taskSize\", \"\" + tasks.size());\n                            map.put(\"tasksRootNode\", tasksListRoot);\n                            map.put(\"processRootNode\", processListRoot);\n                            String create = zk.create(pNode,\n                                                      JSONUtil.toJsonString(map)\n                                                              .getBytes(),\n                                                      Ids.OPEN_ACL_UNSAFE,\n                                                      CreateMode.EPHEMERAL);\n                            logger.info(\"Created process Node:\" + pNode + \" :\"\n                                    + create);\n                            return map;\n                        }\n                    } else {\n                        // all the tasks are taken up, will wait for the\n                        logger.info(\"No task available to take up. Going to wait\");\n                        mutex.wait();\n                    }\n                } catch (KeeperException e) {\n                    logger.info(\"Warn:mostly ignorable \" + e.getMessage(), e);\n                } catch (InterruptedException e) {\n                    logger.info(\"Warn:mostly ignorable \" + e.getMessage(), e);\n                }\n            }\n        }\n    }\n}\n","repo_name":"s4/s4","path":"s4-comm/src/main/java/org/apache/s4/comm/zk/ZkTaskManager.java","language":"Java","license":"apache-2.0","size":7311},"truncated_cells":[]},{"row_idx":50,"row":{"code":"\npackage chatty.util.api;\n\nimport chatty.Helper;\nimport chatty.util.DateTime;\nimport java.util.LinkedHashMap;\nimport java.util.Locale;\nimport java.util.logging.Logger;\n\n/**\n * Holds the current info (name, viewers, title, game) of a stream, as well\n * as a history of the same information and stuff like when the info was\n * last requested, whether it's currently waiting for an API response etc.\n * \n * @author tduva\n */\npublic class StreamInfo {\n    \n    private static final Logger LOGGER = Logger.getLogger(StreamInfo.class.getName());\n    \n    /**\n     * All lowercase name of the stream\n     */\n    public final String stream;\n    \n    /**\n     * Correctly capitalized name of the stream. May be null if no set.\n     */\n    private String display_name;\n    \n    private long lastUpdated = 0;\n    private long lastStatusChange = 0;\n    private String status = \"\";\n    private String game = \"\";\n    private int viewers = 0;\n    private long startedAt = -1;\n    private long lastOnline = -1;\n    private long startedAtWithPicnic = -1;\n    private boolean online = false;\n    private boolean updateSucceeded = false;\n    private int updateFailedCounter = 0;\n    private boolean requested = false;\n    private boolean followed = false;\n    \n    /**\n     * The time the stream was changed from online -> offline, so recheck if\n     * that actually is correct after some time. If this is -1, then do nothing.\n     * Should be set to -1 with EVERY update (received data), except when it's\n     * not already -1 on the change from online -> offline (to avoid request\n     * spam if recheckOffline() is always true).\n     */\n    private long recheckOffline = -1;\n    \n    // When the viewer stats where last calculated\n    private long lastViewerStats;\n    // How long at least between viewer stats calculations\n    private static final int VIEWERSTATS_DELAY = 30*60*1000;\n    // How long a stats range can be at most\n    private static final int VIEWERSTATS_MAX_LENGTH = 35*60*1000;\n    \n    private static final int RECHECK_OFFLINE_DELAY = 10*1000;\n    \n    /**\n     * Maximum length in seconds of what should count as a PICNIC (short stream\n     * offline period), to set the online time with PICNICs correctly.\n     */\n    private static final int MAX_PICNIC_LENGTH = 600;\n    \n    /**\n     * The current full status (title + game), updated when new data is set.\n     */\n    private String currentFullStatus;\n    private String prevFullStatus;\n    \n    private final LinkedHashMap<Long,StreamInfoHistoryItem> history = new LinkedHashMap<>();\n    \n    private int expiresAfter = 300;\n    \n    private final StreamInfoListener listener;\n\n    public StreamInfo(String stream, StreamInfoListener listener) {\n        this.listener = listener;\n        this.stream = stream.toLowerCase(Locale.ENGLISH);\n    }\n    \n    private void streamInfoUpdated() {\n        if (listener != null) {\n            listener.streamInfoUpdated(this);\n        }\n    }\n    \n    public void setRequested() {\n        this.requested = true;\n    }\n    \n    public boolean isRequested() {\n        return requested;\n    }\n    \n    private void streamInfoStatusChanged() {\n        lastStatusChange = System.currentTimeMillis();\n        if (listener != null) {\n            listener.streamInfoStatusChanged(this, getFullStatus());\n        }\n    }\n    \n    @Override\n    public String toString() {\n        return \"Online: \"+online+\n                \" Status: \"+status+\n                \" Game: \"+game+\n                \" Viewers: \"+viewers;\n    }\n    \n    public String getFullStatus() {\n        return currentFullStatus;\n    }\n    \n    private String makeFullStatus() {\n        if (online) {\n            String fullStatus = status;\n            if (status == null) {\n                fullStatus = \"No stream title set\";\n            }\n            if (game != null) {\n                fullStatus += \" (\"+game+\")\";\n            }\n            return fullStatus;\n        }\n        else if (!updateSucceeded) {\n            return \"\";\n        }\n        else {\n            return \"Stream offline\";\n        }\n    }\n    \n    public String getStream() {\n        return stream;\n    }\n    \n    /**\n     * The correctly capitalized name of the stream, or the all lowercase name\n     * if correctly capitalized name is not set.\n     * \n     * @return The correctly capitalized name or all lowercase name\n     */\n    public String getDisplayName() {\n        return display_name != null ? display_name : stream;\n    }\n    \n    /**\n     * Whether a correctly capitalized name is set, which if true is returned\n     * by {@see getDisplayName()}.\n     * \n     * @return true if a correctly capitalized name is set, false otherwise\n     */\n    public boolean hasDisplayName() {\n        return display_name != null;\n    }\n    \n    /**\n     * Sets the correctly capitalized name for this stream.\n     * \n     * @param name The correctly capitalized name\n     */\n    public void setDisplayName(String name) {\n        this.display_name = name;\n    }\n    \n    /**\n     * Set stream info from followed streams request.\n     * \n     * @param status The current stream title\n     * @param game The current game being played\n     * @param viewers The current viewercount\n     * @param startedAt The timestamp when the stream was started, -1 if not set\n     */\n    public void setFollowed(String status, String game, int viewers, long startedAt) {\n        //System.out.println(status);\n        followed = true;\n        boolean saveToHistory = false;\n        if (hasExpired()) {\n            saveToHistory = true;\n        }\n        set(status, game, viewers, startedAt, saveToHistory);\n    }\n    \n    /**\n     * Set stream info from a regular stream info request.\n     * \n     * @param status The current stream title\n     * @param game The current game being played\n     * @param viewers The current viewercount\n     * @param startedAt The timestamp when the stream was started, -1 if not set\n     */\n    public void set(String status, String game, int viewers, long startedAt) {\n        set(status, game, viewers, startedAt, true);\n    }\n    \n    /**\n     * This should only be used when the update was successful.\n     * \n     * @param status The current title of the stream\n     * @param game The current game\n     * @param viewers The current viewercount\n     * @param startedAt The timestamp when the stream was started, -1 if not set\n     * @param saveToHistory Whether to save the data to history\n     */\n    private void set(String status, String game, int viewers, long startedAt, boolean saveToHistory) {\n        this.status = Helper.trim(Helper.removeLinebreaks(status));\n        this.game = Helper.trim(game);\n        this.viewers = viewers;\n        \n        // Always set to -1 (do nothing) when stream is set as online, but also\n        // output a message if necessary\n        if (recheckOffline != -1) {\n            if (this.startedAt < startedAt) {\n                LOGGER.info(\"StreamInfo \" + stream + \": Stream not offline anymore\");\n            } else {\n                LOGGER.info(\"StreamInfo \" + stream + \": Stream not offline\");\n            }\n        }\n        recheckOffline = -1;\n\n        if (lastOnlineAgo() > MAX_PICNIC_LENGTH) {\n            // Only update online time with PICNICs when offline time was long\n            // enough (of course also depends on what stream data Chatty has)\n            this.startedAtWithPicnic = startedAt;\n        }\n        this.startedAt = startedAt;\n        this.lastOnline = System.currentTimeMillis();\n        this.online = true;\n        \n        if (saveToHistory) {\n            addHistoryItem(System.currentTimeMillis(),new StreamInfoHistoryItem(viewers, status, game));\n        }\n        setUpdateSucceeded(true);\n    }\n    \n    public void setExpiresAfter(int expiresAfter) {\n        this.expiresAfter = expiresAfter;\n    }\n    \n    public void setUpdateFailed() {\n        setUpdateSucceeded(false);\n    }\n\n    private void setUpdateSucceeded(boolean succeeded) {\n        updateSucceeded = succeeded;\n        setUpdated();\n        if (succeeded) {\n            updateFailedCounter = 0;\n        }\n        else {\n            updateFailedCounter++;\n            if (recheckOffline != -1) {\n                // If an offline check is pending and the update failed, then\n                // just set as offline now (may of course not be accurate at all\n                // anymore).\n                LOGGER.warning(\"StreamInfo \"+stream+\": Update failed, delayed setting offline\");\n                setOffline();\n            }\n        }\n        currentFullStatus = makeFullStatus();\n        if (succeeded && !currentFullStatus.equals(prevFullStatus) ||\n                lastUpdateLongAgo()) {\n            prevFullStatus = currentFullStatus;\n            streamInfoStatusChanged();\n        }\n        // Call at the end, so stuff is already updated\n        streamInfoUpdated();\n    }\n    \n    public void setOffline() {\n        // If switching from online to offline\n        if (online && recheckOffline == -1) {\n            LOGGER.info(\"Waiting to recheck offline status for \" + stream);\n            recheckOffline = System.currentTimeMillis();\n        } else {\n            if (recheckOffline != -1) {\n                //addHistoryItem(recheckOffline, new StreamInfoHistoryItem());\n                LOGGER.info(\"Offline after check: \"+stream);\n            }\n            recheckOffline = -1;\n            this.online = false;\n            addHistoryItem(System.currentTimeMillis(), new StreamInfoHistoryItem());\n        }\n        setUpdateSucceeded(true);\n    }\n    \n    /**\n     * Whether to recheck the offline status by requesting the stream status\n     * again earlier than usual.\n     * \n     * @return true if it should be checked, false otherwise\n     */\n    public boolean recheckOffline() {\n        return recheckOffline != -1\n                && System.currentTimeMillis() - recheckOffline > RECHECK_OFFLINE_DELAY;\n    }\n    \n    public boolean getFollowed() {\n        return followed;\n    }\n    \n    public boolean getOnline() {\n        return this.online;\n    }\n    \n    /**\n     * The time the stream was started. As always, this may contain stale data\n     * if the stream info is not valid or the stream offline.\n     * \n     * @return The timestamp or -1 if no time was received\n     */\n    public long getTimeStarted() {\n        return startedAt;\n    }\n    \n    /**\n     * The time the stream was started, including short disconnects (max 10\n     * minutes). If there was no disconnect, then the time is equal to\n     * getTimeStarted(). As always, this may contain stale data if the stream\n     * info is not valid or the stream offline.\n     *\n     * @return The timestamp or -1 if not time was received or the time is\n     * invalid\n     */\n    public long getTimeStartedWithPicnic() {\n        return startedAtWithPicnic;\n    }\n    \n    /**\n     * How long ago the stream was last online. If the stream was never seen as\n     * online this session, then a huge number will be returned.\n     * \n     * @return The number of seconds that have passed since the stream was last\n     * seen as online\n     */\n    public long lastOnlineAgo() {\n        return (System.currentTimeMillis() - lastOnline) / 1000;\n    }\n    \n    public long getLastOnlineTime() {\n        return lastOnline;\n    }\n    \n    private void setUpdated() {\n        lastUpdated = System.currentTimeMillis() / 1000;\n        requested = false;\n    }\n    \n    // Getters\n    \n    /**\n     * Gets the status stored for this stream. May not be correct, check\n     * isValid() before using any data.\n     * \n     * @return \n     */\n    public String getStatus() {\n        return status;\n    }\n    \n    /**\n     * Gets the title stored for this stream, which is the same as the status,\n     * unless the status is null. As opposed to getStatus() this never returns\n     * null.\n     * \n     * @return \n     */\n    public String getTitle() {\n        if (status == null) {\n            return \"No stream title set\";\n        }\n        return status;\n    }\n    \n    /**\n     * Gets the game stored for this stream. May not be correct, check\n     * isValid() before using any data.\n     * \n     * @return \n     */\n    public String getGame() {\n        return game;\n    }\n    \n    /**\n     * Gets the viewers stored for this stream. May not be correct, check\n     * isValid() before using any data.\n     * \n     * @return \n     */\n    public int getViewers() {\n        return viewers;\n    }\n    \n    /**\n     * Calculates the number of seconds that passed after the last update\n     * \n     * @return Number of seconds that have passed after the last update\n     */\n    public long getUpdatedDelay() {\n        return (System.currentTimeMillis() / 1000) - lastUpdated;\n    }\n    \n    /**\n     * Checks if the info should be updated. The stream info takes longer\n     * to expire when there were failed attempts at downloading the info from\n     * the API. This only affects hasExpired(), not isValid().\n     * \n     * @return true if the info should be updated, false otherwise\n     */\n    public boolean hasExpired() {\n        return getUpdatedDelay() > expiresAfter * (1+ updateFailedCounter / 2);\n    }\n    \n    /**\n     * Checks if the info is valid, taking into account if the last request\n     * succeeded and how old the data is.\n     * \n     * @return true if the info can be used, false otherwise\n     */\n    public boolean isValid() {\n        if (!updateSucceeded || getUpdatedDelay() > expiresAfter*2) {\n            return false;\n        }\n        return true;\n    }\n    \n    public boolean lastUpdateLongAgo() {\n        if (updateSucceeded && getUpdatedDelay() > expiresAfter*4) {\n            return true;\n        }\n        return false;\n    }\n    \n    /**\n     * Returns the number of seconds the last status change is ago.\n     * \n     * @return \n     */\n    public long getStatusChangeTimeAgo() {\n        return (System.currentTimeMillis() - lastStatusChange) / 1000;\n    }\n    \n    public long getStatusChangeTime() {\n        return lastStatusChange;\n    }\n    \n    private void addHistoryItem(Long time, StreamInfoHistoryItem item) {\n        synchronized(history) {\n            history.put(time, item);\n        }\n    }\n    \n    public LinkedHashMap<Long,StreamInfoHistoryItem> getHistory() {\n        synchronized(history) {\n            return new LinkedHashMap<>(history);\n        }\n    }\n    \n    /**\n     * Create a summary of the viewercount in the interval that hasn't been\n     * calculated yet (delay set as a constant).\n     * \n     * @param force Get stats even if the delay hasn't passed yet.\n     * @return \n     */\n    public ViewerStats getViewerStats(boolean force) {\n        synchronized(history) {\n            if (lastViewerStats == 0 && !force) {\n                // No stats output yet, so assume current time as start, so\n                // it's output after the set delay\n                lastViewerStats = System.currentTimeMillis() - 5000;\n            }\n            long timePassed = System.currentTimeMillis() - lastViewerStats;\n            if (!force && timePassed < VIEWERSTATS_DELAY) {\n                return null;\n            }\n            long startAt = lastViewerStats+1;\n            // Only calculate the max length\n            if (timePassed > VIEWERSTATS_MAX_LENGTH) {\n                startAt = System.currentTimeMillis() - VIEWERSTATS_MAX_LENGTH;\n            }\n            int min = -1;\n            int max = -1;\n            int total = 0;\n            int count = 0;\n            long firstTime = -1;\n            long lastTime = -1;\n            StringBuilder b = new StringBuilder();\n            // Initiate with -2, because -1 already means offline\n            int prevViewers = -2;\n            for (long time : history.keySet()) {\n                if (time < startAt) {\n                    continue;\n                }\n                // Start doing anything for values >= startAt\n                \n                // Update so that it contains the last value that was looked at\n                // at the end of this method\n                lastViewerStats = time;\n                \n                int viewers = history.get(time).getViewers();\n\n                // Append to viewercount development String\n                if (prevViewers > -1 && viewers != -1) {\n                    // If there is a prevViewers set and if online\n                    int diff = viewers - prevViewers;\n                    if (diff >= 0) {\n                        b.append(\"+\");\n                    }\n                    b.append(Helper.formatViewerCount(diff));\n                } else if (viewers != -1) {\n                    if (prevViewers == -1) {\n                        // Previous was offline, so show that\n                        b.append(\"_\");\n                    }\n                    b.append(Helper.formatViewerCount(viewers));\n                }\n                prevViewers = viewers;\n                \n                \n                if (viewers == -1) {\n                    continue;\n                }\n                // Calculate min/max/sum/count only when online\n                if (firstTime == -1) {\n                    firstTime = time;\n                }\n                lastTime = time;\n                \n                if (viewers > max) {\n                    max = viewers;\n                }\n                if (min == -1 || viewers < min) {\n                    min = viewers;\n                }\n                total += viewers;\n                count++;\n            }\n            \n            // After going through all values, do some finishing work\n            if (prevViewers == -1) {\n                // Last value was offline, so show that\n                b.append(\"_\");\n            }\n            if (count == 0) {\n                return null;\n            }\n            int avg = total / count;\n            return new ViewerStats(min, max, avg, firstTime, lastTime, count, b.toString());\n        }\n    }\n    \n    /**\n     * Holds a set of immutable values that make up viewerstats.\n     */\n    public static class ViewerStats {\n        public final int max;\n        public final int min;\n        public final int avg;\n        public final long startTime;\n        public final long endTime;\n        public final int count;\n        public final String history;\n        \n        public ViewerStats(int min, int max, int avg, long startTime,\n                long endTime, int count, String history) {\n            this.max = max;\n            this.min = min;\n            this.avg = avg;\n            this.startTime = startTime;\n            this.endTime = endTime;\n            this.count = count;\n            this.history = history;\n        }\n        \n        /**\n         * Which duration the data in this stats covers. This is not necessarily\n         * the whole duration that was worked with (e.g. if the stream went\n         * offline at the end, that data may not be included). This is the range\n         * between the first and last valid data point.\n         * \n         * @return The number of seconds this data covers.\n         */\n        public long duration() {\n            return (endTime - startTime) / 1000;\n        }\n        \n        /**\n         * Checks if these viewerstats contain any viewer data.\n         * \n         * @return \n         */\n        public boolean isValid() {\n            // If min was set to another value than the initial one, then this\n            // means at least one data point with a viewercount was there.\n            return min != -1;\n        }\n        \n        @Override\n        public String toString() {\n            return \"Viewerstats (\"+DateTime.format2(startTime)\n                    +\"-\"+DateTime.format2(endTime)+\"):\"\n                    + \" avg:\"+Helper.formatViewerCount(avg)\n                    + \" min:\"+Helper.formatViewerCount(min)\n                    + \" max:\"+Helper.formatViewerCount(max)\n                    + \" [\"+count+\"/\"+history+\"]\";\n        }\n    }\n}\n","repo_name":"Javaec/ChattyRus","path":"src/chatty/util/api/StreamInfo.java","language":"Java","license":"apache-2.0","size":19898},"truncated_cells":[]},{"row_idx":51,"row":{"code":"# Authorized Buyers Marketplace API Client Library for Java\n\nThe Authorized Buyers Marketplace API allows buyers programmatically discover inventory; propose, retrieve and negotiate deals with publishers.\n\nThis page contains information about getting started with the Authorized Buyers Marketplace API\nusing the Google API Client Library for Java. In addition, you may be interested\nin the following documentation:\n\n* Browse the [Javadoc reference for the Authorized Buyers Marketplace API][javadoc]\n* Read the [Developer's Guide for the Google API Client Library for Java][google-api-client].\n* Interact with this API in your browser using the [APIs Explorer for the Authorized Buyers Marketplace API][api-explorer]\n\n## Installation\n\n### Maven\n\nAdd the following lines to your `pom.xml` file:\n\n```xml\n<project>\n  <dependencies>\n    <dependency>\n      <groupId>com.google.apis</groupId>\n      <artifactId>google-api-services-authorizedbuyersmarketplace</artifactId>\n      <version>v1-rev20220212-1.32.1</version>\n    </dependency>\n  </dependencies>\n</project>\n```\n\n### Gradle\n\n```gradle\nrepositories {\n  mavenCentral()\n}\ndependencies {\n  implementation 'com.google.apis:google-api-services-authorizedbuyersmarketplace:v1-rev20220212-1.32.1'\n}\n```\n\n[javadoc]: https://googleapis.dev/java/google-api-services-authorizedbuyersmarketplace/latest/index.html\n[google-api-client]: https://github.com/googleapis/google-api-java-client/\n[api-explorer]: https://developers.google.com/apis-explorer/#p/authorizedbuyersmarketplace/v1/\n","repo_name":"googleapis/google-api-java-client-services","path":"clients/google-api-services-authorizedbuyersmarketplace/v1/1.31.0/README.md","language":"Markdown","license":"apache-2.0","size":1523},"truncated_cells":[]},{"row_idx":52,"row":{"code":"<!DOCTYPE html>\n<html lang=\"en\">\n  \n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0\"\n    />  \n\t <title>Bootstrap3响应式后台管理系统模版MeAdmin 表单布局</title>\n    <link href=\"bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\"\n    />\n    <!--[if lt IE 9]>\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"plugins/jquery-ui/jquery.ui.1.10.2.ie.css\"\n      />\n    <![endif]-->\n    <link href=\"assets/css/main.css\" rel=\"stylesheet\" type=\"text/css\" />\n    <link href=\"assets/css/plugins.css\" rel=\"stylesheet\" type=\"text/css\" />\n    <link href=\"assets/css/responsive.css\" rel=\"stylesheet\" type=\"text/css\"\n    />\n    <link href=\"assets/css/icons.css\" rel=\"stylesheet\" type=\"text/css\" />\n    <link rel=\"stylesheet\" href=\"assets/css/fontawesome/font-awesome.min.css\">\n    <!--[if IE 7]>\n      <link rel=\"stylesheet\" href=\"assets/css/fontawesome/font-awesome-ie7.min.css\">\n    <![endif]-->\n    <!--[if IE 8]>\n      <link href=\"assets/css/ie8.css\" rel=\"stylesheet\" type=\"text/css\" />\n    <![endif]-->\n    <link href='http://fonts.useso.com/css?family=Open+Sans:400,600,700'\n    rel='stylesheet' type='text/css'>\n    <script type=\"text/javascript\" src=\"assets/js/libs/jquery-1.10.2.min.js\">\n    </script>\n    <script type=\"text/javascript\" src=\"plugins/jquery-ui/jquery-ui-1.10.2.custom.min.js\">\n    </script>\n    <script type=\"text/javascript\" src=\"bootstrap/js/bootstrap.min.js\">\n    </script>\n    <script type=\"text/javascript\" src=\"assets/js/libs/lodash.compat.min.js\">\n    </script>\n    <!--[if lt IE 9]>\n      <script src=\"assets/js/libs/html5shiv.js\">\n      </script>\n    <![endif]-->\n    <script type=\"text/javascript\" src=\"plugins/touchpunch/jquery.ui.touch-punch.min.js\">\n    </script>\n    <script type=\"text/javascript\" src=\"plugins/event.swipe/jquery.event.move.js\">\n    </script>\n    <script type=\"text/javascript\" src=\"plugins/event.swipe/jquery.event.swipe.js\">\n    </script>\n    <script type=\"text/javascript\" src=\"assets/js/libs/breakpoints.js\">\n    </script>\n    <script type=\"text/javascript\" src=\"plugins/respond/respond.min.js\">\n    </script>\n    <script type=\"text/javascript\" src=\"plugins/cookie/jquery.cookie.min.js\">\n    </script>\n    <script type=\"text/javascript\" src=\"plugins/slimscroll/jquery.slimscroll.min.js\">\n    </script>\n    <script type=\"text/javascript\" src=\"plugins/slimscroll/jquery.slimscroll.horizontal.min.js\">\n    </script>\n    <script type=\"text/javascript\" src=\"plugins/sparkline/jquery.sparkline.min.js\">\n    </script>\n    <script type=\"text/javascript\" src=\"plugins/daterangepicker/moment.min.js\">\n    </script>\n    <script type=\"text/javascript\" src=\"plugins/daterangepicker/daterangepicker.js\">\n    </script>\n    <script type=\"text/javascript\" src=\"plugins/blockui/jquery.blockUI.min.js\">\n    </script>\n    <script type=\"text/javascript\" src=\"assets/js/app.js\">\n    </script>\n    <script type=\"text/javascript\" src=\"assets/js/plugins.js\">\n    </script>\n    <script type=\"text/javascript\" src=\"assets/js/plugins.form-components.js\">\n    </script>\n    <script>\n      $(document).ready(function() {\n        App.init();\n        Plugins.init();\n        FormComponents.init()\n      });\n    </script>\n    <script type=\"text/javascript\" src=\"assets/js/custom.js\">\n    </script>\n  </head>\n  \n  <body>\n    <header class=\"header navbar navbar-fixed-top\" role=\"banner\">\n      <div class=\"container\">\n        <ul class=\"nav navbar-nav\">\n          <li class=\"nav-toggle\">\n            <a href=\"javascript:void(0);\" title=\"\">\n              <i class=\"icon-reorder\">\n              </i>\n            </a>\n          </li>\n        </ul>\n        <a class=\"navbar-brand\" href=\"index.html\">\n          <img src=\"assets/img/logo.png\" alt=\"logo\" />\n          <strong>\n            Me\n          </strong>\n          Admin\n        </a>\n        <a href=\"#\" class=\"toggle-sidebar bs-tooltip\" data-placement=\"bottom\"\n        data-original-title=\"Toggle navigation\">\n          <i class=\"icon-reorder\">\n          </i>\n        </a>\n        <ul class=\"nav navbar-nav navbar-left hidden-xs hidden-sm\">\n          <li>\n            <a href=\"#\">\n              Dashboard\n            </a>\n          </li>\n          <li class=\"dropdown\">\n            <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\n              Dropdown\n              <i class=\"icon-caret-down small\">\n              </i>\n            </a>\n            <ul class=\"dropdown-menu\">\n              <li>\n                <a href=\"#\">\n                  <i class=\"icon-user\">\n                  </i>\n                  Example #1\n                </a>\n              </li>\n              <li>\n                <a href=\"#\">\n                  <i class=\"icon-calendar\">\n                  </i>\n                  Example #2\n                </a>\n              </li>\n              <li class=\"divider\">\n              </li>\n              <li>\n                <a href=\"#\">\n                  <i class=\"icon-tasks\">\n                  </i>\n                  Example #3\n                </a>\n              </li>\n            </ul>\n          </li>\n        </ul>\n        <ul class=\"nav navbar-nav navbar-right\">\n          <li class=\"dropdown\">\n            <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\n              <i class=\"icon-warning-sign\">\n              </i>\n              <span class=\"badge\">\n                5\n              </span>\n            </a>\n            <ul class=\"dropdown-menu extended notification\">\n              <li class=\"title\">\n                <p>\n                  You have 5 new notifications\n                </p>\n              </li>\n              <li>\n                <a href=\"javascript:void(0);\">\n                  <span class=\"label label-success\">\n                    <i class=\"icon-plus\">\n                    </i>\n                  </span>\n                  <span class=\"message\">\n                    New user registration.\n                  </span>\n                  <span class=\"time\">\n                    1 mins\n                  </span>\n                </a>\n              </li>\n              <li>\n                <a href=\"javascript:void(0);\">\n                  <span class=\"label label-danger\">\n                    <i class=\"icon-warning-sign\">\n                    </i>\n                  </span>\n                  <span class=\"message\">\n                    High CPU load on cluster #2.\n                  </span>\n                  <span class=\"time\">\n                    5 mins\n                  </span>\n                </a>\n              </li>\n              <li>\n                <a href=\"javascript:void(0);\">\n                  <span class=\"label label-success\">\n                    <i class=\"icon-plus\">\n                    </i>\n                  </span>\n                  <span class=\"message\">\n                    New user registration.\n                  </span>\n                  <span class=\"time\">\n                    10 mins\n                  </span>\n                </a>\n              </li>\n              <li>\n                <a href=\"javascript:void(0);\">\n                  <span class=\"label label-info\">\n                    <i class=\"icon-bullhorn\">\n                    </i>\n                  </span>\n                  <span class=\"message\">\n                    New items are in queue.\n                  </span>\n                  <span class=\"time\">\n                    25 mins\n                  </span>\n                </a>\n              </li>\n              <li>\n                <a href=\"javascript:void(0);\">\n                  <span class=\"label label-warning\">\n                    <i class=\"icon-bolt\">\n                    </i>\n                  </span>\n                  <span class=\"message\">\n                    Disk space to 85% full.\n                  </span>\n                  <span class=\"time\">\n                    55 mins\n                  </span>\n                </a>\n              </li>\n              <li class=\"footer\">\n                <a href=\"javascript:void(0);\">\n                  View all notifications\n                </a>\n              </li>\n            </ul>\n          </li>\n          <li class=\"dropdown hidden-xs hidden-sm\">\n            <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\n              <i class=\"icon-tasks\">\n              </i>\n              <span class=\"badge\">\n                7\n              </span>\n            </a>\n            <ul class=\"dropdown-menu extended notification\">\n              <li class=\"title\">\n                <p>\n                  You have 7 pending tasks\n                </p>\n              </li>\n              <li>\n                <a href=\"javascript:void(0);\">\n                  <span class=\"task\">\n                    <span class=\"desc\">\n                      Preparing new release\n                    </span>\n                    <span class=\"percent\">\n                      30%\n                    </span>\n                  </span>\n                  <div class=\"progress progress-small\">\n                    <div style=\"width: 30%;\" class=\"progress-bar progress-bar-info\">\n                    </div>\n                  </div>\n                </a>\n              </li>\n              <li>\n                <a href=\"javascript:void(0);\">\n                  <span class=\"task\">\n                    <span class=\"desc\">\n                      Change management\n                    </span>\n                    <span class=\"percent\">\n                      80%\n                    </span>\n                  </span>\n                  <div class=\"progress progress-small progress-striped active\">\n                    <div style=\"width: 80%;\" class=\"progress-bar progress-bar-danger\">\n                    </div>\n                  </div>\n                </a>\n              </li>\n              <li>\n                <a href=\"javascript:void(0);\">\n                  <span class=\"task\">\n                    <span class=\"desc\">\n                      Mobile development\n                    </span>\n                    <span class=\"percent\">\n                      60%\n                    </span>\n                  </span>\n                  <div class=\"progress progress-small\">\n                    <div style=\"width: 60%;\" class=\"progress-bar progress-bar-success\">\n                    </div>\n                  </div>\n                </a>\n              </li>\n              <li>\n                <a href=\"javascript:void(0);\">\n                  <span class=\"task\">\n                    <span class=\"desc\">\n                      Database migration\n                    </span>\n                    <span class=\"percent\">\n                      20%\n                    </span>\n                  </span>\n                  <div class=\"progress progress-small\">\n                    <div style=\"width: 20%;\" class=\"progress-bar progress-bar-warning\">\n                    </div>\n                  </div>\n                </a>\n              </li>\n              <li class=\"footer\">\n                <a href=\"javascript:void(0);\">\n                  View all tasks\n                </a>\n              </li>\n            </ul>\n          </li>\n          <li class=\"dropdown hidden-xs hidden-sm\">\n            <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\n              <i class=\"icon-envelope\">\n              </i>\n              <span class=\"badge\">\n                1\n              </span>\n            </a>\n            <ul class=\"dropdown-menu extended notification\">\n              <li class=\"title\">\n                <p>\n                  You have 3 new messages\n                </p>\n              </li>\n              <li>\n                <a href=\"javascript:void(0);\">\n                  <span class=\"photo\">\n                    <img src=\"assets/img/demo/avatar-1.jpg\" alt=\"\" />\n                  </span>\n                  <span class=\"subject\">\n                    <span class=\"from\">\n                      Bob Carter\n                    </span>\n                    <span class=\"time\">\n                      Just Now\n                    </span>\n                  </span>\n                  <span class=\"text\">\n                    Consetetur sadipscing elitr...\n                  </span>\n                </a>\n              </li>\n              <li>\n                <a href=\"javascript:void(0);\">\n                  <span class=\"photo\">\n                    <img src=\"assets/img/demo/avatar-2.jpg\" alt=\"\" />\n                  </span>\n                  <span class=\"subject\">\n                    <span class=\"from\">\n                      Jane Doe\n                    </span>\n                    <span class=\"time\">\n                      45 mins\n                    </span>\n                  </span>\n                  <span class=\"text\">\n                    Sed diam nonumy...\n                  </span>\n                </a>\n              </li>\n              <li>\n                <a href=\"javascript:void(0);\">\n                  <span class=\"photo\">\n                    <img src=\"assets/img/demo/avatar-3.jpg\" alt=\"\" />\n                  </span>\n                  <span class=\"subject\">\n                    <span class=\"from\">\n                      Patrick Nilson\n                    </span>\n                    <span class=\"time\">\n                      6 hours\n                    </span>\n                  </span>\n                  <span class=\"text\">\n                    No sea takimata sanctus...\n                  </span>\n                </a>\n              </li>\n              <li class=\"footer\">\n                <a href=\"javascript:void(0);\">\n                  View all messages\n                </a>\n              </li>\n            </ul>\n          </li>\n          <li>\n            <a href=\"#\" class=\"dropdown-toggle row-bg-toggle\">\n              <i class=\"icon-resize-vertical\">\n              </i>\n            </a>\n          </li>\n          <li class=\"dropdown\">\n            <a href=\"#\" class=\"project-switcher-btn dropdown-toggle\">\n              <i class=\"icon-folder-open\">\n              </i>\n              <span>\n                Projects\n              </span>\n            </a>\n          </li>\n          <li class=\"dropdown user\">\n            <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\n              <i class=\"icon-male\">\n              </i>\n              <span class=\"username\">\n                John Doe\n              </span>\n              <i class=\"icon-caret-down small\">\n              </i>\n            </a>\n            <ul class=\"dropdown-menu\">\n              <li>\n                <a href=\"pages_user_profile.html\">\n                  <i class=\"icon-user\">\n                  </i>\n                  My Profile\n                </a>\n              </li>\n              <li>\n                <a href=\"pages_calendar.html\">\n                  <i class=\"icon-calendar\">\n                  </i>\n                  My Calendar\n                </a>\n              </li>\n              <li>\n                <a href=\"#\">\n                  <i class=\"icon-tasks\">\n                  </i>\n                  My Tasks\n                </a>\n              </li>\n              <li class=\"divider\">\n              </li>\n              <li>\n                <a href=\"login.html\">\n                  <i class=\"icon-key\">\n                  </i>\n                  Log Out\n                </a>\n              </li>\n            </ul>\n          </li>\n        </ul>\n      </div>\n      <div id=\"project-switcher\" class=\"container project-switcher\">\n        <div id=\"scrollbar\">\n          <div class=\"handle\">\n          </div>\n        </div>\n        <div id=\"frame\">\n          <ul class=\"project-list\">\n            <li>\n              <a href=\"javascript:void(0);\">\n                <span class=\"image\">\n                  <i class=\"icon-desktop\">\n                  </i>\n                </span>\n                <span class=\"title\">\n                  Lorem ipsum dolor\n                </span>\n              </a>\n            </li>\n            <li>\n              <a href=\"javascript:void(0);\">\n                <span class=\"image\">\n                  <i class=\"icon-compass\">\n                  </i>\n                </span>\n                <span class=\"title\">\n                  Dolor sit invidunt\n                </span>\n              </a>\n            </li>\n            <li class=\"current\">\n              <a href=\"javascript:void(0);\">\n                <span class=\"image\">\n                  <i class=\"icon-male\">\n                  </i>\n                </span>\n                <span class=\"title\">\n                  Consetetur sadipscing elitr\n                </span>\n              </a>\n            </li>\n            <li>\n              <a href=\"javascript:void(0);\">\n                <span class=\"image\">\n                  <i class=\"icon-thumbs-up\">\n                  </i>\n                </span>\n                <span class=\"title\">\n                  Sed diam nonumy\n                </span>\n              </a>\n            </li>\n            <li>\n              <a href=\"javascript:void(0);\">\n                <span class=\"image\">\n                  <i class=\"icon-female\">\n                  </i>\n                </span>\n                <span class=\"title\">\n                  At vero eos et\n                </span>\n              </a>\n            </li>\n            <li>\n              <a href=\"javascript:void(0);\">\n                <span class=\"image\">\n                  <i class=\"icon-beaker\">\n                  </i>\n                </span>\n                <span class=\"title\">\n                  Sed diam voluptua\n                </span>\n              </a>\n            </li>\n            <li>\n              <a href=\"javascript:void(0);\">\n                <span class=\"image\">\n                  <i class=\"icon-desktop\">\n                  </i>\n                </span>\n                <span class=\"title\">\n                  Lorem ipsum dolor\n                </span>\n              </a>\n            </li>\n            <li>\n              <a href=\"javascript:void(0);\">\n                <span class=\"image\">\n                  <i class=\"icon-compass\">\n                  </i>\n                </span>\n                <span class=\"title\">\n                  Dolor sit invidunt\n                </span>\n              </a>\n            </li>\n            <li>\n              <a href=\"javascript:void(0);\">\n                <span class=\"image\">\n                  <i class=\"icon-male\">\n                  </i>\n                </span>\n                <span class=\"title\">\n                  Consetetur sadipscing elitr\n                </span>\n              </a>\n            </li>\n            <li>\n              <a href=\"javascript:void(0);\">\n                <span class=\"image\">\n                  <i class=\"icon-thumbs-up\">\n                  </i>\n                </span>\n                <span class=\"title\">\n                  Sed diam nonumy\n                </span>\n              </a>\n            </li>\n            <li>\n              <a href=\"javascript:void(0);\">\n                <span class=\"image\">\n                  <i class=\"icon-female\">\n                  </i>\n                </span>\n                <span class=\"title\">\n                  At vero eos et\n                </span>\n              </a>\n            </li>\n            <li>\n              <a href=\"javascript:void(0);\">\n                <span class=\"image\">\n                  <i class=\"icon-beaker\">\n                  </i>\n                </span>\n                <span class=\"title\">\n                  Sed diam voluptua\n                </span>\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </header>\n    <div id=\"container\">\n      <div id=\"sidebar\" class=\"sidebar-fixed\">\n        <div id=\"sidebar-content\">\n          <form class=\"sidebar-search\">\n            <div class=\"input-box\">\n              <button type=\"submit\" class=\"submit\">\n                <i class=\"icon-search\">\n                </i>\n              </button>\n              <span>\n                <input type=\"text\" placeholder=\"Search...\">\n              </span>\n            </div>\n          </form>\n          <div class=\"sidebar-search-results\">\n            <i class=\"icon-remove close\">\n            </i>\n            <div class=\"title\">\n              Documents\n            </div>\n            <ul class=\"notifications\">\n              <li>\n                <a href=\"javascript:void(0);\">\n                  <div class=\"col-left\">\n                    <span class=\"label label-info\">\n                      <i class=\"icon-file-text\">\n                      </i>\n                    </span>\n                  </div>\n                  <div class=\"col-right with-margin\">\n                    <span class=\"message\">\n                      <strong>\n                        John Doe\n                      </strong>\n                      received $1.527,32\n                    </span>\n                    <span class=\"time\">\n                      finances.xls\n                    </span>\n                  </div>\n                </a>\n              </li>\n              <li>\n                <a href=\"javascript:void(0);\">\n                  <div class=\"col-left\">\n                    <span class=\"label label-success\">\n                      <i class=\"icon-file-text\">\n                      </i>\n                    </span>\n                  </div>\n                  <div class=\"col-right with-margin\">\n                    <span class=\"message\">\n                      My name is\n                      <strong>\n                        John Doe\n                      </strong>\n                      ...\n                    </span>\n                    <span class=\"time\">\n                      briefing.docx\n                    </span>\n                  </div>\n                </a>\n              </li>\n            </ul>\n            <div class=\"title\">\n              Persons\n            </div>\n            <ul class=\"notifications\">\n              <li>\n                <a href=\"javascript:void(0);\">\n                  <div class=\"col-left\">\n                    <span class=\"label label-danger\">\n                      <i class=\"icon-female\">\n                      </i>\n                    </span>\n                  </div>\n                  <div class=\"col-right with-margin\">\n                    <span class=\"message\">\n                      Jane\n                      <strong>\n                        Doe\n                      </strong>\n                    </span>\n                    <span class=\"time\">\n                      21 years old\n                    </span>\n                  </div>\n                </a>\n              </li>\n            </ul>\n          </div>\n          <ul id=\"nav\">\n            <li>\n              <a href=\"index.html\">\n                <i class=\"icon-dashboard\">\n                </i>\n                Dashboard\n              </a>\n            </li>\n            <li>\n              <a href=\"javascript:void(0);\">\n                <i class=\"icon-desktop\">\n                </i>\n                UI Features\n                <span class=\"label label-info pull-right\">\n                  6\n                </span>\n              </a>\n              <ul class=\"sub-menu\">\n                <li>\n                  <a href=\"ui_general.html\">\n                    <i class=\"icon-angle-right\">\n                    </i>\n                    General\n                  </a>\n                </li>\n                <li>\n                  <a href=\"ui_buttons.html\">\n                    <i class=\"icon-angle-right\">\n                    </i>\n                    Buttons\n                  </a>\n                </li>\n                <li>\n                  <a href=\"ui_tabs_accordions.html\">\n                    <i class=\"icon-angle-right\">\n                    </i>\n                    Tabs &amp; Accordions\n                  </a>\n                </li>\n                <li>\n                  <a href=\"ui_sliders.html\">\n                    <i class=\"icon-angle-right\">\n                    </i>\n                    Sliders\n                  </a>\n                </li>\n                <li>\n                  <a href=\"ui_nestable_list.html\">\n                    <i class=\"icon-angle-right\">\n                    </i>\n                    Nestable List\n                  </a>\n                </li>\n                <li>\n                  <a href=\"ui_typography.html\">\n                    <i class=\"icon-angle-right\">\n                    </i>\n                    Typography / Icons\n                  </a>\n                </li>\n                <li>\n                  <a href=\"ui_google_maps.html\">\n                    <i class=\"icon-angle-right\">\n                    </i>\n                    Google Maps\n                  </a>\n                </li>\n                <li>\n                  <a href=\"ui_grid.html\">\n                    <i class=\"icon-angle-right\">\n                    </i>\n                    Grid\n                  </a>\n                </li>\n              </ul>\n            </li>\n            <li class=\"current open\">\n              <a href=\"javascript:void(0);\">\n                <i class=\"icon-edit\">\n                </i>\n                Form Elements\n              </a>\n              <ul class=\"sub-menu\">\n                <li>\n                  <a href=\"form_components.html\">\n                    <i class=\"icon-angle-right\">\n                    </i>\n                    Form Components\n                  </a>\n                </li>\n                <li class=\"current\">\n                  <a href=\"form_layouts.html\">\n                    <i class=\"icon-angle-right\">\n                    </i>\n                    Form Layouts\n                  </a>\n                </li>\n                <li>\n                  <a href=\"form_validation.html\">\n                    <i class=\"icon-angle-right\">\n                    </i>\n                    Form Validation\n                  </a>\n                </li>\n                <li>\n                  <a href=\"form_wizard.html\">\n                    <i class=\"icon-angle-right\">\n                    </i>\n                    Form Wizard\n                  </a>\n                </li>\n              </ul>\n            </li>\n            <li>\n              <a href=\"javascript:void(0);\">\n                <i class=\"icon-table\">\n                </i>\n                Tables\n              </a>\n              <ul class=\"sub-menu\">\n                <li>\n                  <a href=\"tables_static.html\">\n                    <i class=\"icon-angle-right\">\n                    </i>\n                    Static Tables\n                  </a>\n                </li>\n                <li>\n                  <a href=\"http://envato.stammtec.de/themeforest/melon/tables_dynamic.html\">\n                    <i class=\"icon-angle-right\">\n                    </i>\n                    Dynamic Tables (DataTables)\n                  </a>\n                </li>\n                <li>\n                  <a href=\"tables_responsive.html\">\n                    <i class=\"icon-angle-right\">\n                    </i>\n                    Responsive Tables\n                  </a>\n                </li>\n              </ul>\n            </li>\n            <li>\n              <a href=\"charts.html\">\n                <i class=\"icon-bar-chart\">\n                </i>\n                Charts &amp; Statistics\n              </a>\n            </li>\n            <li>\n              <a href=\"javascript:void(0);\">\n                <i class=\"icon-folder-open-alt\">\n                </i>\n                Pages\n              </a>\n              <ul class=\"sub-menu\">\n                <li>\n                  <a href=\"login.html\">\n                    <i class=\"icon-angle-right\">\n                    </i>\n                    Login\n                  </a>\n                </li>\n                <li>\n                  <a href=\"pages_user_profile.html\">\n                    <i class=\"icon-angle-right\">\n                    </i>\n                    User Profile\n                  </a>\n                </li>\n                <li>\n                  <a href=\"pages_calendar.html\">\n                    <i class=\"icon-angle-right\">\n                    </i>\n                    Calendar\n                  </a>\n                </li>\n                <li>\n                  <a href=\"pages_invoice.html\">\n                    <i class=\"icon-angle-right\">\n                    </i>\n                    Invoice\n                  </a>\n                </li>\n                <li>\n                  <a href=\"404.html\">\n                    <i class=\"icon-angle-right\">\n                    </i>\n                    404 Page\n                  </a>\n                </li>\n              </ul>\n            </li>\n            <li>\n              <a href=\"javascript:void(0);\">\n                <i class=\"icon-list-ol\">\n                </i>\n                4 Level Menu\n              </a>\n              <ul class=\"sub-menu\">\n                <li class=\"open-default\">\n                  <a href=\"javascript:void(0);\">\n                    <i class=\"icon-cogs\">\n                    </i>\n                    Item 1\n                    <span class=\"arrow\">\n                    </span>\n                  </a>\n                  <ul class=\"sub-menu\">\n                    <li class=\"open-default\">\n                      <a href=\"javascript:void(0);\">\n                        <i class=\"icon-user\">\n                        </i>\n                        Sample Link 1\n                        <span class=\"arrow\">\n                        </span>\n                      </a>\n                      <ul class=\"sub-menu\">\n                        <li class=\"current\">\n                          <a href=\"javascript:void(0);\">\n                            <i class=\"icon-remove\">\n                            </i>\n                            Sample Link 1\n                          </a>\n                        </li>\n                        <li>\n                          <a href=\"javascript:void(0);\">\n                            <i class=\"icon-pencil\">\n                            </i>\n                            Sample Link 1\n                          </a>\n                        </li>\n                        <li>\n                          <a href=\"javascript:void(0);\">\n                            <i class=\"icon-edit\">\n                            </i>\n                            Sample Link 1\n                          </a>\n                        </li>\n                      </ul>\n                    </li>\n                    <li>\n                      <a href=\"javascript:void(0);\">\n                        <i class=\"icon-user\">\n                        </i>\n                        Sample Link 1\n                      </a>\n                    </li>\n                    <li>\n                      <a href=\"javascript:void(0);\">\n                        <i class=\"icon-external-link\">\n                        </i>\n                        Sample Link 2\n                      </a>\n                    </li>\n                    <li>\n                      <a href=\"javascript:void(0);\">\n                        <i class=\"icon-bell\">\n                        </i>\n                        Sample Link 3\n                      </a>\n                    </li>\n                  </ul>\n                </li>\n                <li>\n                  <a href=\"javascript:void(0);\">\n                    <i class=\"icon-globe\">\n                    </i>\n                    Item 2\n                    <span class=\"arrow\">\n                    </span>\n                  </a>\n                  <ul class=\"sub-menu\">\n                    <li>\n                      <a href=\"javascript:void(0);\">\n                        <i class=\"icon-user\">\n                        </i>\n                        Sample Link 1\n                      </a>\n                    </li>\n                    <li>\n                      <a href=\"javascript:void(0);\">\n                        <i class=\"icon-external-link\">\n                        </i>\n                        Sample Link 1\n                      </a>\n                    </li>\n                    <li>\n                      <a href=\"javascript:void(0);\">\n                        <i class=\"icon-bell\">\n                        </i>\n                        Sample Link 1\n                      </a>\n                    </li>\n                  </ul>\n                </li>\n                <li>\n                  <a href=\"javascript:void(0);\">\n                    <i class=\"icon-folder-open\">\n                    </i>\n                    Item 3\n                  </a>\n                </li>\n              </ul>\n            </li>\n          </ul>\n          <div class=\"sidebar-title\">\n            <span>\n              Notifications\n            </span>\n          </div>\n          <ul class=\"notifications demo-slide-in\">\n            <li style=\"display: none;\">\n              <div class=\"col-left\">\n                <span class=\"label label-danger\">\n                  <i class=\"icon-warning-sign\">\n                  </i>\n                </span>\n              </div>\n              <div class=\"col-right with-margin\">\n                <span class=\"message\">\n                  Server\n                  <strong>\n                    #512\n                  </strong>\n                  crashed.\n                </span>\n                <span class=\"time\">\n                  few seconds ago\n                </span>\n              </div>\n            </li>\n            <li style=\"display: none;\">\n              <div class=\"col-left\">\n                <span class=\"label label-info\">\n                  <i class=\"icon-envelope\">\n                  </i>\n                </span>\n              </div>\n              <div class=\"col-right with-margin\">\n                <span class=\"message\">\n                  <strong>\n                    John\n                  </strong>\n                  sent you a message\n                </span>\n                <span class=\"time\">\n                  few second ago\n                </span>\n              </div>\n            </li>\n            <li>\n              <div class=\"col-left\">\n                <span class=\"label label-success\">\n                  <i class=\"icon-plus\">\n                  </i>\n                </span>\n              </div>\n              <div class=\"col-right with-margin\">\n                <span class=\"message\">\n                  <strong>\n                    Emma\n                  </strong>\n                  's account was created\n                </span>\n                <span class=\"time\">\n                  4 hours ago\n                </span>\n              </div>\n            </li>\n          </ul>\n          <div class=\"sidebar-widget align-center\">\n            <div class=\"btn-group\" data-toggle=\"buttons\" id=\"theme-switcher\">\n              <label class=\"btn active\">\n                <input type=\"radio\" name=\"theme-switcher\" data-theme=\"bright\">\n                <i class=\"icon-sun\">\n                </i>\n                Bright\n              </label>\n              <label class=\"btn\">\n                <input type=\"radio\" name=\"theme-switcher\" data-theme=\"dark\">\n                <i class=\"icon-moon\">\n                </i>\n                Dark\n              </label>\n            </div>\n          </div>\n        </div>\n        <div id=\"divider\" class=\"resizeable\">\n        </div>\n      </div>\n      <div id=\"content\">\n        <div class=\"container\">\n          <div class=\"crumbs\">\n            <ul id=\"breadcrumbs\" class=\"breadcrumb\">\n              <li>\n                <i class=\"icon-home\">\n                </i>\n                <a href=\"index.html\">\n                  Dashboard\n                </a>\n              </li>\n              <li class=\"current\">\n                <a href=\"pages_calendar.html\" title=\"\">\n                  Calendar\n                </a>\n              </li>\n            </ul>\n            <ul class=\"crumb-buttons\">\n              <li>\n                <a href=\"charts.html\" title=\"\">\n                  <i class=\"icon-signal\">\n                  </i>\n                  <span>\n                    Statistics\n                  </span>\n                </a>\n              </li>\n              <li class=\"dropdown\">\n                <a href=\"#\" title=\"\" data-toggle=\"dropdown\">\n                  <i class=\"icon-tasks\">\n                  </i>\n                  <span>\n                    Users\n                    <strong>\n                      (+3)\n                    </strong>\n                  </span>\n                  <i class=\"icon-angle-down left-padding\">\n                  </i>\n                </a>\n                <ul class=\"dropdown-menu pull-right\">\n                  <li>\n                    <a href=\"form_components.html\" title=\"\">\n                      <i class=\"icon-plus\">\n                      </i>\n                      Add new User\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"http://envato.stammtec.de/themeforest/melon/tables_dynamic.html\"\n                    title=\"\">\n                      <i class=\"icon-reorder\">\n                      </i>\n                      Overview\n                    </a>\n                  </li>\n                </ul>\n              </li>\n              <li class=\"range\">\n                <a href=\"#\">\n                  <i class=\"icon-calendar\">\n                  </i>\n                  <span>\n                  </span>\n                  <i class=\"icon-angle-down\">\n                  </i>\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div class=\"page-header\">\n            <div class=\"page-title\">\n              <h3>\n                Form Layouts\n              </h3>\n              <span>\n                Good morning, John!\n              </span>\n            </div>\n            <ul class=\"page-stats\">\n              <li>\n                <div class=\"summary\">\n                  <span>\n                    New orders\n                  </span>\n                  <h3>\n                    17,561\n                  </h3>\n                </div>\n                <div id=\"sparkline-bar\" class=\"graph sparkline hidden-xs\">\n                  20,15,8,50,20,40,20,30,20,15,30,20,25,20\n                </div>\n              </li>\n              <li>\n                <div class=\"summary\">\n                  <span>\n                    My balance\n                  </span>\n                  <h3>\n                    $21,561.21\n                  </h3>\n                </div>\n                <div id=\"sparkline-bar2\" class=\"graph sparkline hidden-xs\">\n                  20,15,8,50,20,40,20,30,20,15,30,20,25,20\n                </div>\n              </li>\n            </ul>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"widget box\">\n                <div class=\"widget-header\">\n                  <h4>\n                    <i class=\"icon-reorder\">\n                    </i>\n                    Horizontal Forms\n                  </h4>\n                </div>\n                <div class=\"widget-content\">\n                  <form class=\"form-horizontal row-border\" action=\"#\">\n                    <div class=\"form-group\">\n                      <label class=\"col-md-2 control-label\">\n                        Full width input:\n                      </label>\n                      <div class=\"col-md-10\">\n                        <input type=\"text\" name=\"regular\" class=\"form-control\">\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"col-md-2 control-label\">\n                        Multiple inputs:\n                      </label>\n                      <div class=\"col-md-10\">\n                        <div class=\"row\">\n                          <div class=\"col-md-4\">\n                            <input type=\"text\" name=\"regular\" class=\"form-control\">\n                            <span class=\"help-block\">\n                              Left aligned helper\n                            </span>\n                          </div>\n                          <div class=\"col-md-4\">\n                            <input type=\"text\" name=\"regular\" class=\"form-control\">\n                            <span class=\"help-block align-center\">\n                              Centered helper\n                            </span>\n                          </div>\n                          <div class=\"col-md-4\">\n                            <input type=\"text\" name=\"regular\" class=\"form-control\">\n                            <span class=\"help-block align-right\">\n                              Right aligned helper\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"col-md-2 control-label\">\n                        Predefined width:\n                      </label>\n                      <div class=\"col-md-10\">\n                        <input class=\"form-control input-width-mini\" type=\"text\" placeholder=\".input-width-mini\"\n                        style=\"display: block;\">\n                        <input class=\"form-control input-width-small\" type=\"text\" placeholder=\".input-width-small\"\n                        style=\"display: block; margin-top: 6px;\">\n                        <input class=\"form-control input-width-medium\" type=\"text\" placeholder=\".input-width-medium\"\n                        style=\"display: block; margin-top: 6px;\">\n                        <input class=\"form-control input-width-large\" type=\"text\" placeholder=\".input-width-large\"\n                        style=\"display: block; margin-top: 6px;\">\n                        <input class=\"form-control input-width-xlarge\" type=\"text\" placeholder=\".input-width-xlarge\"\n                        style=\"display: block; margin-top: 6px;\">\n                        <input class=\"form-control input-width-xxlarge\" type=\"text\" placeholder=\".input-width-xxlarge\"\n                        style=\"display: block; margin-top: 6px;\">\n                        <input class=\"form-control input-block-level\" type=\"text\" placeholder=\".input-block-level\"\n                        style=\"display: block; margin-top: 6px;\">\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"col-md-2 control-label\">\n                        Select:\n                      </label>\n                      <div class=\"col-md-10\">\n                        <div class=\"row\">\n                          <div class=\"col-md-4\">\n                            <select class=\"form-control\" name=\"select\">\n                              <option value=\"opt1\">\n                                col-md-4\n                              </option>\n                              <option value=\"opt2\">\n                                Option 2\n                              </option>\n                              <option value=\"opt3\">\n                                Option 3\n                              </option>\n                            </select>\n                          </div>\n                        </div>\n                        <div class=\"row next-row\">\n                          <div class=\"col-md-6\">\n                            <select class=\"form-control\" name=\"select\">\n                              <option value=\"opt1\">\n                                col-md-6\n                              </option>\n                              <option value=\"opt2\">\n                                Option 2\n                              </option>\n                              <option value=\"opt3\">\n                                Option 3\n                              </option>\n                            </select>\n                          </div>\n                        </div>\n                        <div class=\"row next-row\">\n                          <div class=\"col-md-8\">\n                            <select class=\"form-control\" name=\"select\">\n                              <option value=\"opt1\">\n                                col-md-8\n                              </option>\n                              <option value=\"opt2\">\n                                Option 2\n                              </option>\n                              <option value=\"opt3\">\n                                Option 3\n                              </option>\n                            </select>\n                          </div>\n                        </div>\n                        <div class=\"row next-row\">\n                          <div class=\"col-md-12\">\n                            <select class=\"form-control\" name=\"select\">\n                              <option value=\"opt1\">\n                                col-md-12\n                              </option>\n                              <option value=\"opt2\">\n                                Option 2\n                              </option>\n                              <option value=\"opt3\">\n                                Option 3\n                              </option>\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"widget box\">\n                <div class=\"widget-header\">\n                  <h4>\n                    <i class=\"icon-reorder\">\n                    </i>\n                    Vertical Forms\n                  </h4>\n                </div>\n                <div class=\"widget-content\">\n                  <form class=\"form-vertical row-border\" action=\"#\">\n                    <div class=\"form-group\">\n                      <label class=\"control-label\">\n                        Full width input:\n                      </label>\n                      <input type=\"text\" name=\"regular\" class=\"form-control\">\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"control-label\">\n                        Multiple inputs:\n                      </label>\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\">\n                          <span class=\"help-block\">\n                            Left aligned helper\n                          </span>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\">\n                          <span class=\"help-block align-center\">\n                            Centered helper\n                          </span>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\">\n                          <span class=\"help-block align-right\">\n                            Right aligned helper\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"control-label\">\n                        Predefined width:\n                      </label>\n                      <input class=\"form-control input-width-mini\" type=\"text\" placeholder=\".input-width-mini\"\n                      style=\"display: block;\">\n                      <input class=\"form-control input-width-small\" type=\"text\" placeholder=\".input-width-small\"\n                      style=\"display: block; margin-top: 6px;\">\n                      <input class=\"form-control input-width-medium\" type=\"text\" placeholder=\".input-width-medium\"\n                      style=\"display: block; margin-top: 6px;\">\n                      <input class=\"form-control input-width-large\" type=\"text\" placeholder=\".input-width-large\"\n                      style=\"display: block; margin-top: 6px;\">\n                      <input class=\"form-control input-width-xlarge\" type=\"text\" placeholder=\".input-width-xlarge\"\n                      style=\"display: block; margin-top: 6px;\">\n                      <input class=\"form-control input-width-xxlarge\" type=\"text\" placeholder=\".input-width-xxlarge\"\n                      style=\"display: block; margin-top: 6px;\">\n                      <input class=\"form-control input-block-level\" type=\"text\" placeholder=\".input-block-level\"\n                      style=\"display: block; margin-top: 6px;\">\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"control-label\">\n                        Select:\n                      </label>\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <select class=\"form-control\" name=\"select\">\n                            <option value=\"opt1\">\n                              col-md-4\n                            </option>\n                            <option value=\"opt2\">\n                              Option 2\n                            </option>\n                            <option value=\"opt3\">\n                              Option 3\n                            </option>\n                          </select>\n                        </div>\n                      </div>\n                      <div class=\"row next-row\">\n                        <div class=\"col-md-6\">\n                          <select class=\"form-control\" name=\"select\">\n                            <option value=\"opt1\">\n                              col-md-6\n                            </option>\n                            <option value=\"opt2\">\n                              Option 2\n                            </option>\n                            <option value=\"opt3\">\n                              Option 3\n                            </option>\n                          </select>\n                        </div>\n                      </div>\n                      <div class=\"row next-row\">\n                        <div class=\"col-md-8\">\n                          <select class=\"form-control\" name=\"select\">\n                            <option value=\"opt1\">\n                              col-md-8\n                            </option>\n                            <option value=\"opt2\">\n                              Option 2\n                            </option>\n                            <option value=\"opt3\">\n                              Option 3\n                            </option>\n                          </select>\n                        </div>\n                      </div>\n                      <div class=\"row next-row\">\n                        <div class=\"col-md-12\">\n                          <select class=\"form-control\" name=\"select\">\n                            <option value=\"opt1\">\n                              col-md-12\n                            </option>\n                            <option value=\"opt2\">\n                              Option 2\n                            </option>\n                            <option value=\"opt3\">\n                              Option 3\n                            </option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"widget box\">\n                <div class=\"widget-header\">\n                  <h4>\n                    <i class=\"icon-reorder\">\n                    </i>\n                    Form Grid\n                  </h4>\n                </div>\n                <div class=\"widget-content\">\n                  <form class=\"form-vertical\" action=\"#\">\n                    <div class=\"form-group\">\n                      <div class=\"row\">\n                        <div class=\"col-md-12\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-12\">\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <div class=\"row\">\n                        <div class=\"col-md-11\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-11\">\n                        </div>\n                        <div class=\"col-md-1\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-1\">\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <div class=\"row\">\n                        <div class=\"col-md-10\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-10\">\n                        </div>\n                        <div class=\"col-md-2\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-2\">\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <div class=\"row\">\n                        <div class=\"col-md-9\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-9\">\n                        </div>\n                        <div class=\"col-md-3\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-3\">\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <div class=\"row\">\n                        <div class=\"col-md-8\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-8\">\n                        </div>\n                        <div class=\"col-md-4\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-4\">\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <div class=\"row\">\n                        <div class=\"col-md-7\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-7\">\n                        </div>\n                        <div class=\"col-md-5\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-5\">\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <div class=\"row\">\n                        <div class=\"col-md-6\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-6\">\n                        </div>\n                        <div class=\"col-md-6\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-6\">\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <div class=\"row\">\n                        <div class=\"col-md-5\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-5\">\n                        </div>\n                        <div class=\"col-md-7\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-7\">\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-4\">\n                        </div>\n                        <div class=\"col-md-8\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-8\">\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <div class=\"row\">\n                        <div class=\"col-md-3\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-3\">\n                        </div>\n                        <div class=\"col-md-9\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-9\">\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <div class=\"row\">\n                        <div class=\"col-md-2\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-2\">\n                        </div>\n                        <div class=\"col-md-10\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-10\">\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <div class=\"row\">\n                        <div class=\"col-md-1\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-1\">\n                        </div>\n                        <div class=\"col-md-11\">\n                          <input type=\"text\" name=\"regular\" class=\"form-control\" placeholder=\".col-md-11\">\n                        </div>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </body>\n\n</html>","repo_name":"zhangyage/Python-oldboy","path":"day10/meAdmin/form_layouts.html","language":"HTML","license":"apache-2.0","size":57776},"truncated_cells":[]},{"row_idx":53,"row":{"code":"To access the approval page, click on \"Approval\" in the main menu. It provides Interest Adjustments,\nPending Payments and Payment Moves Approval for supervisors.\n","repo_name":"NASA-Tournament-Lab/CoECI-OPM-Service-Credit-Redeposit-Deposit-Application","path":"Code/SCRD_BRE/src/web/help/approvalPageSubject.html","language":"HTML","license":"apache-2.0","size":162},"truncated_cells":[]},{"row_idx":54,"row":{"code":"/***********************************************************************************************\n *\n * Copyright (C) 2016, IBL Software Engineering spol. s r. o.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n ***********************************************************************************************/\n\npackage com.iblsoft.iwxxm.webservice.ws.internal;\n\nimport com.googlecode.jsonrpc4j.JsonRpcParam;\nimport com.iblsoft.iwxxm.webservice.util.Log;\nimport com.iblsoft.iwxxm.webservice.validator.IwxxmValidator;\nimport com.iblsoft.iwxxm.webservice.validator.ValidationError;\nimport com.iblsoft.iwxxm.webservice.validator.ValidationResult;\nimport com.iblsoft.iwxxm.webservice.ws.IwxxmWebService;\nimport com.iblsoft.iwxxm.webservice.ws.messages.ValidationRequest;\nimport com.iblsoft.iwxxm.webservice.ws.messages.ValidationResponse;\n\nimport java.io.File;\n\nimport static com.google.common.base.Preconditions.checkArgument;\n\n/**\n * Implementation class of IwxxmWebService interface.\n */\npublic class IwxxmWebServiceImpl implements IwxxmWebService {\n\n    private final IwxxmValidator iwxxmValidator;\n\n    public IwxxmWebServiceImpl(File validationCatalogFile, File validationRulesDir, String defaultIwxxmVersion) {\n        this.iwxxmValidator = new IwxxmValidator(validationCatalogFile, validationRulesDir, defaultIwxxmVersion);\n    }\n\n    @Override\n    public ValidationResponse validate(@JsonRpcParam(\"request\") ValidationRequest request) {\n        Log.INSTANCE.debug(\"IwxxmWebService.validate request started\");\n\n        checkRequestVersion(request.getRequestVersion());\n\n        ValidationResult validationResult = iwxxmValidator.validate(request.getIwxxmData(), request.getIwxxmVersion());\n        ValidationResponse.Builder responseBuilder = ValidationResponse.builder();\n        for (ValidationError ve : validationResult.getValidationErrors()) {\n            responseBuilder.addValidationError(ve.getError(), ve.getLineNumber(), ve.getColumnNumber());\n        }\n\n        Log.INSTANCE.debug(\"IwxxmWebService.validate request finished\");\n        return responseBuilder.build();\n    }\n\n    private void checkRequestVersion(String requestVersion) {\n        checkArgument(requestVersion != null && requestVersion.equals(\"1.0\"), \"Unsupported request version.\");\n    }\n}\n","repo_name":"iblsoft/iwxxm-validator","path":"src/main/java/com/iblsoft/iwxxm/webservice/ws/internal/IwxxmWebServiceImpl.java","language":"Java","license":"apache-2.0","size":2770},"truncated_cells":[]},{"row_idx":55,"row":{"code":"# Copyright 2011 WebDriver committers\n# Copyright 2011 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\"\"\"The ActionChains implementation.\"\"\"\nfrom selenium.webdriver.remote.command import Command\n\nclass ActionChains(object):\n    \"\"\"Generate user actions.\n    All actions are stored in the ActionChains object. Call perform() to fire\n    stored actions.\"\"\"\n\n    def __init__(self, driver):\n        \"\"\"Creates a new ActionChains.\n        Args:\n            driver: The WebDriver instance which performs user actions.\n        \"\"\"\n        self._driver = driver\n        self._actions = []\n\n    def perform(self):\n        \"\"\"Performs all stored actions.\"\"\"\n        for action in self._actions:\n            action()\n\n    def click(self, on_element=None):\n        \"\"\"Clicks an element.\n        Args:\n            on_element: The element to click.\n                        If None, clicks on current mouse position.\n        \"\"\"\n        if on_element: self.move_to_element(on_element)\n        self._actions.append(lambda:\n            self._driver.execute(Command.CLICK, {'button': 0}))\n        return self\n\n    def click_and_hold(self, on_element):\n        \"\"\"Holds down the left mouse button on an element.\n        Args:\n            on_element: The element to mouse down.\n                        If None, clicks on current mouse position.\n        \"\"\"\n        if on_element: self.move_to_element(on_element)\n        self._actions.append(lambda:\n            self._driver.execute(Command.MOUSE_DOWN, {}))\n        return self\n\n    def context_click(self, on_element):\n        \"\"\"Performs a context-click (right click) on an element.\n        Args:\n            on_element: The element to context-click.\n                        If None, clicks on current mouse position.\n        \"\"\"\n        if on_element: self.move_to_element(on_element)\n        self._actions.append(lambda:\n            self._driver.execute(Command.CLICK, {'button': 2}))\n        return self\n\n    def double_click(self, on_element):\n        \"\"\"Double-clicks an element.\n        Args:\n            on_element: The element to double-click.\n                        If None, clicks on current mouse position.\n        \"\"\"\n        if on_element: self.move_to_element(on_element)\n        self._actions.append(lambda:\n            self._driver.execute(Command.DOUBLE_CLICK, {}))\n        return self\n\n    def drag_and_drop(self, source, target):\n        \"\"\"Holds down the left mouse button on the source element,\n           then moves to the target element and releases the mouse button.\n        Args:\n            source: The element to mouse down.\n            target: The element to mouse up.\n        \"\"\"\n        self.click_and_hold(source)\n        self.release(target)\n        return self\n\n    def drag_and_drop_by_offset(self, source, xoffset, yoffset):\n        \"\"\"Holds down the left mouse button on the source element,\n           then moves to the target element and releases the mouse button.\n        Args:\n            source: The element to mouse down.\n            xoffset: X offset to move to.\n            yoffset: Y offset to move to.\n        \"\"\"\n        self.click_and_hold(source)\n        self.move_by_offset(xoffset, yoffset)\n        self.release(source)\n        return self\n\n    def key_down(self, key, element=None):\n        \"\"\"Sends a key press only, without releasing it.\n        Should only be used with modifier keys (Control, Alt and Shift).\n        Args:\n            key: The modifier key to send. Values are defined in Keys class.\n            target: The element to send keys.\n                    If None, sends a key to current focused element.\n        \"\"\"\n        if element: self.click(element)\n        self._actions.append(lambda:\n            self._driver.execute(Command.SEND_MODIFIER_KEY_TO_ACTIVE_ELEMENT, {\n                \"value\": key,\n                \"isdown\": True}))\n        return self\n\n    def key_up(self, key, element=None):\n        \"\"\"Releases a modifier key.\n        Args:\n            key: The modifier key to send. Values are defined in Keys class.\n            target: The element to send keys.\n                    If None, sends a key to current focused element.\n        \"\"\"\n        if element: self.click(element)\n        self._actions.append(lambda:\n            self._driver.execute(Command.SEND_MODIFIER_KEY_TO_ACTIVE_ELEMENT, {\n                \"value\": key,\n                \"isdown\": False}))\n        return self\n\n    def move_by_offset(self, xoffset, yoffset):\n        \"\"\"Moving the mouse to an offset from current mouse position.\n        Args:\n            xoffset: X offset to move to.\n            yoffset: Y offset to move to.\n        \"\"\"\n        self._actions.append(lambda:\n            self._driver.execute(Command.MOVE_TO, {\n                'xoffset': xoffset,\n                'yoffset': yoffset}))\n        return self\n\n    def move_to_element(self, to_element):\n        \"\"\"Moving the mouse to the middle of an element.\n        Args:\n            to_element: The element to move to.\n        \"\"\"\n        self._actions.append(lambda:\n            self._driver.execute(Command.MOVE_TO, {'element': to_element.id}))\n        return self\n\n    def move_to_element_with_offset(self, to_element, xoffset, yoffset):\n        \"\"\"Move the mouse by an offset of the specificed element.\n        Offsets are relative to the top-left corner of the element.\n        Args:\n            to_element: The element to move to.\n            xoffset: X offset to move to.\n            yoffset: Y offset to move to.\n        \"\"\"\n        self._actions.append(lambda:\n            self._driver.execute(Command.MOVE_TO, {\n                'element': to_element.id,\n                'xoffset': xoffset,\n                'yoffset': yoffset}))\n        return self\n\n    def release(self, on_element):\n        \"\"\"Releasing a held mouse button.\n        Args:\n            on_element: The element to mouse up.\n        \"\"\"\n        if on_element: self.move_to_element(on_element)\n        self._actions.append(lambda:\n            self._driver.execute(Command.MOUSE_UP, {}))\n        return self\n\n    def send_keys(self, *keys_to_send):\n        \"\"\"Sends keys to current focused element.\n        Args:\n            keys_to_send: The keys to send.\n        \"\"\"\n        self._actions.append(lambda:\n            self._driver.switch_to_active_element().send_keys(*keys_to_send))\n        return self\n\n    def send_keys_to_element(self, element, *keys_to_send):\n        \"\"\"Sends keys to an element.\n        Args:\n            element: The element to send keys.\n            keys_to_send: The keys to send.\n        \"\"\"\n        self._actions.append(lambda:\n            element.send_keys(*keys_to_send))\n        return self\n","repo_name":"hali4ka/robotframework-selenium2library","path":"src/Selenium2Library/lib/selenium-2.8.1/py/selenium/webdriver/common/action_chains.py","language":"Python","license":"apache-2.0","size":7157},"truncated_cells":[]},{"row_idx":56,"row":{"code":"package org.jboss.resteasy.reactive.client.processor.beanparam;\n\nimport static org.jboss.resteasy.reactive.common.processor.ResteasyReactiveDotNames.BEAN_PARAM;\nimport static org.jboss.resteasy.reactive.common.processor.ResteasyReactiveDotNames.COOKIE_PARAM;\nimport static org.jboss.resteasy.reactive.common.processor.ResteasyReactiveDotNames.FORM_PARAM;\nimport static org.jboss.resteasy.reactive.common.processor.ResteasyReactiveDotNames.HEADER_PARAM;\nimport static org.jboss.resteasy.reactive.common.processor.ResteasyReactiveDotNames.PATH_PARAM;\nimport static org.jboss.resteasy.reactive.common.processor.ResteasyReactiveDotNames.QUERY_PARAM;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.IdentityHashMap;\nimport java.util.List;\nimport java.util.Set;\nimport java.util.function.BiFunction;\nimport java.util.stream.Collectors;\nimport org.jboss.jandex.AnnotationInstance;\nimport org.jboss.jandex.AnnotationTarget;\nimport org.jboss.jandex.ClassInfo;\nimport org.jboss.jandex.DotName;\nimport org.jboss.jandex.FieldInfo;\nimport org.jboss.jandex.IndexView;\nimport org.jboss.jandex.MethodInfo;\nimport org.jboss.jandex.Type;\nimport org.jboss.resteasy.reactive.common.processor.JandexUtil;\n\npublic class BeanParamParser {\n\n    public static List<Item> parse(ClassInfo beanParamClass, IndexView index) {\n        Set<ClassInfo> processedBeanParamClasses = Collections.newSetFromMap(new IdentityHashMap<>());\n        return parseInternal(beanParamClass, index, processedBeanParamClasses);\n    }\n\n    private static List<Item> parseInternal(ClassInfo beanParamClass, IndexView index,\n            Set<ClassInfo> processedBeanParamClasses) {\n        if (!processedBeanParamClasses.add(beanParamClass)) {\n            throw new IllegalArgumentException(\"Cycle detected in BeanParam annotations; already processed class \"\n                    + beanParamClass.name());\n        }\n\n        try {\n            List<Item> resultList = new ArrayList<>();\n\n            // Parse class tree recursively\n            if (!JandexUtil.DOTNAME_OBJECT.equals(beanParamClass.superName())) {\n                resultList\n                        .addAll(parseInternal(index.getClassByName(beanParamClass.superName()), index,\n                                processedBeanParamClasses));\n            }\n\n            resultList.addAll(paramItemsForFieldsAndMethods(beanParamClass, QUERY_PARAM,\n                    (annotationValue, fieldInfo) -> new QueryParamItem(annotationValue,\n                            new FieldExtractor(null, fieldInfo.name(), fieldInfo.declaringClass().name().toString()),\n                            fieldInfo.type()),\n                    (annotationValue, getterMethod) -> new QueryParamItem(annotationValue, new GetterExtractor(getterMethod),\n                            getterMethod.returnType())));\n\n            resultList.addAll(paramItemsForFieldsAndMethods(beanParamClass, BEAN_PARAM,\n                    (annotationValue, fieldInfo) -> {\n                        Type type = fieldInfo.type();\n                        if (type.kind() == Type.Kind.CLASS) {\n                            List<Item> subBeanParamItems = parseInternal(index.getClassByName(type.asClassType().name()), index,\n                                    processedBeanParamClasses);\n                            return new BeanParamItem(subBeanParamItems,\n                                    new FieldExtractor(null, fieldInfo.name(), fieldInfo.declaringClass().name().toString()));\n                        } else {\n                            throw new IllegalArgumentException(\"BeanParam annotation used on a field that is not an object: \"\n                                    + beanParamClass.name() + \".\" + fieldInfo.name());\n                        }\n                    },\n                    (annotationValue, getterMethod) -> {\n                        Type returnType = getterMethod.returnType();\n                        List<Item> items = parseInternal(index.getClassByName(returnType.name()), index,\n                                processedBeanParamClasses);\n                        return new BeanParamItem(items, new GetterExtractor(getterMethod));\n                    }));\n\n            resultList.addAll(paramItemsForFieldsAndMethods(beanParamClass, COOKIE_PARAM,\n                    (annotationValue, fieldInfo) -> new CookieParamItem(annotationValue,\n                            new FieldExtractor(null, fieldInfo.name(),\n                                    fieldInfo.declaringClass().name().toString()),\n                            fieldInfo.type().name().toString()),\n                    (annotationValue, getterMethod) -> new CookieParamItem(annotationValue,\n                            new GetterExtractor(getterMethod), getterMethod.returnType().name().toString())));\n\n            resultList.addAll(paramItemsForFieldsAndMethods(beanParamClass, HEADER_PARAM,\n                    (annotationValue, fieldInfo) -> new HeaderParamItem(annotationValue,\n                            new FieldExtractor(null, fieldInfo.name(), fieldInfo.declaringClass().name().toString()),\n                            fieldInfo.type().name().toString()),\n                    (annotationValue, getterMethod) -> new HeaderParamItem(annotationValue,\n                            new GetterExtractor(getterMethod), getterMethod.returnType().name().toString())));\n\n            resultList.addAll(paramItemsForFieldsAndMethods(beanParamClass, PATH_PARAM,\n                    (annotationValue, fieldInfo) -> new PathParamItem(annotationValue, fieldInfo.type().name().toString(),\n                            new FieldExtractor(null, fieldInfo.name(), fieldInfo.declaringClass().name().toString())),\n                    (annotationValue, getterMethod) -> new PathParamItem(annotationValue,\n                            getterMethod.returnType().name().toString(),\n                            new GetterExtractor(getterMethod))));\n\n            resultList.addAll(paramItemsForFieldsAndMethods(beanParamClass, FORM_PARAM,\n                    (annotationValue, fieldInfo) -> new FormParamItem(annotationValue,\n                            fieldInfo.type().name().toString(),\n                            new FieldExtractor(null, fieldInfo.name(), fieldInfo.declaringClass().name().toString())),\n                    (annotationValue, getterMethod) -> new FormParamItem(annotationValue,\n                            getterMethod.returnType().name().toString(),\n                            new GetterExtractor(getterMethod))));\n\n            return resultList;\n\n        } finally {\n            processedBeanParamClasses.remove(beanParamClass);\n        }\n    }\n\n    private static MethodInfo getGetterMethod(ClassInfo beanParamClass, MethodInfo methodInfo) {\n        MethodInfo getter = null;\n        if (methodInfo.parameters().size() > 0) { // should be setter\n            // find the corresponding getter:\n            String setterName = methodInfo.name();\n            if (setterName.startsWith(\"set\")) {\n                getter = beanParamClass.method(setterName.replace(\"^set\", \"^get\"));\n            }\n        } else if (methodInfo.name().startsWith(\"get\")) {\n            getter = methodInfo;\n        }\n\n        if (getter == null) {\n            throw new IllegalArgumentException(\n                    \"No getter corresponding to \" + methodInfo.declaringClass().name() + \"#\" + methodInfo.name() + \" found\");\n        }\n        return getter;\n    }\n\n    private static <T extends Item> List<T> paramItemsForFieldsAndMethods(ClassInfo beanParamClass, DotName parameterType,\n            BiFunction<String, FieldInfo, T> fieldExtractor, BiFunction<String, MethodInfo, T> methodExtractor) {\n        return ParamTypeAnnotations.of(beanParamClass, parameterType).itemsForFieldsAndMethods(fieldExtractor, methodExtractor);\n    }\n\n    private BeanParamParser() {\n    }\n\n    private static class ParamTypeAnnotations {\n        private final ClassInfo beanParamClass;\n        private final List<AnnotationInstance> annotations;\n\n        private ParamTypeAnnotations(ClassInfo beanParamClass, DotName parameterType) {\n            this.beanParamClass = beanParamClass;\n\n            List<AnnotationInstance> relevantAnnotations = beanParamClass.annotations().get(parameterType);\n            this.annotations = relevantAnnotations == null\n                    ? Collections.emptyList()\n                    : relevantAnnotations.stream().filter(this::isFieldOrMethodAnnotation).collect(Collectors.toList());\n        }\n\n        private static ParamTypeAnnotations of(ClassInfo beanParamClass, DotName parameterType) {\n            return new ParamTypeAnnotations(beanParamClass, parameterType);\n        }\n\n        private <T extends Item> List<T> itemsForFieldsAndMethods(BiFunction<String, FieldInfo, T> itemFromFieldExtractor,\n                BiFunction<String, MethodInfo, T> itemFromMethodExtractor) {\n            return annotations.stream()\n                    .map(annotation -> toItem(annotation, itemFromFieldExtractor, itemFromMethodExtractor))\n                    .collect(Collectors.toList());\n        }\n\n        private <T extends Item> T toItem(AnnotationInstance annotation,\n                BiFunction<String, FieldInfo, T> itemFromFieldExtractor,\n                BiFunction<String, MethodInfo, T> itemFromMethodExtractor) {\n            String annotationValue = annotation.value() == null ? null : annotation.value().asString();\n\n            return annotation.target().kind() == AnnotationTarget.Kind.FIELD\n                    ? itemFromFieldExtractor.apply(annotationValue, annotation.target().asField())\n                    : itemFromMethodExtractor.apply(annotationValue,\n                            getGetterMethod(beanParamClass, annotation.target().asMethod()));\n        }\n\n        private boolean isFieldOrMethodAnnotation(AnnotationInstance annotation) {\n            return annotation.target().kind() == AnnotationTarget.Kind.FIELD\n                    || annotation.target().kind() == AnnotationTarget.Kind.METHOD;\n        }\n    }\n}\n","repo_name":"quarkusio/quarkus","path":"independent-projects/resteasy-reactive/client/processor/src/main/java/org/jboss/resteasy/reactive/client/processor/beanparam/BeanParamParser.java","language":"Java","license":"apache-2.0","size":9998},"truncated_cells":[]},{"row_idx":57,"row":{"code":"import * as React from 'react'\nimport styled from 'styled-components'\nimport { colors } from 'styles/variables'\n\ninterface InputFeedbackProps {\n  className?: string\n  valid?: boolean\n}\n\nconst InputFeedback: React.SFC<InputFeedbackProps> = ({ className, children }) => (\n  <div className={className}>{children}</div>\n)\n\nexport default styled(InputFeedback)`\n  width: 100%;\n  margin-top: 0.25rem;\n  font-size: 80%;\n  color: ${props => (props.valid ? colors.green : colors.red)};\n`\n","repo_name":"blvdgroup/crater","path":"priv/crater-web/src/components/ui/InputFeedback.tsx","language":"TypeScript","license":"apache-2.0","size":479},"truncated_cells":[]},{"row_idx":58,"row":{"code":"\nPotree.TranslationTool = function(camera) {\n\tTHREE.Object3D.call( this );\n\tvar scope = this;\n\n\tthis.camera = camera;\n\n\tthis.geometry = new THREE.Geometry();\n\tthis.material = new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\t\n\tthis.STATE = {\n\t\tDEFAULT: 0,\n\t\tTRANSLATE_X: 1,\n\t\tTRANSLATE_Y: 2,\n\t\tTRANSLATE_Z: 3\n\t};\n\t\n\tthis.parts = {\n\t\tARROW_X : {name: \"arrow_x\", object: undefined, color: new THREE.Color( 0xff0000 ), state: this.STATE.TRANSLATE_X},\n\t\tARROW_Y : {name: \"arrow_y\", object: undefined, color: new THREE.Color( 0x00ff00 ), state: this.STATE.TRANSLATE_Y},\n\t\tARROW_Z : {name: \"arrow_z\", object: undefined, color: new THREE.Color( 0x0000ff ), state: this.STATE.TRANSLATE_Z}\n\t}\n\t\n\tthis.translateStart;\n\t\n\tthis.state = this.STATE.DEFAULT;\n\tthis.highlighted;\n\tthis.targets;\n\t\n\tthis.build = function(){\n\t\tvar arrowX = scope.createArrow(scope.parts.ARROW_X, scope.parts.ARROW_X.color);\n\t\tarrowX.rotation.z = -Math.PI/2;\n\t\t\n\t\tvar arrowY = scope.createArrow(scope.parts.ARROW_Y, scope.parts.ARROW_Y.color);\n\t\t\n\t\tvar arrowZ = scope.createArrow(scope.parts.ARROW_Z, scope.parts.ARROW_Z.color);\n\t\tarrowZ.rotation.x = -Math.PI/2;\n\t\t\n\t\tscope.add(arrowX);\n\t\tscope.add(arrowY);\n\t\tscope.add(arrowZ);\n\t\t\n\t\t\n\t\tvar boxXY = scope.createBox(new THREE.Color( 0xffff00 ));\n\t\tboxXY.scale.z = 0.02;\n\t\tboxXY.position.set(0.5, 0.5, 0);\n\t\t\n\t\tvar boxXZ = scope.createBox(new THREE.Color( 0xff00ff ));\n\t\tboxXZ.scale.y = 0.02;\n\t\tboxXZ.position.set(0.5, 0, -0.5);\n\t\t\n\t\tvar boxYZ = scope.createBox(new THREE.Color( 0x00ffff ));\n\t\tboxYZ.scale.x = 0.02;\n\t\tboxYZ.position.set(0, 0.5, -0.5);\n\t\t\n\t\tscope.add(boxXY);\n\t\tscope.add(boxXZ);\n\t\tscope.add(boxYZ);\n\t\t\n\t\t\n\t\tscope.parts.ARROW_X.object = arrowX;\n\t\tscope.parts.ARROW_Y.object = arrowY;\n\t\tscope.parts.ARROW_Z.object = arrowZ;\n\t\t\n\t\t\n\t\tscope.scale.multiplyScalar(5);\n\t};\n\t\n\tthis.createBox = function(color){\n\t\tvar boxGeometry = new THREE.BoxGeometry(1, 1, 1);\n\t\tvar boxMaterial = new THREE.MeshBasicMaterial({color: color, transparent: true, opacity: 0.5});\n\t\tvar box = new THREE.Mesh(boxGeometry, boxMaterial);\n\t\t\n\t\treturn box;\n\t};\n\t\n\tthis.createArrow = function(partID, color){\n\t\tvar material = new THREE.MeshBasicMaterial({color: color});\n\t\t\n\t\tvar shaftGeometry = new THREE.CylinderGeometry(0.1, 0.1, 3, 10, 1, false);\n\t\tvar shaftMatterial  = material;\n\t\tvar shaft = new THREE.Mesh(shaftGeometry, shaftMatterial);\n\t\tshaft.position.y = 1.5;\n\t\t\n\t\tvar headGeometry = new THREE.CylinderGeometry(0, 0.3, 1, 10, 1, false);\n\t\tvar headMaterial  = material;\n\t\tvar head = new THREE.Mesh(headGeometry, headMaterial);\n\t\thead.position.y = 3;\n\t\t\n\t\tvar arrow = new THREE.Object3D();\n\t\tarrow.add(shaft);\n\t\tarrow.add(head);\n\t\tarrow.partID = partID;\n\t\tarrow.material = material;\n\t\t\n\t\treturn arrow;\n\t};\n\t\n\tthis.setHighlighted = function(partID){\n\t\tif(partID === undefined){\n\t\t\tif(scope.highlighted){\n\t\t\t\tscope.highlighted.object.material.color = scope.highlighted.color;\n\t\t\t\tscope.highlighted = undefined;\n\t\t\t}\n\t\t\t\n\t\t\treturn; \n\t\t}else if(scope.highlighted !== undefined && scope.highlighted !== partID){\n\t\t\tscope.highlighted.object.material.color = scope.highlighted.color;\n\t\t}\n\n\t\tscope.highlighted = partID;\n\t\tpartID.object.material.color = new THREE.Color(0xffff00);\n\t}\n\t\n\tthis.getHoveredObject = function(mouse){\n\t\tvar vector = new THREE.Vector3( mouse.x, mouse.y, 0.5 );\n\t\tvector.unproject(scope.camera);\n\t\t\n\t\tvar raycaster = new THREE.Raycaster();\n\t\traycaster.ray.set( scope.camera.position, vector.sub( scope.camera.position ).normalize() );\n\t\t\n\t\tvar intersections = raycaster.intersectObject(scope, true);\n\t\tif(intersections.length === 0){\n\t\t\tscope.setHighlighted(undefined);\n\t\t\treturn undefined;\n\t\t}\n\t\t\n\t\tvar I = intersections[0];\n\t\tvar partID = I.object.parent.partID;\n\t\t\t\n\t\treturn partID;\t\n\t}\n\t\n\tthis.onMouseMove = function(event){\n\n\t\tvar mouse = event.normalizedPosition;\n\t\t\n\t\tif(scope.state === scope.STATE.DEFAULT){\n\t\t\tscope.setHighlighted(scope.getHoveredObject(mouse));\n\t\t}else if(scope.state === scope.STATE.TRANSLATE_X || scope.state === scope.STATE.TRANSLATE_Y || scope.state === scope.STATE.TRANSLATE_Z){\n\t\t\tvar origin = scope.start.lineStart.clone();\n\t\t\tvar direction = scope.start.lineEnd.clone().sub(scope.start.lineStart);\n\t\t\tdirection.normalize();\n\t\t\t\n\t\t\tvar mousePoint = new THREE.Vector3(mouse.x, mouse.y);\n\t\t\t\n\t\t\tvar directionDistance = new THREE.Vector3().subVectors(mousePoint, origin).dot(direction);\n\t\t\tvar pointOnLine = direction.clone().multiplyScalar(directionDistance).add(origin);\n\t\t\t\n\t\t\tpointOnLine.unproject(scope.camera);\n\t\t\t\n\t\t\tvar diff = pointOnLine.clone().sub(scope.position);\n\t\t\tscope.position.copy(pointOnLine);\n\t\t\t\n\t\t\tfor(var i = 0; i < scope.targets.length; i++){\n\t\t\t\tvar target = scope.targets[0];\n\t\t\t\ttarget.position.add(diff);\n\t\t\t}\n\t\t\t\n\t\t\tevent.signal.halt();\n\t\t}\n\t\t\n\t};\n\t\n\tthis.onMouseDown = function(event){\n\t\n\t\tif(scope.state === scope.STATE.DEFAULT){\n\t\t\tvar hoveredObject = scope.getHoveredObject(event.normalizedPosition, scope.camera);\n\t\t\tif(hoveredObject){\n\t\t\t\tscope.state = hoveredObject.state;\n\t\t\t\t\n\t\t\t\tvar lineStart = scope.position.clone();\n\t\t\t\tvar lineEnd;\n\t\t\t\t\n\t\t\t\tif(scope.state === scope.STATE.TRANSLATE_X){\n\t\t\t\t\tlineEnd = scope.position.clone();\n\t\t\t\t\tlineEnd.x += 2;\n\t\t\t\t}else if(scope.state === scope.STATE.TRANSLATE_Y){\n\t\t\t\t\tlineEnd = scope.position.clone();\n\t\t\t\t\tlineEnd.y += 2;\n\t\t\t\t}else if(scope.state === scope.STATE.TRANSLATE_Z){\n\t\t\t\t\tlineEnd = scope.position.clone();\n\t\t\t\t\tlineEnd.z -= 2;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlineStart.project(scope.camera);\n\t\t\t\tlineEnd.project(scope.camera);\n\t\t\t\t\n\t\t\t\tscope.start = {\n\t\t\t\t\tmouse: event.normalizedPosition,\n\t\t\t\t\tlineStart: lineStart,\n\t\t\t\t\tlineEnd: lineEnd\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tevent.signal.halt();\n\t\t\t}\n\t\t\t\n\t\t}\t\t\n\t};\n\t\n\tthis.onMouseUp = function(event){\n\t\tscope.setHighlighted();\n\t\tscope.state = scope.STATE.DEFAULT;\n\t\t\n\t};\n\t\n\tthis.setTargets = function(targets){\n\t\tscope.targets = targets;\n\t\t\n\t\tif(scope.targets.length === 0){\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t//TODO calculate centroid of all targets\n\t\tvar centroid = targets[0].position.clone();\n\t\t//for(var i = 0; i < targets.length; i++){\n\t\t//\tvar target = targets[i];\n\t\t//}\n\t\t\n\t\tscope.position.copy(centroid);\n\t\t\n\t}\n\n\tthis.build();\n};\n\nPotree.TranslationTool.prototype = Object.create( THREE.Object3D.prototype );\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","repo_name":"idunshee/Portfolio","path":"Project/WPC/WPC_Viewer/src/utils/TranslationTool.js","language":"JavaScript","license":"apache-2.0","size":6194},"truncated_cells":[]},{"row_idx":59,"row":{"code":"/*\n * DBeaver - Universal Database Manager\n * Copyright (C) 2010-2019 Serge Rider (serge@jkiss.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.jkiss.dbeaver.ui.actions;\n\nimport org.eclipse.core.expressions.PropertyTester;\nimport org.eclipse.core.resources.*;\nimport org.jkiss.dbeaver.runtime.DBWorkbench;\nimport org.jkiss.dbeaver.runtime.IPluginService;\nimport org.jkiss.dbeaver.ui.ActionUtils;\n\n/**\n * GlobalPropertyTester\n */\npublic class GlobalPropertyTester extends PropertyTester {\n    //static final Log log = LogFactory.get vLog(ObjectPropertyTester.class);\n\n    public static final String NAMESPACE = \"org.jkiss.dbeaver.core.global\";\n    public static final String PROP_STANDALONE = \"standalone\";\n    public static final String PROP_HAS_ACTIVE_PROJECT = \"hasActiveProject\";\n    public static final String PROP_HAS_MULTI_PROJECTS = \"hasMultipleProjects\";\n\n    @Override\n    public boolean test(Object receiver, String property, Object[] args, Object expectedValue) {\n        switch (property) {\n            case PROP_HAS_MULTI_PROJECTS:\n                return DBWorkbench.getPlatform().getWorkspace().getProjects().size() > 1;\n            case PROP_HAS_ACTIVE_PROJECT:\n                return DBWorkbench.getPlatform().getWorkspace().getActiveProject() != null;\n            case PROP_STANDALONE:\n                return DBWorkbench.getPlatform().getApplication().isStandalone();\n        }\n        return false;\n    }\n\n    public static void firePropertyChange(String propName)\n    {\n        ActionUtils.evaluatePropertyState(NAMESPACE + \".\" + propName);\n    }\n\n    public static class ResourceListener implements IPluginService, IResourceChangeListener {\n\n        @Override\n        public void activateService() {\n            ResourcesPlugin.getWorkspace().addResourceChangeListener(this);\n        }\n\n        @Override\n        public void deactivateService() {\n            ResourcesPlugin.getWorkspace().removeResourceChangeListener(this);\n        }\n\n        @Override\n        public void resourceChanged(IResourceChangeEvent event) {\n            if (event.getType() == IResourceChangeEvent.POST_CHANGE) {\n                for (IResourceDelta childDelta : event.getDelta().getAffectedChildren()) {\n                    if (childDelta.getResource() instanceof IProject) {\n                        if (childDelta.getKind() == IResourceDelta.ADDED || childDelta.getKind() == IResourceDelta.REMOVED) {\n                            firePropertyChange(GlobalPropertyTester.PROP_HAS_MULTI_PROJECTS);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","repo_name":"liuyuanyuan/dbeaver","path":"plugins/org.jkiss.dbeaver.ui.navigator/src/org/jkiss/dbeaver/ui/actions/GlobalPropertyTester.java","language":"Java","license":"apache-2.0","size":3123},"truncated_cells":[]},{"row_idx":60,"row":{"code":"<?php\n/**\n * Razorphyn\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade the extension\n * to newer versions in the future.\n *\n * @copyright  Copyright (c) 2013 Razorphyn\n *\n * Extended Coming Soon Countdown\n *\n * @author     \tRazorphyn\n * @Site\t\thttp://razorphyn.com/\n */\n \n\tumask(002);\n\t//REMEBER THE FIRST 0\n\t$folderperm=0755; //Folders Permissions\n\t$fileperm=0644; //Files Permissions\n\n\n\tif(!is_dir(\"session\")) {mkdir(\"session\",$folderperm);file_put_contents(\"session/.htaccess\",\"Deny from All \\n IndexIgnore * \\n Header set X-Frame-Options SAMEORIGIN \\n Header set X-XSS-Protection '1; mode=block' \\n Header set X-Content-Type-Options 'nosniff'\");}\n\t\n\tini_set(\"session.auto_start\", \"0\");\n\tini_set(\"session.hash_function\", \"sha512\");\n\tini_set(\"session.entropy_file\", \"/dev/urandom\");\n\tini_set(\"session.entropy_length\", \"512\");\n\tini_set(\"session.save_path\", \"session\");\n\tini_set(\"session.gc_probability\", \"1\");\n\tini_set(\"session.cookie_httponly\", \"1\");\n\tini_set(\"session.use_only_cookies\", \"1\");\n\tini_set(\"session.use_trans_sid\", \"0\");\n\tsession_name(\"RazorphynExtendedComingsoon\");\n\tif (isset($_SERVER['HTTPS']) && !empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] != 'off') {\n\t\tini_set('session.cookie_secure', '1');\n\t}\n\tsession_start();\n\t\n\tif(isset($_SESSION[\"created\"]) && $_SESSION[\"created\"]==true) {unset($_SESSION[\"created\"]);header(\"Location: index.php\");}\n\telse{\n\t\t$dir=\"../config\";\n\t\t$fileconfig=$dir.\"/config.txt\";\n\t\t$passfile=$dir.\"/pass.php\";\n\t\t$socialfile=$dir.\"/social.txt\";\n\t\t$dirmail= $dir.\"/mails/\";\n\t\t$filefnmail= $dir.\"/fnmail.txt\";\n\t\t$filefnmessage= $dir.\"/fnmessage.txt\";\n\t\t$filefnfooter= $dir.\"/footermail.txt\";\n\t\t$filelogo= $dir.\"/logo.txt\";\n\t\t$filefrontmess= $dir.\"/frontmess.txt\";\n\t\t$filenews= $dir.\"/news.txt\";\n\t\t$fileindexfoot= $dir.\"/indexfooter.txt\";\n\t\t$access= $dir.\"/.htaccess\";\n\n\t\tif(!is_dir($dir)){\n\t\t\tif(mkdir($dir,0700)){\n\t\t\t\tmkdir(\"../config/scheduled\",$folderperm);\n\t\t\t\tfile_put_contents(\"../config/scheduled/.htaccess\",\"Deny from All\".\"\\n\".\"IndexIgnore * \\n Header set X-Frame-Options SAMEORIGIN \\n Header set X-XSS-Protection '1; mode=block' \\n Header set X-Content-Type-Options 'nosniff'\");\n\n\t\t\t\tif(!is_file($fileconfig))file_put_contents($fileconfig,\"\");\n\t\t\t\tif(!is_file($socialfile))file_put_contents($socialfile,\"\");\n\t\t\t\tif(!is_dir($dirmail)){ mkdir($dirmail,$folderperm);file_put_contents($dirmail.\".htaccess\",\"Deny from All\".\"\\n\".\"IndexIgnore * \\n Header set X-Frame-Options SAMEORIGIN \\n Header set X-XSS-Protection '1; mode=block' \\n Header set X-Content-Type-Options 'nosniff'\"); };\n\t\t\t\tif(!is_file($filefnmail))file_put_contents($filefnmail,\"\");\n\t\t\t\tif(!is_file($filefnmessage))file_put_contents($filefnmessage,\"\");\n\t\t\t\tif(!is_file($filefnfooter))file_put_contents($filefnfooter,\"\");\n\t\t\t\tif(!is_file($filelogo))file_put_contents($filelogo,\"\");\n\t\t\t\tif(!is_file($filefrontmess))file_put_contents($filefrontmess,\"\");\n\t\t\t\tif(!is_file($filenews))file_put_contents($filenews,\"\");\n\t\t\t\tif(!is_file($fileindexfoot))file_put_contents($fileindexfoot,\"\");\n\t\t\t\tif(!is_file($passfile))file_put_contents($passfile,'<?php $adminpassword=\\''.(hash(\"whirlpool\",\"admin\")).'\\'; ?>');\n\t\t\t\tif(!is_file($access))file_put_contents($access,\"Deny from All\".\"\\n\".\"IndexIgnore * \\n Header set X-Frame-Options SAMEORIGIN \\n Header set X-XSS-Protection '1; mode=block' \\n Header set X-Content-Type-Options 'nosniff'\");\n\t\t\t\tif(!is_file(\".htaccess\"))file_put_contents(\".htaccess\",\"IndexIgnore * \\n Header set X-Frame-Options SAMEORIGIN \\n Header set X-XSS-Protection '1; mode=block' \\n Header set X-Content-Type-Options 'nosniff'\");\n\t\t\t\tchmod($fileconfig, $fileperm);\n\t\t\t\tchmod($socialfile, $fileperm);\n\t\t\t\tchmod($dirmail, $folderperm);\n\t\t\t\tchmod($filefnmail, $fileperm);\n\t\t\t\tchmod($filefnmessage, $fileperm);\n\t\t\t\tchmod($filefnfooter, $fileperm);\n\t\t\t\tchmod($filelogo, $fileperm);\n\t\t\t\tchmod($filefrontmess, $fileperm);\n\t\t\t\tchmod($filenews, $fileperm);\n\t\t\t\tchmod($passfile, $fileperm);\n\t\t\t\t$_SESSION[\"created\"]=true;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(!is_dir(\"../config/scheduled\")){\n\t\t\t\tif(mkdir(\"../config/scheduled\",$folderperm))\n\t\t\t\t\tfile_put_contents(\"../config/scheduled/.htaccess\",\"Deny from All\".\"\\n\".\"IndexIgnore * \\n Header set X-Frame-Options SAMEORIGIN \\n Header set X-XSS-Protection '1; mode=block' \\n Header set X-Content-Type-Options 'nosniff'\");\n\t\t\t}\n\t\t\tif(!is_file($fileconfig))file_put_contents($fileconfig,\"\");\n\t\t\tif(!is_file($fileindexfoot))file_put_contents($fileindexfoot,\"\");\n\t\t\tif(!is_file($socialfile))file_put_contents($socialfile,\"\");\n\t\t\tif(!is_dir($dirmail)){mkdir($dirmail,folderperm);file_put_contents($dirmail.\".htaccess\",\"Deny from All\".\"\\n\".\"IndexIgnore * \\n Header set X-Frame-Options SAMEORIGIN \\n Header set X-XSS-Protection '1; mode=block' \\n Header set X-Content-Type-Options 'nosniff'\"); };\n\t\t\tif(!is_file($filefnmail))file_put_contents($filefnmail,\"\");\n\t\t\tif(!is_file($filefnmessage))file_put_contents($filefnmessage,\"\");\n\t\t\tif(!is_file($filefnfooter))file_put_contents($filefnfooter,\"\");\n\t\t\tif(!is_file($filelogo))file_put_contents($filelogo,\"\");\n\t\t\tif(!is_file($filefrontmess))file_put_contents($filefrontmess,\"\");\n\t\t\tif(!is_file($filenews))file_put_contents($filenews,\"\");\n\t\t\tif(!is_file($passfile))file_put_contents($passfile,'<?php $adminpassword=\\''.(hash(\"whirlpool\",\"admin\")).'\\'; ?>');\n\t\t\tif(!is_file($access))file_put_contents($access,\"Deny from All\".\"\\n\".\"IndexIgnore *\");\n\t\t\tif(!is_file(\".htaccess\"))file_put_contents(\".htaccess\",\"IndexIgnore * \\n Header set X-Frame-Options SAMEORIGIN \\n Header set X-XSS-Protection '1; mode=block' \\n Header set X-Content-Type-Options 'nosniff'\");\n\t\t\tchmod($fileconfig, $fileperm);\n\t\t\tchmod($socialfile, $fileperm);\n\t\t\tchmod($dirmail, $folderperm);\n\t\t\tchmod($filefnmail, $fileperm);\n\t\t\tchmod($filefnmessage, $fileperm);\n\t\t\tchmod($filefnfooter, $fileperm);\n\t\t\tchmod($filelogo, $fileperm);\n\t\t\tchmod($filefrontmess, $fileperm);\n\t\t\tchmod($filenews, $fileperm);\n\t\t\tchmod($passfile, $fileperm);\n\t\t\t$_SESSION[\"created\"]=true;\n\t\t}\n\t\techo \"<html><head></head><body><button onclick='javascript:ref();' style='position:relative;display:block;margin:0 auto;top:45%'>Return Back</button><script>function ref(){location.reload(true);}</script></body></html>\";\n\t}\n?>\n","repo_name":"Razorphyn/Extended-Comingsoon-Countdown","path":"admin/datacheck.php","language":"PHP","license":"apache-2.0","size":6171},"truncated_cells":[]},{"row_idx":61,"row":{"code":"this is my new learning GitHub class\nhello how are you doing\n#This class is running in La Ciotat france\n#this is github class\n# this is test file\nPulling changes\nDeepika Padukone talks about Katrina Kaif\nPrabhas turned down Rs 10cr ad for Baahubali\nHrithik, Sussanne and Twinkle party together\nWeek 1: Baahubali 2 (Hindi) collects Rs 245 cr\nDeepika wishes to take ‘Padmavati’ to Cannes\nSoha on comparisons with Kareena\nMilind wants to make a film on Lord Shiva\nPic: Sunny Leone sizzles in a special song\nThen and now: Yesteryear actress Mumtaz \nMovie review: Guardians of the Galaxy Vol. 2  \n","repo_name":"yogendra007/test-file","path":"README.md","language":"Markdown","license":"apache-2.0","size":596},"truncated_cells":[]},{"row_idx":62,"row":{"code":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <meta name=\"description\" content=\"Create a life that you love.\">\n\n    <title>Are you trying to squeeze more into an already full life? - Quercus Coaching</title>\n\n    <link rel=\"canonical\" href=\"/2016/03/30/blog-march/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/clean-blog.css\">\n\n    <!-- Pygments Github CSS -->\n    <link rel=\"stylesheet\" href=\"/css/syntax.css\">\n\n    <!-- Custom Fonts -->\n    <link href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <link href='//fonts.googleapis.com/css?family=Lora:400,700,400italic,700italic' rel='stylesheet' type='text/css'>\n    <link href='//fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,800italic,400,300,600,700,800' rel='stylesheet' type='text/css'>\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n</head>\n\n\n<body>\n\n    <!-- Navigation -->\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n    <div class=\"container-fluid\">\n        <!-- Brand and toggle get grouped for better mobile display -->\n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">Quercus Coaching</a>\n        </div>\n\n        <!-- Collect the nav links, forms, and other content for toggling -->\n        <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n            <ul class=\"nav navbar-nav navbar-right\">\n                \n                    \n                    <li><a href=\"/\" >Home</a></li>\n                \n                    \n                    <li><a href=\"/about/\" >About</a></li>\n                \n                    \n                    <li><a href=\"/contact/\" >Contact</a></li>\n                \n            </ul>\n<!--                 <li>\n                    <a href=\"/\">Home</a>\n                </li>\n                \n                <li>\n                    <a href=\"/404.html\">Page Not Found</a>\n                </li>\n                \n                <li>\n                    <a href=\"/about/\">About</a>\n                </li>\n                \n                <li>\n                    <a href=\"/contact/\">Contact</a>\n                </li>\n                \n            </ul>\n -->        </div>\n        <!-- /.navbar-collapse -->\n    </div>\n    <!-- /.container -->\n</nav>\n\n\n    <!-- Post Header -->\n<header class=\"intro-header\" style=\"background-image: url('/img/banner_photo.png')\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <h1>Are you trying to squeeze more into an already full life?</h1>\n                    \n                    <h2 class=\"subheading\">Have you ever noticed that so many things that could improve your life involve adding ... more?</h2>\n                    \n                    <span class=\"meta\">Posted by Alison Macduff on March 30, 2016</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n\n\t\t\t\t<p><em>Are you trying to squeeze more into an already full life?</em></p>\n\n<p>Have you ever noticed that so many things that could improve your life involve adding … <strong>more?</strong></p>\n\n<p><strong>For example:</strong></p>\n\n<ul>\n  <li><strong>more</strong> time in the gym/with the kids/meditating/jogging</li>\n  <li><strong>more</strong> information about getting fit/healthy eating/how to succeed</li>\n  <li><strong>more</strong> attention to your loved ones/the present moment</li>\n  <li><strong>more</strong> action around career goals/marketing yourself/searching for The One.</li>\n</ul>\n\n<p>However, in my experience, trying to put more into a cup which is already full just results in overflow. In our lives that can feel like overwhelm - resulting in less sleep, poor health, low self esteem, guilt and even shame.</p>\n\n<p>We are led to believe that if we only knew/did/had/were … (fill in the gap yourself) our lives would be perfect, and when we fail and end up feeling worse about ourselves – and less likely to try again.</p>\n\n<p>Part of the job of a coach is to help you empty the cup – review your life to look at what’s working and, in areas of your life which aren’t working, examine what you have been doing and what you have learnt about yourself.</p>\n\n<p>Part of emptying the cup also involves discarding the ‘shoulds’ in your life so that you are left with <u>your</u> core values – the ones that get you up in the morning. These values will be reflected in what you are committed to in life and the strengths that get you through the day.</p>\n\n<p>Coaching can act like a knife to cut away everything that isn’t <u>you</u> or aligned with <u>your</u> values. Clients experience a clarity of vision that can be exhilarating, liberating the energy trapped in previous failed attempts, to be redirected into the strengths that have already got you this far.</p>\n\n<p><u>For example</u>, who wants to lose weight? How many times have you tried and how much energy have you expended on this? However, to ‘lose weight’ covers many different areas- e.g. how healthy you feel, your size, what you eat, your shape.\nWhat would it be like to give up the idea of losing weight? How would it feel to be ok about the weight you are now? Notice how your body responds to that thought.</p>\n\n<p>Instead, what is it <u>specifically</u> that you want?</p>\n\n<ul>\n  <li>To feel toned/fit into a size smaller?</li>\n  <li>To feel less out of breath?</li>\n  <li>To sleep better?</li>\n  <li>To give up coffee/sugar/alcohol/chocolate/smoking?</li>\n  <li>To have more energy?</li>\n</ul>\n\n<p><u>Choose one area</u> and look at:</p>\n\n<ul>\n  <li>when you have tried and failed - and what you said about yourself.</li>\n  <li>what you think you ‘should’ do/be/have in this area.</li>\n</ul>\n\n<p>If you gave up all the regrets/blame/sense of failure, what one step could you do today to give you a positive result in this area?</p>\n\n<p>Make it something that you enjoy, something that you are already good at or something that is aligned to a commitment you already have.</p>\n\n<p>We are filled to the brim with knowledge, but knowledge isn’t enough until it works in the service of <u>your</u> values, <u>your</u> strengths and <u>your</u> commitments. \nEnjoy!</p>\n\n\n\n                <hr>\n\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2016/01/17/coaching-for-carers/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Coaching for carers\">&larr; Previous Post</a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2016/04/28/are_you_sabotaging_yourself/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Are you sabotaging yourself?\">Next Post &rarr;</a>\n                    </li>\n                    \n                </ul>\n\n            </div>\n        </div>\n    </div>\n</article>\n\n<hr>\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">\n                    <li>\n                        <a href=\"/feed.xml\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fa fa-square fa-stack-2x\"></i>\n                                <i class=\"fa fa-rss fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n                    \n                    \n                    \n                    <li>\n                        <a href=\"https://github.com/akmacduff\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fa fa-square fa-stack-2x\"></i>\n                                <i class=\"fa fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <p class=\"copyright text-muted\">Copyright &copy; Quercus Coaching 2016. Made using <a href=\"https://jekyllrb.com/\">Jekyll</a> with the <a href=\"https://github.com/IronSummitMedia/startbootstrap-clean-blog-jekyll\">startbootstrap clean blog jekyll theme</a>.</p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/clean-blog.min.js \"></script>\n\n\n</body>\n\n</html>\n","repo_name":"akmacduff/akmacduff.github.io","path":"_site/2016/03/30/blog-march/index.html","language":"HTML","license":"apache-2.0","size":9833},"truncated_cells":[]},{"row_idx":63,"row":{"code":"package bwhatsapp\n\nimport (\n\t\"encoding/gob\"\n\t\"encoding/json\"\n\t\"errors\"\n\t\"fmt\"\n\t\"os\"\n\t\"strings\"\n\n\tqrcodeTerminal \"github.com/Baozisoftware/qrcode-terminal-go\"\n\t\"github.com/Rhymen/go-whatsapp\"\n)\n\ntype ProfilePicInfo struct {\n\tURL    string `json:\"eurl\"`\n\tTag    string `json:\"tag\"`\n\tStatus int16  `json:\"status\"`\n}\n\nfunc qrFromTerminal(invert bool) chan string {\n\tqr := make(chan string)\n\n\tgo func() {\n\t\tterminal := qrcodeTerminal.New()\n\n\t\tif invert {\n\t\t\tterminal = qrcodeTerminal.New2(qrcodeTerminal.ConsoleColors.BrightWhite, qrcodeTerminal.ConsoleColors.BrightBlack, qrcodeTerminal.QRCodeRecoveryLevels.Medium)\n\t\t}\n\n\t\tterminal.Get(<-qr).Print()\n\t}()\n\n\treturn qr\n}\n\nfunc (b *Bwhatsapp) readSession() (whatsapp.Session, error) {\n\tsession := whatsapp.Session{}\n\tsessionFile := b.Config.GetString(sessionFile)\n\n\tif sessionFile == \"\" {\n\t\treturn session, errors.New(\"if you won't set SessionFile then you will need to scan QR code on every restart\")\n\t}\n\n\tfile, err := os.Open(sessionFile)\n\tif err != nil {\n\t\treturn session, err\n\t}\n\n\tdefer file.Close()\n\n\tdecoder := gob.NewDecoder(file)\n\n\treturn session, decoder.Decode(&session)\n}\n\nfunc (b *Bwhatsapp) writeSession(session whatsapp.Session) error {\n\tsessionFile := b.Config.GetString(sessionFile)\n\n\tif sessionFile == \"\" {\n\t\t// we already sent a warning while starting the bridge, so let's be quiet here\n\t\treturn nil\n\t}\n\n\tfile, err := os.Create(sessionFile)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tdefer file.Close()\n\n\tencoder := gob.NewEncoder(file)\n\n\treturn encoder.Encode(session)\n}\n\nfunc (b *Bwhatsapp) restoreSession() (*whatsapp.Session, error) {\n\tsession, err := b.readSession()\n\tif err != nil {\n\t\tb.Log.Warn(err.Error())\n\t}\n\n\tb.Log.Debugln(\"Restoring WhatsApp session..\")\n\n\tsession, err = b.conn.RestoreWithSession(session)\n\tif err != nil {\n\t\t// restore session connection timed out (I couldn't get over it without logging in again)\n\t\treturn nil, errors.New(\"failed to restore session: \" + err.Error())\n\t}\n\n\tb.Log.Debugln(\"Session restored successfully!\")\n\n\treturn &session, nil\n}\n\nfunc (b *Bwhatsapp) getSenderName(senderJid string) string {\n\tif sender, exists := b.users[senderJid]; exists {\n\t\tif sender.Name != \"\" {\n\t\t\treturn sender.Name\n\t\t}\n\t\t// if user is not in phone contacts\n\t\t// it is the most obvious scenario unless you sync your phone contacts with some remote updated source\n\t\t// users can change it in their WhatsApp settings -> profile -> click on Avatar\n\t\tif sender.Notify != \"\" {\n\t\t\treturn sender.Notify\n\t\t}\n\n\t\tif sender.Short != \"\" {\n\t\t\treturn sender.Short\n\t\t}\n\t}\n\n\t// try to reload this contact\n\t_, err := b.conn.Contacts()\n\tif err != nil {\n\t\tb.Log.Errorf(\"error on update of contacts: %v\", err)\n\t}\n\n\tif contact, exists := b.conn.Store.Contacts[senderJid]; exists {\n\t\t// Add it to the user map\n\t\tb.users[senderJid] = contact\n\n\t\tif contact.Name != \"\" {\n\t\t\treturn contact.Name\n\t\t}\n\t\t// if user is not in phone contacts\n\t\t// same as above\n\t\treturn contact.Notify\n\t}\n\n\treturn \"\"\n}\n\nfunc (b *Bwhatsapp) getSenderNotify(senderJid string) string {\n\tif sender, exists := b.users[senderJid]; exists {\n\t\treturn sender.Notify\n\t}\n\n\treturn \"\"\n}\n\nfunc (b *Bwhatsapp) GetProfilePicThumb(jid string) (*ProfilePicInfo, error) {\n\tdata, err := b.conn.GetProfilePicThumb(jid)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to get avatar: %v\", err)\n\t}\n\n\tcontent := <-data\n\tinfo := &ProfilePicInfo{}\n\n\terr = json.Unmarshal([]byte(content), info)\n\tif err != nil {\n\t\treturn info, fmt.Errorf(\"failed to unmarshal avatar info: %v\", err)\n\t}\n\n\treturn info, nil\n}\n\nfunc isGroupJid(identifier string) bool {\n\treturn strings.HasSuffix(identifier, \"@g.us\") ||\n\t\tstrings.HasSuffix(identifier, \"@temp\") ||\n\t\tstrings.HasSuffix(identifier, \"@broadcast\")\n}\n","repo_name":"42wim/matterbridge","path":"bridge/whatsapp/helpers.go","language":"GO","license":"apache-2.0","size":3689},"truncated_cells":[]},{"row_idx":64,"row":{"code":"'use strict';\n\nvar consoleBaseUrl = window.location.href;\nconsoleBaseUrl = consoleBaseUrl.substring(0, consoleBaseUrl.indexOf(\"/console\"));\nconsoleBaseUrl = consoleBaseUrl + \"/console\";\nvar configUrl = consoleBaseUrl + \"/config\";\n\nvar auth = {};\nvar resourceBundle;\nvar locale = 'en';\n\nvar module = angular.module('keycloak', [ 'keycloak.services', 'keycloak.loaders', 'ui.bootstrap', 'ui.select2', 'angularFileUpload', 'angularTreeview', 'pascalprecht.translate', 'ngCookies', 'ngSanitize', 'ui.ace']);\nvar resourceRequests = 0;\nvar loadingTimer = -1;\n\nangular.element(document).ready(function () {\n    var keycloakAuth = new Keycloak(configUrl);\n\n    function whoAmI(success, error) {\n        var req = new XMLHttpRequest();\n        req.open('GET', consoleBaseUrl + \"/whoami\", true);\n        req.setRequestHeader('Accept', 'application/json');\n        req.setRequestHeader('Authorization', 'bearer ' + keycloakAuth.token);\n\n        req.onreadystatechange = function () {\n            if (req.readyState == 4) {\n                if (req.status == 200) {\n                    var data = JSON.parse(req.responseText);\n                    success(data);\n                } else {\n                    error();\n                }\n            }\n        }\n\n        req.send();\n    }\n\n    function loadResourceBundle(success, error) {\n        var req = new XMLHttpRequest();\n        req.open('GET', consoleBaseUrl + '/messages.json?lang=' + locale, true);\n        req.setRequestHeader('Accept', 'application/json');\n\n        req.onreadystatechange = function () {\n            if (req.readyState == 4) {\n                if (req.status == 200) {\n                    var data = JSON.parse(req.responseText);\n                    success && success(data);\n                } else {\n                    error && error();\n                }\n            }\n        }\n\n        req.send();\n    }\n\n    function hasAnyAccess(user) {\n        return user && user['realm_access'];\n    }\n\n    keycloakAuth.onAuthLogout = function() {\n        location.reload();\n    }\n\n    keycloakAuth.init({ onLoad: 'login-required' }).success(function () {\n        auth.authz = keycloakAuth;\n\n        if (auth.authz.idTokenParsed.locale) {\n            locale = auth.authz.idTokenParsed.locale;\n        }\n\n        auth.refreshPermissions = function(success, error) {\n            whoAmI(function(data) {\n                auth.user = data;\n                auth.loggedIn = true;\n                auth.hasAnyAccess = hasAnyAccess(data);\n\n                success();\n            }, function() {\n                error();\n            });\n        };\n\n        loadResourceBundle(function(data) {\n            resourceBundle = data;\n\n            auth.refreshPermissions(function () {\n                module.factory('Auth', function () {\n                    return auth;\n                });\n                var injector = angular.bootstrap(document, [\"keycloak\"]);\n\n                injector.get('$translate')('consoleTitle').then(function (consoleTitle) {\n                    document.title = consoleTitle;\n                });\n            });\n        });\n    }).error(function () {\n        window.location.reload();\n    });\n});\n\nmodule.factory('authInterceptor', function($q, Auth) {\n    return {\n        request: function (config) {\n            if (!config.url.match(/.html$/)) {\n                var deferred = $q.defer();\n                if (Auth.authz.token) {\n                    Auth.authz.updateToken(5).success(function () {\n                        config.headers = config.headers || {};\n                        config.headers.Authorization = 'Bearer ' + Auth.authz.token;\n\n                        deferred.resolve(config);\n                    }).error(function () {\n                        location.reload();\n                    });\n                }\n                return deferred.promise;\n            } else {\n                return config;\n            }\n        }\n    };\n});\n\nmodule.config(['$translateProvider', function($translateProvider) {\n    $translateProvider.useSanitizeValueStrategy('sanitizeParameters');\n    $translateProvider.preferredLanguage(locale);\n    $translateProvider.translations(locale, resourceBundle);\n}]);\n\nmodule.config([ '$routeProvider', function($routeProvider) {\n    $routeProvider\n        .when('/create/realm', {\n            templateUrl : resourceUrl + '/partials/realm-create.html',\n            resolve : {\n\n            },\n            controller : 'RealmCreateCtrl'\n        })\n        .when('/realms/:realm', {\n            templateUrl : resourceUrl + '/partials/realm-detail.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n            },\n            controller : 'RealmDetailCtrl'\n        })\n        .when('/realms/:realm/login-settings', {\n            templateUrl : resourceUrl + '/partials/realm-login-settings.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                serverInfo : function(ServerInfo) {\n                    return ServerInfo.delay;\n                }\n            },\n            controller : 'RealmLoginSettingsCtrl'\n        })\n        .when('/realms/:realm/theme-settings', {\n            templateUrl : resourceUrl + '/partials/realm-theme-settings.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n            },\n            controller : 'RealmThemeCtrl'\n        })\n        .when('/realms/:realm/cache-settings', {\n            templateUrl : resourceUrl + '/partials/realm-cache-settings.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n            },\n            controller : 'RealmCacheCtrl'\n        })\n        .when('/realms', {\n            templateUrl : resourceUrl + '/partials/realm-list.html',\n            controller : 'RealmListCtrl'\n        })\n        .when('/realms/:realm/token-settings', {\n            templateUrl : resourceUrl + '/partials/realm-tokens.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                }\n            },\n            controller : 'RealmTokenDetailCtrl'\n        })\n        .when('/realms/:realm/client-initial-access', {\n            templateUrl : resourceUrl + '/partials/client-initial-access.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                clientInitialAccess : function(ClientInitialAccessLoader) {\n                    return ClientInitialAccessLoader();\n                },\n                clientRegTrustedHosts : function(ClientRegistrationTrustedHostListLoader) {\n                    return ClientRegistrationTrustedHostListLoader();\n                }\n            },\n            controller : 'ClientInitialAccessCtrl'\n        })\n        .when('/realms/:realm/client-initial-access/create', {\n            templateUrl : resourceUrl + '/partials/client-initial-access-create.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                }\n            },\n            controller : 'ClientInitialAccessCreateCtrl'\n        })\n        .when('/realms/:realm/client-reg-trusted-hosts/create', {\n            templateUrl : resourceUrl + '/partials/client-reg-trusted-host-create.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                clientRegTrustedHost : function() {\n                    return {};\n                }\n            },\n            controller : 'ClientRegistrationTrustedHostDetailCtrl'\n        })\n        .when('/realms/:realm/client-reg-trusted-hosts/:hostname', {\n            templateUrl : resourceUrl + '/partials/client-reg-trusted-host-detail.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                clientRegTrustedHost : function(ClientRegistrationTrustedHostLoader) {\n                    return ClientRegistrationTrustedHostLoader();\n                }\n            },\n            controller : 'ClientRegistrationTrustedHostDetailCtrl'\n        })\n        .when('/realms/:realm/keys-settings', {\n            templateUrl : resourceUrl + '/partials/realm-keys.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                }\n            },\n            controller : 'RealmKeysDetailCtrl'\n        })\n        .when('/realms/:realm/identity-provider-settings', {\n            templateUrl : resourceUrl + '/partials/realm-identity-provider.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                },\n                instance : function(IdentityProviderLoader) {\n                    return {};\n                },\n                providerFactory : function(IdentityProviderFactoryLoader) {\n                    return {};\n                },\n                authFlows : function(AuthenticationFlowsLoader) {\n                    return {};\n                }\n            },\n            controller : 'RealmIdentityProviderCtrl'\n        })\n        .when('/create/identity-provider/:realm/:provider_id', {\n            templateUrl : function(params){ return resourceUrl + '/partials/realm-identity-provider-' + params.provider_id + '.html'; },\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                },\n                instance : function(IdentityProviderLoader) {\n                    return {};\n                },\n                providerFactory : function(IdentityProviderFactoryLoader) {\n                    return new IdentityProviderFactoryLoader();\n                },\n                authFlows : function(AuthenticationFlowsLoader) {\n                    return AuthenticationFlowsLoader();\n                }\n            },\n            controller : 'RealmIdentityProviderCtrl'\n        })\n        .when('/realms/:realm/identity-provider-settings/provider/:provider_id/:alias', {\n            templateUrl : function(params){ return resourceUrl + '/partials/realm-identity-provider-' + params.provider_id + '.html'; },\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                },\n                instance : function(IdentityProviderLoader) {\n                    return IdentityProviderLoader();\n                },\n                providerFactory : function(IdentityProviderFactoryLoader) {\n                    return IdentityProviderFactoryLoader();\n                },\n                authFlows : function(AuthenticationFlowsLoader) {\n                    return AuthenticationFlowsLoader();\n                }\n            },\n            controller : 'RealmIdentityProviderCtrl'\n        })\n        .when('/realms/:realm/identity-provider-settings/provider/:provider_id/:alias/export', {\n            templateUrl : resourceUrl + '/partials/realm-identity-provider-export.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                },\n                identityProvider : function(IdentityProviderLoader) {\n                    return IdentityProviderLoader();\n                },\n                providerFactory : function(IdentityProviderFactoryLoader) {\n                    return IdentityProviderFactoryLoader();\n                }\n            },\n            controller : 'RealmIdentityProviderExportCtrl'\n        })\n        .when('/realms/:realm/identity-provider-mappers/:alias/mappers', {\n            templateUrl : function(params){ return resourceUrl + '/partials/identity-provider-mappers.html'; },\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                identityProvider : function(IdentityProviderLoader) {\n                    return IdentityProviderLoader();\n                },\n                mapperTypes : function(IdentityProviderMapperTypesLoader) {\n                    return IdentityProviderMapperTypesLoader();\n                },\n                mappers : function(IdentityProviderMappersLoader) {\n                    return IdentityProviderMappersLoader();\n                }\n            },\n            controller : 'IdentityProviderMapperListCtrl'\n        })\n        .when('/realms/:realm/identity-provider-mappers/:alias/mappers/:mapperId', {\n            templateUrl : function(params){ return resourceUrl + '/partials/identity-provider-mapper-detail.html'; },\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                identityProvider : function(IdentityProviderLoader) {\n                    return IdentityProviderLoader();\n                },\n                mapperTypes : function(IdentityProviderMapperTypesLoader) {\n                    return IdentityProviderMapperTypesLoader();\n                },\n                mapper : function(IdentityProviderMapperLoader) {\n                    return IdentityProviderMapperLoader();\n                }\n            },\n            controller : 'IdentityProviderMapperCtrl'\n        })\n        .when('/create/identity-provider-mappers/:realm/:alias', {\n            templateUrl : function(params){ return resourceUrl + '/partials/identity-provider-mapper-detail.html'; },\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                identityProvider : function(IdentityProviderLoader) {\n                    return IdentityProviderLoader();\n                },\n                mapperTypes : function(IdentityProviderMapperTypesLoader) {\n                    return IdentityProviderMapperTypesLoader();\n                }\n            },\n            controller : 'IdentityProviderMapperCreateCtrl'\n        })\n\n        .when('/realms/:realm/default-roles', {\n            templateUrl : resourceUrl + '/partials/realm-default-roles.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                clients : function(ClientListLoader) {\n                    return ClientListLoader();\n                },\n                roles : function(RoleListLoader) {\n                    return RoleListLoader();\n                }\n            },\n            controller : 'RealmDefaultRolesCtrl'\n        })\n        .when('/realms/:realm/smtp-settings', {\n            templateUrl : resourceUrl + '/partials/realm-smtp.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                }\n            },\n            controller : 'RealmSMTPSettingsCtrl'\n        })\n        .when('/realms/:realm/events', {\n            templateUrl : resourceUrl + '/partials/realm-events.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n            },\n            controller : 'RealmEventsCtrl'\n        })\n        .when('/realms/:realm/admin-events', {\n            templateUrl : resourceUrl + '/partials/realm-events-admin.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n            },\n            controller : 'RealmAdminEventsCtrl'\n        })\n        .when('/realms/:realm/events-settings', {\n            templateUrl : resourceUrl + '/partials/realm-events-config.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                },\n                eventsConfig : function(RealmEventsConfigLoader) {\n                    return RealmEventsConfigLoader();\n                }\n            },\n            controller : 'RealmEventsConfigCtrl'\n        })\n        .when('/realms/:realm/partial-import', {\n            templateUrl : resourceUrl + '/partials/partial-import.html',\n            resolve : {\n                resourceName : function() { return 'users'},\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                }\n            },\n            controller : 'RealmImportCtrl'\n        })\n        .when('/create/user/:realm', {\n            templateUrl : resourceUrl + '/partials/user-detail.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                user : function() {\n                    return {};\n                }\n            },\n            controller : 'UserDetailCtrl'\n        })\n        .when('/realms/:realm/users/:user', {\n            templateUrl : resourceUrl + '/partials/user-detail.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                user : function(UserLoader) {\n                    return UserLoader();\n                }\n            },\n            controller : 'UserDetailCtrl'\n        })\n        .when('/realms/:realm/users/:user/user-attributes', {\n            templateUrl : resourceUrl + '/partials/user-attributes.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                user : function(UserLoader) {\n                    return UserLoader();\n                }\n            },\n            controller : 'UserDetailCtrl'\n        })\n        .when('/realms/:realm/users/:user/user-credentials', {\n            templateUrl : resourceUrl + '/partials/user-credentials.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                user : function(UserLoader) {\n                    return UserLoader();\n                }\n            },\n            controller : 'UserCredentialsCtrl'\n        })\n        .when('/realms/:realm/users/:user/role-mappings', {\n            templateUrl : resourceUrl + '/partials/role-mappings.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                user : function(UserLoader) {\n                    return UserLoader();\n                },\n                clients : function(ClientListLoader) {\n                    return ClientListLoader();\n                },\n                client : function() {\n                    return {};\n                }\n            },\n            controller : 'UserRoleMappingCtrl'\n        })\n        .when('/realms/:realm/users/:user/groups', {\n            templateUrl : resourceUrl + '/partials/user-group-membership.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                user : function(UserLoader) {\n                    return UserLoader();\n                },\n                groups : function(GroupListLoader) {\n                    return GroupListLoader();\n                }\n            },\n            controller : 'UserGroupMembershipCtrl'\n        })\n        .when('/realms/:realm/users/:user/sessions', {\n            templateUrl : resourceUrl + '/partials/user-sessions.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                user : function(UserLoader) {\n                    return UserLoader();\n                },\n                sessions : function(UserSessionsLoader) {\n                    return UserSessionsLoader();\n                }\n            },\n            controller : 'UserSessionsCtrl'\n        })\n        .when('/realms/:realm/users/:user/federated-identity', {\n            templateUrl : resourceUrl + '/partials/user-federated-identity-list.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                user : function(UserLoader) {\n                    return UserLoader();\n                },\n                federatedIdentities : function(UserFederatedIdentityLoader) {\n                    return UserFederatedIdentityLoader();\n                }\n            },\n            controller : 'UserFederatedIdentityCtrl'\n        })\n        .when('/create/federated-identity/:realm/:user', {\n            templateUrl : resourceUrl + '/partials/user-federated-identity-detail.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                user : function(UserLoader) {\n                    return UserLoader();\n                },\n                federatedIdentities : function(UserFederatedIdentityLoader) {\n                    return UserFederatedIdentityLoader();\n                }\n            },\n            controller : 'UserFederatedIdentityAddCtrl'\n        })\n        .when('/realms/:realm/users/:user/consents', {\n            templateUrl : resourceUrl + '/partials/user-consents.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                user : function(UserLoader) {\n                    return UserLoader();\n                },\n                userConsents : function(UserConsentsLoader) {\n                    return UserConsentsLoader();\n                }\n            },\n            controller : 'UserConsentsCtrl'\n        })\n        .when('/realms/:realm/users/:user/offline-sessions/:client', {\n            templateUrl : resourceUrl + '/partials/user-offline-sessions.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                user : function(UserLoader) {\n                    return UserLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                },\n                offlineSessions : function(UserOfflineSessionsLoader) {\n                    return UserOfflineSessionsLoader();\n                }\n            },\n            controller : 'UserOfflineSessionsCtrl'\n        })\n        .when('/realms/:realm/users', {\n            templateUrl : resourceUrl + '/partials/user-list.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                }\n            },\n            controller : 'UserListCtrl'\n        })\n\n        .when('/create/role/:realm', {\n            templateUrl : resourceUrl + '/partials/role-detail.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                role : function() {\n                    return {};\n                },\n                roles : function(RoleListLoader) {\n                    return RoleListLoader();\n                },\n                clients : function(ClientListLoader) {\n                    return ClientListLoader();\n                }\n            },\n            controller : 'RoleDetailCtrl'\n        })\n        .when('/realms/:realm/roles/:role', {\n            templateUrl : resourceUrl + '/partials/role-detail.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                role : function(RoleLoader) {\n                    return RoleLoader();\n                },\n                roles : function(RoleListLoader) {\n                    return RoleListLoader();\n                },\n                clients : function(ClientListLoader) {\n                    return ClientListLoader();\n                }\n            },\n            controller : 'RoleDetailCtrl'\n        })\n        .when('/realms/:realm/roles', {\n            templateUrl : resourceUrl + '/partials/role-list.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                roles : function(RoleListLoader) {\n                    return RoleListLoader();\n                }\n            },\n            controller : 'RoleListCtrl'\n        })\n        .when('/realms/:realm/groups', {\n            templateUrl : resourceUrl + '/partials/group-list.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                groups : function(GroupListLoader) {\n                    return GroupListLoader();\n                }\n            },\n            controller : 'GroupListCtrl'\n        })\n        .when('/create/group/:realm/parent/:parentId', {\n            templateUrl : resourceUrl + '/partials/create-group.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                parentId : function($route) {\n                    return $route.current.params.parentId;\n                }\n            },\n            controller : 'GroupCreateCtrl'\n        })\n        .when('/realms/:realm/groups/:group', {\n            templateUrl : resourceUrl + '/partials/group-detail.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                group : function(GroupLoader) {\n                    return GroupLoader();\n                }\n            },\n            controller : 'GroupDetailCtrl'\n        })\n        .when('/realms/:realm/groups/:group/attributes', {\n            templateUrl : resourceUrl + '/partials/group-attributes.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                group : function(GroupLoader) {\n                    return GroupLoader();\n                }\n            },\n            controller : 'GroupDetailCtrl'\n        })\n        .when('/realms/:realm/groups/:group/members', {\n            templateUrl : resourceUrl + '/partials/group-members.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                group : function(GroupLoader) {\n                    return GroupLoader();\n                }\n            },\n            controller : 'GroupMembersCtrl'\n        })\n        .when('/realms/:realm/groups/:group/role-mappings', {\n            templateUrl : resourceUrl + '/partials/group-role-mappings.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                group : function(GroupLoader) {\n                    return GroupLoader();\n                },\n                clients : function(ClientListLoader) {\n                    return ClientListLoader();\n                },\n                client : function() {\n                    return {};\n                }\n            },\n            controller : 'GroupRoleMappingCtrl'\n        })\n        .when('/realms/:realm/default-groups', {\n            templateUrl : resourceUrl + '/partials/default-groups.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                groups : function(GroupListLoader) {\n                    return GroupListLoader();\n                }\n            },\n            controller : 'DefaultGroupsCtrl'\n        })\n\n\n        .when('/create/role/:realm/clients/:client', {\n            templateUrl : resourceUrl + '/partials/client-role-detail.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                },\n                role : function() {\n                    return {};\n                },\n                roles : function(RoleListLoader) {\n                    return RoleListLoader();\n                },\n                clients : function(ClientListLoader) {\n                    return ClientListLoader();\n                }\n            },\n            controller : 'ClientRoleDetailCtrl'\n        })\n        .when('/realms/:realm/clients/:client/roles/:role', {\n            templateUrl : resourceUrl + '/partials/client-role-detail.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                },\n                role : function(ClientRoleLoader) {\n                    return ClientRoleLoader();\n                },\n                roles : function(RoleListLoader) {\n                    return RoleListLoader();\n                },\n                clients : function(ClientListLoader) {\n                    return ClientListLoader();\n                }\n            },\n            controller : 'ClientRoleDetailCtrl'\n        })\n        .when('/realms/:realm/clients/:client/mappers', {\n            templateUrl : resourceUrl + '/partials/client-mappers.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                },\n                templates : function(ClientTemplateListLoader) {\n                    return ClientTemplateListLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n            },\n            controller : 'ClientProtocolMapperListCtrl'\n        })\n        .when('/realms/:realm/clients/:client/add-mappers', {\n            templateUrl : resourceUrl + '/partials/client-mappers-add.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n            },\n            controller : 'AddBuiltinProtocolMapperCtrl'\n        })\n        .when('/realms/:realm/clients/:client/mappers/:id', {\n            templateUrl : resourceUrl + '/partials/client-protocol-mapper-detail.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                },\n                mapper : function(ClientProtocolMapperLoader) {\n                    return ClientProtocolMapperLoader();\n                }\n\n            },\n            controller : 'ClientProtocolMapperCtrl'\n        })\n        .when('/create/client/:realm/:client/mappers', {\n            templateUrl : resourceUrl + '/partials/client-protocol-mapper-detail.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                }\n            },\n            controller : 'ClientProtocolMapperCreateCtrl'\n        })\n        .when('/realms/:realm/client-templates/:template/mappers', {\n            templateUrl : resourceUrl + '/partials/client-template-mappers.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                template : function(ClientTemplateLoader) {\n                    return ClientTemplateLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n            },\n            controller : 'ClientTemplateProtocolMapperListCtrl'\n        })\n        .when('/realms/:realm/client-templates/:template/add-mappers', {\n            templateUrl : resourceUrl + '/partials/client-template-mappers-add.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                template : function(ClientTemplateLoader) {\n                    return ClientTemplateLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n            },\n            controller : 'ClientTemplateAddBuiltinProtocolMapperCtrl'\n        })\n        .when('/realms/:realm/client-templates/:template/mappers/:id', {\n            templateUrl : resourceUrl + '/partials/client-template-protocol-mapper-detail.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                template : function(ClientTemplateLoader) {\n                    return ClientTemplateLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                },\n                mapper : function(ClientTemplateProtocolMapperLoader) {\n                    return ClientTemplateProtocolMapperLoader();\n                }\n\n            },\n            controller : 'ClientTemplateProtocolMapperCtrl'\n        })\n        .when('/create/client-template/:realm/:template/mappers', {\n            templateUrl : resourceUrl + '/partials/client-template-protocol-mapper-detail.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                },\n                template : function(ClientTemplateLoader) {\n                    return ClientTemplateLoader();\n                }\n            },\n            controller : 'ClientTemplateProtocolMapperCreateCtrl'\n        })\n        .when('/realms/:realm/clients/:client/sessions', {\n            templateUrl : resourceUrl + '/partials/client-sessions.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                },\n                sessionCount : function(ClientSessionCountLoader) {\n                    return ClientSessionCountLoader();\n                }\n            },\n            controller : 'ClientSessionsCtrl'\n        })\n        .when('/realms/:realm/clients/:client/offline-access', {\n            templateUrl : resourceUrl + '/partials/client-offline-sessions.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                },\n                offlineSessionCount : function(ClientOfflineSessionCountLoader) {\n                    return ClientOfflineSessionCountLoader();\n                }\n            },\n            controller : 'ClientOfflineSessionsCtrl'\n        })\n        .when('/realms/:realm/clients/:client/credentials', {\n            templateUrl : resourceUrl + '/partials/client-credentials.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                },\n                clientAuthenticatorProviders : function(ClientAuthenticatorProvidersLoader) {\n                    return ClientAuthenticatorProvidersLoader();\n                },\n                clientConfigProperties: function(PerClientAuthenticationConfigDescriptionLoader) {\n                    return PerClientAuthenticationConfigDescriptionLoader();\n                }\n            },\n            controller : 'ClientCredentialsCtrl'\n        })\n        .when('/realms/:realm/clients/:client/credentials/client-jwt/:keyType/import/:attribute', {\n            templateUrl : resourceUrl + '/partials/client-credentials-jwt-key-import.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                },\n                callingContext : function() {\n                    return \"jwt-credentials\";\n                }\n            },\n            controller : 'ClientCertificateImportCtrl'\n        })\n        .when('/realms/:realm/clients/:client/credentials/client-jwt/:keyType/export/:attribute', {\n            templateUrl : resourceUrl + '/partials/client-credentials-jwt-key-export.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                },\n                callingContext : function() {\n                    return \"jwt-credentials\";\n                }\n            },\n            controller : 'ClientCertificateExportCtrl'\n        })\n        .when('/realms/:realm/clients/:client/identity-provider', {\n            templateUrl : resourceUrl + '/partials/client-identity-provider.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                }\n            },\n            controller : 'ClientIdentityProviderCtrl'\n        })\n        .when('/realms/:realm/clients/:client/clustering', {\n            templateUrl : resourceUrl + '/partials/client-clustering.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                }\n            },\n            controller : 'ClientClusteringCtrl'\n        })\n        .when('/register-node/realms/:realm/clients/:client/clustering', {\n            templateUrl : resourceUrl + '/partials/client-clustering-node.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                }\n            },\n            controller : 'ClientClusteringNodeCtrl'\n        })\n        .when('/realms/:realm/clients/:client/clustering/:node', {\n            templateUrl : resourceUrl + '/partials/client-clustering-node.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                }\n            },\n            controller : 'ClientClusteringNodeCtrl'\n        })\n        .when('/realms/:realm/clients/:client/saml/keys', {\n            templateUrl : resourceUrl + '/partials/client-saml-keys.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                }\n            },\n            controller : 'ClientSamlKeyCtrl'\n        })\n        .when('/realms/:realm/clients/:client/saml/:keyType/import/:attribute', {\n            templateUrl : resourceUrl + '/partials/client-saml-key-import.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                },\n                callingContext : function() {\n                    return \"saml\";\n                }\n            },\n            controller : 'ClientCertificateImportCtrl'\n        })\n        .when('/realms/:realm/clients/:client/saml/:keyType/export/:attribute', {\n            templateUrl : resourceUrl + '/partials/client-saml-key-export.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                },\n                callingContext : function() {\n                    return \"saml\";\n                }\n            },\n            controller : 'ClientCertificateExportCtrl'\n        })\n        .when('/realms/:realm/clients/:client/roles', {\n            templateUrl : resourceUrl + '/partials/client-role-list.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                },\n                roles : function(ClientRoleListLoader) {\n                    return ClientRoleListLoader();\n                }\n            },\n            controller : 'ClientRoleListCtrl'\n        })\n        .when('/realms/:realm/clients/:client/revocation', {\n            templateUrl : resourceUrl + '/partials/client-revocation.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                }\n            },\n            controller : 'ClientRevocationCtrl'\n        })\n        .when('/realms/:realm/clients/:client/scope-mappings', {\n            templateUrl : resourceUrl + '/partials/client-scope-mappings.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                },\n                templates : function(ClientTemplateListLoader) {\n                    return ClientTemplateListLoader();\n                },\n                clients : function(ClientListLoader) {\n                    return ClientListLoader();\n                }\n            },\n            controller : 'ClientScopeMappingCtrl'\n        })\n        .when('/realms/:realm/clients/:client/installation', {\n            templateUrl : resourceUrl + '/partials/client-installation.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n            },\n            controller : 'ClientInstallationCtrl'\n        })\n        .when('/realms/:realm/clients/:client/service-account-roles', {\n            templateUrl : resourceUrl + '/partials/client-service-account-roles.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                user : function(ClientServiceAccountUserLoader) {\n                    return ClientServiceAccountUserLoader();\n                },\n                clients : function(ClientListLoader) {\n                    return ClientListLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                }\n            },\n            controller : 'UserRoleMappingCtrl'\n        })\n        .when('/create/client/:realm', {\n            templateUrl : resourceUrl + '/partials/create-client.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                templates : function(ClientTemplateListLoader) {\n                    return ClientTemplateListLoader();\n                },\n                clients : function(ClientListLoader) {\n                    return ClientListLoader();\n                },\n                client : function() {\n                    return {};\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n            },\n            controller : 'CreateClientCtrl'\n        })\n        .when('/realms/:realm/clients/:client', {\n            templateUrl : resourceUrl + '/partials/client-detail.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                templates : function(ClientTemplateListLoader) {\n                    return ClientTemplateListLoader();\n                },\n                clients : function(ClientListLoader) {\n                    return ClientListLoader();\n                },\n                client : function(ClientLoader) {\n                    return ClientLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n            },\n            controller : 'ClientDetailCtrl'\n        })\n        .when('/create/client-template/:realm', {\n            templateUrl : resourceUrl + '/partials/client-template-detail.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                templates : function(ClientTemplateListLoader) {\n                    return ClientTemplateListLoader();\n                },\n                template : function() {\n                    return {};\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n            },\n            controller : 'ClientTemplateDetailCtrl'\n        })\n        .when('/realms/:realm/client-templates/:template', {\n            templateUrl : resourceUrl + '/partials/client-template-detail.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                templates : function(ClientTemplateListLoader) {\n                    return ClientTemplateListLoader();\n                },\n                template : function(ClientTemplateLoader) {\n                    return ClientTemplateLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n            },\n            controller : 'ClientTemplateDetailCtrl'\n        })\n        .when('/realms/:realm/client-templates/:template/scope-mappings', {\n            templateUrl : resourceUrl + '/partials/client-template-scope-mappings.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                template : function(ClientTemplateLoader) {\n                    return ClientTemplateLoader();\n                },\n                clients : function(ClientListLoader) {\n                    return ClientListLoader();\n                }\n            },\n            controller : 'ClientTemplateScopeMappingCtrl'\n        })\n        .when('/realms/:realm/clients', {\n            templateUrl : resourceUrl + '/partials/client-list.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                clients : function(ClientListLoader) {\n                    return ClientListLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n\n            },\n            controller : 'ClientListCtrl'\n        })\n        .when('/realms/:realm/client-templates', {\n            templateUrl : resourceUrl + '/partials/client-template-list.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                templates : function(ClientTemplateListLoader) {\n                    return ClientTemplateListLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n\n            },\n            controller : 'ClientTemplateListCtrl'\n        })\n        .when('/import/client/:realm', {\n            templateUrl : resourceUrl + '/partials/client-import.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n            },\n            controller : 'ClientImportCtrl'\n        })\n        .when('/', {\n            templateUrl : resourceUrl + '/partials/home.html',\n            controller : 'HomeCtrl'\n        })\n        .when('/mocks/:realm', {\n            templateUrl : resourceUrl + '/partials/realm-detail_mock.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n            },\n            controller : 'RealmDetailCtrl'\n        })\n        .when('/realms/:realm/sessions/revocation', {\n            templateUrl : resourceUrl + '/partials/session-revocation.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                }\n            },\n            controller : 'RealmRevocationCtrl'\n        })\n         .when('/realms/:realm/sessions/realm', {\n            templateUrl : resourceUrl + '/partials/session-realm.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                stats : function(RealmClientSessionStatsLoader) {\n                    return RealmClientSessionStatsLoader();\n                }\n            },\n            controller : 'RealmSessionStatsCtrl'\n        })\n        .when('/create/user-storage/:realm/providers/:provider', {\n            templateUrl : resourceUrl + '/partials/user-storage-generic.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                instance : function() {\n                    return {\n\n                    };\n                },\n                providerId : function($route) {\n                    return $route.current.params.provider;\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n            },\n            controller : 'GenericUserStorageCtrl'\n        })\n        .when('/realms/:realm/user-storage/providers/:provider/:componentId', {\n            templateUrl : resourceUrl + '/partials/user-storage-generic.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                instance : function(ComponentLoader) {\n                    return ComponentLoader();\n                },\n                providerId : function($route) {\n                    return $route.current.params.provider;\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n            },\n            controller : 'GenericUserStorageCtrl'\n        })\n        .when('/realms/:realm/user-federation', {\n            templateUrl : resourceUrl + '/partials/user-federation.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n            },\n            controller : 'UserFederationCtrl'\n        })\n        .when('/realms/:realm/user-federation/providers/ldap/:instance', {\n            templateUrl : resourceUrl + '/partials/federated-ldap.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                instance : function(UserFederationInstanceLoader) {\n                    return UserFederationInstanceLoader();\n                }\n            },\n            controller : 'LDAPCtrl'\n        })\n        .when('/create/user-federation/:realm/providers/ldap', {\n            templateUrl : resourceUrl + '/partials/federated-ldap.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                instance : function() {\n                    return {};\n                }\n            },\n            controller : 'LDAPCtrl'\n        })\n        .when('/realms/:realm/user-federation/providers/kerberos/:instance', {\n            templateUrl : resourceUrl + '/partials/federated-kerberos.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                instance : function(UserFederationInstanceLoader) {\n                    return UserFederationInstanceLoader();\n                },\n                providerFactory : function() {\n                    return { id: \"kerberos\" };\n                }\n            },\n            controller : 'GenericUserFederationCtrl'\n        })\n        .when('/create/user-federation/:realm/providers/kerberos', {\n            templateUrl : resourceUrl + '/partials/federated-kerberos.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                instance : function() {\n                    return {};\n                },\n                providerFactory : function() {\n                    return { id: \"kerberos\" };\n                }\n            },\n            controller : 'GenericUserFederationCtrl'\n        })\n        .when('/create/user-federation/:realm/providers/:provider', {\n            templateUrl : resourceUrl + '/partials/federated-generic.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                instance : function() {\n                    return {\n\n                    };\n                },\n                providerFactory : function(UserFederationFactoryLoader) {\n                    return UserFederationFactoryLoader();\n                }\n            },\n            controller : 'GenericUserFederationCtrl'\n        })\n        .when('/realms/:realm/user-federation/providers/:provider/:instance', {\n            templateUrl : resourceUrl + '/partials/federated-generic.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                instance : function(UserFederationInstanceLoader) {\n                    return UserFederationInstanceLoader();\n                },\n                providerFactory : function(UserFederationFactoryLoader) {\n                    return UserFederationFactoryLoader();\n                }\n            },\n            controller : 'GenericUserFederationCtrl'\n        })\n        .when('/realms/:realm/user-federation/providers/:provider/:instance/mappers', {\n            templateUrl : function(params){ return resourceUrl + '/partials/federated-mappers.html'; },\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                provider : function(UserFederationInstanceLoader) {\n                    return UserFederationInstanceLoader();\n                },\n                mapperTypes : function(UserFederationMapperTypesLoader) {\n                    return UserFederationMapperTypesLoader();\n                },\n                mappers : function(UserFederationMappersLoader) {\n                    return UserFederationMappersLoader();\n                }\n            },\n            controller : 'UserFederationMapperListCtrl'\n        })\n        .when('/realms/:realm/user-federation/providers/:provider/:instance/mappers/:mapperId', {\n            templateUrl : function(params){ return resourceUrl + '/partials/federated-mapper-detail.html'; },\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                provider : function(UserFederationInstanceLoader) {\n                    return UserFederationInstanceLoader();\n                },\n                mapperTypes : function(UserFederationMapperTypesLoader) {\n                    return UserFederationMapperTypesLoader();\n                },\n                mapper : function(UserFederationMapperLoader) {\n                    return UserFederationMapperLoader();\n                },\n                clients : function(ClientListLoader) {\n                    return ClientListLoader();\n                }\n            },\n            controller : 'UserFederationMapperCtrl'\n        })\n        .when('/create/user-federation-mappers/:realm/:provider/:instance', {\n            templateUrl : function(params){ return resourceUrl + '/partials/federated-mapper-detail.html'; },\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                provider : function(UserFederationInstanceLoader) {\n                    return UserFederationInstanceLoader();\n                },\n                mapperTypes : function(UserFederationMapperTypesLoader) {\n                    return UserFederationMapperTypesLoader();\n                },\n                clients : function(ClientListLoader) {\n                    return ClientListLoader();\n                }\n            },\n            controller : 'UserFederationMapperCreateCtrl'\n        })\n\n        .when('/realms/:realm/defense/headers', {\n            templateUrl : resourceUrl + '/partials/defense-headers.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n\n            },\n            controller : 'DefenseHeadersCtrl'\n        })\n        .when('/realms/:realm/defense/brute-force', {\n            templateUrl : resourceUrl + '/partials/brute-force.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                }\n            },\n            controller : 'RealmBruteForceCtrl'\n        })\n        .when('/realms/:realm/protocols', {\n            templateUrl : resourceUrl + '/partials/protocol-list.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n\n            },\n            controller : 'ProtocolListCtrl'\n        })\n        .when('/realms/:realm/authentication/flows', {\n            templateUrl : resourceUrl + '/partials/authentication-flows.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                flows : function(AuthenticationFlowsLoader) {\n                    return AuthenticationFlowsLoader();\n                },\n                selectedFlow : function() {\n                    return null;\n                }\n            },\n            controller : 'AuthenticationFlowsCtrl'\n        })\n        .when('/realms/:realm/authentication/flow-bindings', {\n            templateUrl : resourceUrl + '/partials/authentication-flow-bindings.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                flows : function(AuthenticationFlowsLoader) {\n                    return AuthenticationFlowsLoader();\n                },\n                serverInfo : function(ServerInfo) {\n                    return ServerInfo.delay;\n                }\n            },\n            controller : 'RealmFlowBindingCtrl'\n        })\n        .when('/realms/:realm/authentication/flows/:flow', {\n            templateUrl : resourceUrl + '/partials/authentication-flows.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                flows : function(AuthenticationFlowsLoader) {\n                    return AuthenticationFlowsLoader();\n                },\n                selectedFlow : function($route) {\n                    return $route.current.params.flow;\n                }\n            },\n            controller : 'AuthenticationFlowsCtrl'\n        })\n        .when('/realms/:realm/authentication/flows/:flow/create/execution/:topFlow', {\n            templateUrl : resourceUrl + '/partials/create-execution.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                topFlow: function($route) {\n                    return $route.current.params.topFlow;\n                },\n                parentFlow : function(AuthenticationFlowLoader) {\n                    return AuthenticationFlowLoader();\n                },\n                formActionProviders : function(AuthenticationFormActionProvidersLoader) {\n                    return AuthenticationFormActionProvidersLoader();\n                },\n                authenticatorProviders : function(AuthenticatorProvidersLoader) {\n                    return AuthenticatorProvidersLoader();\n                },\n                clientAuthenticatorProviders : function(ClientAuthenticatorProvidersLoader) {\n                    return ClientAuthenticatorProvidersLoader();\n                }\n            },\n            controller : 'CreateExecutionCtrl'\n        })\n        .when('/realms/:realm/authentication/flows/:flow/create/flow/execution/:topFlow', {\n            templateUrl : resourceUrl + '/partials/create-flow-execution.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                topFlow: function($route) {\n                    return $route.current.params.topFlow;\n                },\n                parentFlow : function(AuthenticationFlowLoader) {\n                    return AuthenticationFlowLoader();\n                },\n                formProviders : function(AuthenticationFormProvidersLoader) {\n                    return AuthenticationFormProvidersLoader();\n                }\n            },\n            controller : 'CreateExecutionFlowCtrl'\n        })\n        .when('/realms/:realm/authentication/create/flow', {\n            templateUrl : resourceUrl + '/partials/create-flow.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                }\n            },\n            controller : 'CreateFlowCtrl'\n        })\n        .when('/realms/:realm/authentication/required-actions', {\n            templateUrl : resourceUrl + '/partials/required-actions.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                unregisteredRequiredActions : function(UnregisteredRequiredActionsListLoader) {\n                    return UnregisteredRequiredActionsListLoader();\n                }\n            },\n            controller : 'RequiredActionsCtrl'\n        })\n        .when('/realms/:realm/authentication/password-policy', {\n            templateUrl : resourceUrl + '/partials/password-policy.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n            },\n            controller : 'RealmPasswordPolicyCtrl'\n        })\n        .when('/realms/:realm/authentication/otp-policy', {\n            templateUrl : resourceUrl + '/partials/otp-policy.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                serverInfo : function(ServerInfo) {\n                    return ServerInfo.delay;\n                }\n            },\n            controller : 'RealmOtpPolicyCtrl'\n        })\n        .when('/realms/:realm/authentication/flows/:flow/config/:provider/:config', {\n            templateUrl : resourceUrl + '/partials/authenticator-config.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                flow : function(AuthenticationFlowLoader) {\n                    return AuthenticationFlowLoader();\n                },\n                configType : function(AuthenticationConfigDescriptionLoader) {\n                    return AuthenticationConfigDescriptionLoader();\n                },\n                config : function(AuthenticationConfigLoader) {\n                    return AuthenticationConfigLoader();\n                }\n            },\n            controller : 'AuthenticationConfigCtrl'\n        })\n        .when('/create/authentication/:realm/flows/:flow/execution/:executionId/provider/:provider', {\n            templateUrl : resourceUrl + '/partials/authenticator-config.html',\n            resolve : {\n                realm : function(RealmLoader) {\n                    return RealmLoader();\n                },\n                flow : function(AuthenticationFlowLoader) {\n                    return AuthenticationFlowLoader();\n                },\n                configType : function(AuthenticationConfigDescriptionLoader) {\n                    return AuthenticationConfigDescriptionLoader();\n                },\n                execution : function(ExecutionIdLoader) {\n                    return ExecutionIdLoader();\n                }\n            },\n            controller : 'AuthenticationConfigCreateCtrl'\n        })\n        .when('/server-info', {\n            templateUrl : resourceUrl + '/partials/server-info.html',\n            resolve : {\n            \tserverInfo : function(ServerInfoLoader) {\n                return ServerInfoLoader();\n            \t}\n            },\n            controller : 'ServerInfoCtrl'\n        })\n        .when('/server-info/providers', {\n            templateUrl : resourceUrl + '/partials/server-info-providers.html',\n            resolve : {\n                serverInfo : function(ServerInfoLoader) {\n                    return ServerInfoLoader();\n                }\n            },\n            controller : 'ServerInfoCtrl'\n        })\n        .when('/logout', {\n            templateUrl : resourceUrl + '/partials/home.html',\n            controller : 'LogoutCtrl'\n        })\n        .when('/notfound', {\n            templateUrl : resourceUrl + '/partials/notfound.html'\n        })\n        .when('/forbidden', {\n            templateUrl : resourceUrl + '/partials/forbidden.html'\n        })\n        .otherwise({\n            templateUrl : resourceUrl + '/partials/pagenotfound.html'\n        });\n} ]);\n\nmodule.config(function($httpProvider) {\n    $httpProvider.interceptors.push('errorInterceptor');\n\n    var spinnerFunction = function(data, headersGetter) {\n        if (resourceRequests == 0) {\n            loadingTimer = window.setTimeout(function() {\n                $('#loading').show();\n                loadingTimer = -1;\n            }, 500);\n        }\n        resourceRequests++;\n        return data;\n    };\n    $httpProvider.defaults.transformRequest.push(spinnerFunction);\n\n    $httpProvider.interceptors.push('spinnerInterceptor');\n    $httpProvider.interceptors.push('authInterceptor');\n\n});\n\nmodule.factory('spinnerInterceptor', function($q, $window, $rootScope, $location) {\n    return {\n        response: function(response) {\n            resourceRequests--;\n            if (resourceRequests == 0) {\n                if(loadingTimer != -1) {\n                    window.clearTimeout(loadingTimer);\n                    loadingTimer = -1;\n                }\n                $('#loading').hide();\n            }\n            return response;\n        }, \n        responseError: function(response) {\n            resourceRequests--;\n            if (resourceRequests == 0) {\n                if(loadingTimer != -1) {\n                    window.clearTimeout(loadingTimer);\n                    loadingTimer = -1;\n                }\n                $('#loading').hide();\n            }\n\n            return $q.reject(response);\n        }\n    };\n});\n\nmodule.factory('errorInterceptor', function($q, $window, $rootScope, $location, Notifications, Auth) {\n    return {\n        response: function(response) {\n            return response;\n        }, \n        responseError: function(response) {\n            if (response.status == 401) {\n                Auth.authz.logout();\n            } else if (response.status == 403) {\n                $location.path('/forbidden');\n            } else if (response.status == 404) {\n                $location.path('/notfound');\n            } else if (response.status) {\n                if (response.data && response.data.errorMessage) {\n                    Notifications.error(response.data.errorMessage);\n                } else {\n                    Notifications.error(\"An unexpected server error has occurred\");\n                }\n            }\n            return $q.reject(response);\n        }\n    };\n});\n\n// collapsable form fieldsets\nmodule.directive('collapsable', function() {\n    return function(scope, element, attrs) {\n        element.click(function() {\n            $(this).toggleClass('collapsed');\n            $(this).find('.toggle-icons').toggleClass('kc-icon-collapse').toggleClass('kc-icon-expand');\n            $(this).find('.toggle-icons').text($(this).text() == \"Icon: expand\" ? \"Icon: collapse\" : \"Icon: expand\");\n            $(this).parent().find('.form-group').toggleClass('hidden');\n        });\n    }\n});\n\n// collapsable form fieldsets\nmodule.directive('uncollapsed', function() {\n    return function(scope, element, attrs) {\n        element.prepend('<i class=\"toggle-class fa fa-angle-down\"></i> ');\n        element.click(function() {\n            $(this).find('.toggle-class').toggleClass('fa-angle-down').toggleClass('fa-angle-right');\n            $(this).parent().find('.form-group').toggleClass('hidden');\n        });\n    }\n});\n\n// collapsable form fieldsets\nmodule.directive('collapsed', function() {\n    return function(scope, element, attrs) {\n        element.prepend('<i class=\"toggle-class fa fa-angle-right\"></i> ');\n        element.parent().find('.form-group').toggleClass('hidden');\n        element.click(function() {\n            $(this).find('.toggle-class').toggleClass('fa-angle-down').toggleClass('fa-angle-right');\n            $(this).parent().find('.form-group').toggleClass('hidden');\n        });\n    }\n});\n\n/**\n * Directive for presenting an ON-OFF switch for checkbox.\n * Usage: <input ng-model=\"mmm\" name=\"nnn\" id=\"iii\" onoffswitch [on-text=\"ooo\" off-text=\"fff\"] />\n */\nmodule.directive('onoffswitch', function() {\n    return {\n        restrict: \"EA\",\n        replace: true,\n        scope: {\n            name: '@',\n            id: '@',\n            ngModel: '=',\n            ngDisabled: '=',\n            kcOnText: '@onText',\n            kcOffText: '@offText'\n        },\n        // TODO - The same code acts differently when put into the templateURL. Find why and move the code there.\n        //templateUrl: \"templates/kc-switch.html\",\n        template: \"<span><div class='onoffswitch' tabindex='0'><input type='checkbox' ng-model='ngModel' ng-disabled='ngDisabled' class='onoffswitch-checkbox' name='{{name}}' id='{{id}}'><label for='{{id}}' class='onoffswitch-label'><span class='onoffswitch-inner'><span class='onoffswitch-active'>{{kcOnText}}</span><span class='onoffswitch-inactive'>{{kcOffText}}</span></span><span class='onoffswitch-switch'></span></label></div></span>\",\n        compile: function(element, attrs) {\n            /*\n            We don't want to propagate basic attributes to the root element of directive. Id should be passed to the\n            input element only to achieve proper label binding (and validity).\n            */\n            element.removeAttr('name');\n            element.removeAttr('id');\n\n            if (!attrs.onText) { attrs.onText = \"ON\"; }\n            if (!attrs.offText) { attrs.offText = \"OFF\"; }\n\n            element.bind('keydown', function(e){\n                var code = e.keyCode || e.which;\n                if (code === 32 || code === 13) {\n                    e.stopImmediatePropagation();\n                    e.preventDefault();\n                    $(e.target).find('input').click();\n                }\n            });\n        }\n    }\n});\n\n/**\n * Directive for presenting an ON-OFF switch for checkbox. The directive expects the value to be string 'true' or 'false', not boolean true/false\n * This directive provides some additional capabilities to the default onoffswitch such as:\n *\n * - Dynamic values for id and name attributes. Useful if you need to use this directive inside a ng-repeat\n * - Specific scope to specify the value. Instead of just true or false.\n *\n * Usage: <input ng-model=\"mmm\" name=\"nnn\" id=\"iii\" kc-onoffswitch-model [on-text=\"ooo\" off-text=\"fff\"] />\n */\nmodule.directive('onoffswitchstring', function() {\n    return {\n        restrict: \"EA\",\n        replace: true,\n        scope: {\n            name: '=',\n            id: '=',\n            value: '=',\n            ngModel: '=',\n            ngDisabled: '=',\n            kcOnText: '@onText',\n            kcOffText: '@offText'\n        },\n        // TODO - The same code acts differently when put into the templateURL. Find why and move the code there.\n        //templateUrl: \"templates/kc-switch.html\",\n        template: '<span><div class=\"onoffswitch\" tabindex=\"0\"><input type=\"checkbox\" ng-true-value=\"\\'true\\'\" ng-false-value=\"\\'false\\'\" ng-model=\"ngModel\" ng-disabled=\"ngDisabled\" class=\"onoffswitch-checkbox\" name=\"kc{{name}}\" id=\"kc{{id}}\"><label for=\"kc{{id}}\" class=\"onoffswitch-label\"><span class=\"onoffswitch-inner\"><span class=\"onoffswitch-active\">{{kcOnText}}</span><span class=\"onoffswitch-inactive\">{{kcOffText}}</span></span><span class=\"onoffswitch-switch\"></span></label></div></span>',\n        compile: function(element, attrs) {\n\n            if (!attrs.onText) { attrs.onText = \"ON\"; }\n            if (!attrs.offText) { attrs.offText = \"OFF\"; }\n\n            element.bind('keydown click', function(e){\n                var code = e.keyCode || e.which;\n                if (code === 32 || code === 13) {\n                    e.stopImmediatePropagation();\n                    e.preventDefault();\n                    $(e.target).find('input').click();\n                }\n            });\n        }\n    }\n});\n\n/**\n * Directive for presenting an ON-OFF switch for checkbox. The directive expects the true-value or false-value to be string like 'true' or 'false', not boolean true/false.\n * This directive provides some additional capabilities to the default onoffswitch such as:\n *\n * - Specific scope to specify the value. Instead of just 'true' or 'false' you can use any other values. For example: true-value=\"'foo'\" false-value=\"'bar'\" .\n * But 'true'/'false' are defaults if true-value and false-value are not specified\n *\n * Usage: <input ng-model=\"mmm\" name=\"nnn\" id=\"iii\" onoffswitchvalue [ true-value=\"'true'\" false-value=\"'false'\" on-text=\"ooo\" off-text=\"fff\"] />\n */\nmodule.directive('onoffswitchvalue', function() {\n    return {\n        restrict: \"EA\",\n        replace: true,\n        scope: {\n            name: '@',\n            id: '@',\n            trueValue: '@',\n            falseValue: '@',\n            ngModel: '=',\n            ngDisabled: '=',\n            kcOnText: '@onText',\n            kcOffText: '@offText'\n        },\n        // TODO - The same code acts differently when put into the templateURL. Find why and move the code there.\n        //templateUrl: \"templates/kc-switch.html\",\n        template: \"<span><div class='onoffswitch' tabindex='0'><input type='checkbox' ng-true-value='{{trueValue}}' ng-false-value='{{falseValue}}' ng-model='ngModel' ng-disabled='ngDisabled' class='onoffswitch-checkbox' name='{{name}}' id='{{id}}'><label for='{{id}}' class='onoffswitch-label'><span class='onoffswitch-inner'><span class='onoffswitch-active'>{{kcOnText}}</span><span class='onoffswitch-inactive'>{{kcOffText}}</span></span><span class='onoffswitch-switch'></span></label></div></span>\",\n        compile: function(element, attrs) {\n            /*\n             We don't want to propagate basic attributes to the root element of directive. Id should be passed to the\n             input element only to achieve proper label binding (and validity).\n             */\n            element.removeAttr('name');\n            element.removeAttr('id');\n\n            if (!attrs.trueValue) { attrs.trueValue = \"'true'\"; }\n            if (!attrs.falseValue) { attrs.falseValue = \"'false'\"; }\n\n            if (!attrs.onText) { attrs.onText = \"ON\"; }\n            if (!attrs.offText) { attrs.offText = \"OFF\"; }\n\n            element.bind('keydown', function(e){\n                var code = e.keyCode || e.which;\n                if (code === 32 || code === 13) {\n                    e.stopImmediatePropagation();\n                    e.preventDefault();\n                    $(e.target).find('input').click();\n                }\n            });\n        }\n    }\n});\n\nmodule.directive('kcInput', function() {\n    var d = {\n        scope : true,\n        replace : false,\n        link : function(scope, element, attrs) {\n            var form = element.children('form');\n            var label = element.children('label');\n            var input = element.children('input');\n\n            var id = form.attr('name') + '.' + input.attr('name');\n\n            element.attr('class', 'control-group');\n\n            label.attr('class', 'control-label');\n            label.attr('for', id);\n\n            input.wrap('<div class=\"controls\"/>');\n            input.attr('id', id);\n\n            if (!input.attr('placeHolder')) {\n                input.attr('placeHolder', label.text());\n            }\n\n            if (input.attr('required')) {\n                label.append(' <span class=\"required\">*</span>');\n            }\n        }\n    };\n    return d;\n});\n\nmodule.directive('kcEnter', function() {\n    return function(scope, element, attrs) {\n        element.bind(\"keydown keypress\", function(event) {\n            if (event.which === 13) {\n                scope.$apply(function() {\n                    scope.$eval(attrs.kcEnter);\n                });\n\n                event.preventDefault();\n            }\n        });\n    };\n});\n\nmodule.directive('kcSave', function ($compile, Notifications) {\n    return {\n        restrict: 'A',\n        link: function ($scope, elem, attr, ctrl) {\n            elem.addClass(\"btn btn-primary\");\n            elem.attr(\"type\",\"submit\");\n            elem.bind('click', function() {\n                $scope.$apply(function() {\n                    var form = elem.closest('form');\n                    if (form && form.attr('name')) {\n                        var ngValid = form.find('.ng-valid');\n                        if ($scope[form.attr('name')].$valid) {\n                            //ngValid.removeClass('error');\n                            ngValid.parent().removeClass('has-error');\n                            $scope['save']();\n                        } else {\n                            Notifications.error(\"Missing or invalid field(s). Please verify the fields in red.\")\n                            //ngValid.removeClass('error');\n                            ngValid.parent().removeClass('has-error');\n\n                            var ngInvalid = form.find('.ng-invalid');\n                            //ngInvalid.addClass('error');\n                            ngInvalid.parent().addClass('has-error');\n                        }\n                    }\n                });\n            })\n        }\n    }\n});\n\nmodule.directive('kcReset', function ($compile, Notifications) {\n    return {\n        restrict: 'A',\n        link: function ($scope, elem, attr, ctrl) {\n            elem.addClass(\"btn btn-default\");\n            elem.attr(\"type\",\"submit\");\n            elem.bind('click', function() {\n                $scope.$apply(function() {\n                    var form = elem.closest('form');\n                    if (form && form.attr('name')) {\n                        form.find('.ng-valid').removeClass('error');\n                        form.find('.ng-invalid').removeClass('error');\n                        $scope['reset']();\n                    }\n                })\n            })\n        }\n    }\n});\n\nmodule.directive('kcCancel', function ($compile, Notifications) {\n    return {\n        restrict: 'A',\n        link: function ($scope, elem, attr, ctrl) {\n            elem.addClass(\"btn btn-default\");\n            elem.attr(\"type\",\"submit\");\n        }\n    }\n});\n\nmodule.directive('kcDelete', function ($compile, Notifications) {\n    return {\n        restrict: 'A',\n        link: function ($scope, elem, attr, ctrl) {\n            elem.addClass(\"btn btn-danger\");\n            elem.attr(\"type\",\"submit\");\n        }\n    }\n});\n\n\nmodule.directive('kcDropdown', function ($compile, Notifications) {\n    return {\n        scope: {\n            kcOptions: '=',\n            kcModel: '=',\n            id: \"=\",\n            kcPlaceholder: '@'\n        },\n        restrict: 'EA',\n        replace: true,\n        templateUrl: resourceUrl + '/templates/kc-select.html',\n        link: function(scope, element, attr) {\n            scope.updateModel = function(item) {\n                scope.kcModel = item;\n            };\n        }\n    }\n});\n\nmodule.directive('kcReadOnly', function() {\n    var disabled = {};\n\n    var d = {\n        replace : false,\n        link : function(scope, element, attrs) {\n            var disable = function(i, e) {\n                if (!e.disabled) {\n                    disabled[e.tagName + i] = true;\n                    e.disabled = true;\n                }\n            }\n\n            var enable = function(i, e) {\n                if (disabled[e.tagName + i]) {\n                    e.disabled = false;\n                    delete disabled[i];\n                }\n            }\n\n            var filterIgnored = function(i, e){\n                return !e.attributes['kc-read-only-ignore'];\n            }\n\n            scope.$watch(attrs.kcReadOnly, function(readOnly) {\n                if (readOnly) {\n                    element.find('input').filter(filterIgnored).each(disable);\n                    element.find('button').filter(filterIgnored).each(disable);\n                    element.find('select').filter(filterIgnored).each(disable);\n                    element.find('textarea').filter(filterIgnored).each(disable);\n                } else {\n                    element.find('input').filter(filterIgnored).each(enable);\n                    element.find('input').filter(filterIgnored).each(enable);\n                    element.find('button').filter(filterIgnored).each(enable);\n                    element.find('select').filter(filterIgnored).each(enable);\n                    element.find('textarea').filter(filterIgnored).each(enable);\n                }\n            });\n        }\n    };\n    return d;\n});\n\nmodule.directive('kcMenu', function () {\n    return {\n        scope: true,\n        restrict: 'E',\n        replace: true,\n        templateUrl: resourceUrl + '/templates/kc-menu.html'\n    }\n});\n\nmodule.directive('kcTabsRealm', function () {\n    return {\n        scope: true,\n        restrict: 'E',\n        replace: true,\n        templateUrl: resourceUrl + '/templates/kc-tabs-realm.html'\n    }\n});\n\nmodule.directive('kcTabsAuthentication', function () {\n    return {\n        scope: true,\n        restrict: 'E',\n        replace: true,\n        templateUrl: resourceUrl + '/templates/kc-tabs-authentication.html'\n    }\n});\n\nmodule.directive('kcTabsUser', function () {\n    return {\n        scope: true,\n        restrict: 'E',\n        replace: true,\n        templateUrl: resourceUrl + '/templates/kc-tabs-user.html'\n    }\n});\n\nmodule.directive('kcTabsGroup', function () {\n    return {\n        scope: true,\n        restrict: 'E',\n        replace: true,\n        templateUrl: resourceUrl + '/templates/kc-tabs-group.html'\n    }\n});\n\nmodule.directive('kcTabsGroupList', function () {\n    return {\n        scope: true,\n        restrict: 'E',\n        replace: true,\n        templateUrl: resourceUrl + '/templates/kc-tabs-group-list.html'\n    }\n});\n\nmodule.directive('kcTabsClient', function () {\n    return {\n        scope: true,\n        restrict: 'E',\n        replace: true,\n        templateUrl: resourceUrl + '/templates/kc-tabs-client.html'\n    }\n});\n\nmodule.directive('kcTabsClientTemplate', function () {\n    return {\n        scope: true,\n        restrict: 'E',\n        replace: true,\n        templateUrl: resourceUrl + '/templates/kc-tabs-client-template.html'\n    }\n});\n\nmodule.directive('kcNavigationUser', function () {\n    return {\n        scope: true,\n        restrict: 'E',\n        replace: true,\n        templateUrl: resourceUrl + '/templates/kc-navigation-user.html'\n    }\n});\n\nmodule.directive('kcTabsIdentityProvider', function () {\n    return {\n        scope: true,\n        restrict: 'E',\n        replace: true,\n        templateUrl: resourceUrl + '/templates/kc-tabs-identity-provider.html'\n    }\n});\n\nmodule.directive('kcTabsUserFederation', function () {\n    return {\n        scope: true,\n        restrict: 'E',\n        replace: true,\n        templateUrl: resourceUrl + '/templates/kc-tabs-user-federation.html'\n    }\n});\n\nmodule.controller('RoleSelectorModalCtrl', function($scope, realm, config, configName, RealmRoles, Client, ClientRole, $modalInstance) {\n    $scope.selectedRealmRole = {\n        role: undefined\n    };\n    $scope.selectedClientRole = {\n        role: undefined\n    };\n    $scope.client = {\n        selected: undefined\n    };\n\n    $scope.selectRealmRole = function() {\n        config[configName] = $scope.selectedRealmRole.role.name;\n        $modalInstance.close();\n    }\n\n    $scope.selectClientRole = function() {\n        config[configName] = $scope.client.selected.clientId + \".\" + $scope.selectedClientRole.role.name;\n        $modalInstance.close();\n    }\n\n    $scope.cancel = function() {\n        $modalInstance.dismiss();\n    }\n\n    $scope.changeClient = function() {\n        if ($scope.client.selected) {\n            ClientRole.query({realm: realm.realm, client: $scope.client.selected.id}, function (data) {\n                $scope.clientRoles = data;\n             });\n        } else {\n            console.log('selected client was null');\n            $scope.clientRoles = null;\n        }\n\n    }\n    RealmRoles.query({realm: realm.realm}, function(data) {\n        $scope.realmRoles = data;\n    })\n    Client.query({realm: realm.realm}, function(data) {\n        $scope.clients = data;\n        if (data.length > 0) {\n            $scope.client.selected = data[0];\n            $scope.changeClient();\n        }\n    })\n});\n\nmodule.controller('ProviderConfigCtrl', function ($modal, $scope) {\n    $scope.openRoleSelector = function (configName, config) {\n        $modal.open({\n            templateUrl: resourceUrl + '/partials/modal/role-selector.html',\n            controller: 'RoleSelectorModalCtrl',\n            resolve: {\n                realm: function () {\n                    return $scope.realm;\n                },\n                config: function () {\n                    return config;\n                },\n                configName: function () {\n                    return configName;\n                }\n            }\n        })\n    }\n});\n\nmodule.directive('kcProviderConfig', function ($modal) {\n    return {\n        scope: {\n            config: '=',\n            properties: '=',\n            realm: '=',\n            clients: '=',\n            configName: '='\n        },\n        restrict: 'E',\n        replace: true,\n        controller: 'ProviderConfigCtrl',\n        templateUrl: resourceUrl + '/templates/kc-provider-config.html'\n    }\n});\n\nmodule.controller('ComponentRoleSelectorModalCtrl', function($scope, realm, config, configName, RealmRoles, Client, ClientRole, $modalInstance) {\n    $scope.selectedRealmRole = {\n        role: undefined\n    };\n    $scope.selectedClientRole = {\n        role: undefined\n    };\n    $scope.client = {\n        selected: undefined\n    };\n\n    $scope.selectRealmRole = function() {\n        config[configName][0] = $scope.selectedRealmRole.role.name;\n        $modalInstance.close();\n    }\n\n    $scope.selectClientRole = function() {\n        config[configName][0] = $scope.client.selected.clientId + \".\" + $scope.selectedClientRole.role.name;\n        $modalInstance.close();\n    }\n\n    $scope.cancel = function() {\n        $modalInstance.dismiss();\n    }\n\n    $scope.changeClient = function() {\n        if ($scope.client.selected) {\n            ClientRole.query({realm: realm.realm, client: $scope.client.selected.id}, function (data) {\n                $scope.clientRoles = data;\n            });\n        } else {\n            console.log('selected client was null');\n            $scope.clientRoles = null;\n        }\n\n    }\n    RealmRoles.query({realm: realm.realm}, function(data) {\n        $scope.realmRoles = data;\n    })\n    Client.query({realm: realm.realm}, function(data) {\n        $scope.clients = data;\n        if (data.length > 0) {\n            $scope.client.selected = data[0];\n            $scope.changeClient();\n        }\n    })\n});\n\nmodule.controller('ComponentConfigCtrl', function ($modal, $scope) {\n    $scope.openRoleSelector = function (configName, config) {\n        $modal.open({\n            templateUrl: resourceUrl + '/partials/modal/component-role-selector.html',\n            controller: 'ComponentRoleSelectorModalCtrl',\n            resolve: {\n                realm: function () {\n                    return $scope.realm;\n                },\n                config: function () {\n                    return config;\n                },\n                configName: function () {\n                    return configName;\n                }\n            }\n        })\n    }\n});\nmodule.directive('kcComponentConfig', function ($modal) {\n    return {\n        scope: {\n            config: '=',\n            properties: '=',\n            realm: '=',\n            clients: '=',\n            configName: '='\n        },\n        restrict: 'E',\n        replace: true,\n        controller: 'ComponentConfigCtrl',\n        templateUrl: resourceUrl + '/templates/kc-component-config.html'\n    }\n});\n\n/*\n*  Used to select the element (invoke $(elem).select()) on specified action list.\n*  Usages kc-select-action=\"click mouseover\"\n*  When used in the textarea element, this will select/highlight the textarea content on specified action (i.e. click).\n*/\nmodule.directive('kcSelectAction', function ($compile, Notifications) {\n    return {\n        restrict: 'A',\n        compile: function (elem, attrs) {\n\n            var events = attrs.kcSelectAction.split(\" \");\n\n            for(var i=0; i < events.length; i++){\n\n                elem.bind(events[i], function(){\n                    elem.select();\n                });\n            }\n        }\n    }\n});\n\nmodule.filter('remove', function() {\n    return function(input, remove, attribute) {\n        if (!input || !remove) {\n            return input;\n        }\n\n        var out = [];\n        for ( var i = 0; i < input.length; i++) {\n            var e = input[i];\n\n            if (Array.isArray(remove)) {\n                for (var j = 0; j < remove.length; j++) {\n                    if (attribute) {\n                        if (remove[j][attribute] == e[attribute]) {\n                            e = null;\n                            break;\n                        }\n                    } else {\n                        if (remove[j] == e) {\n                            e = null;\n                            break;\n                        }\n                    }\n                }\n            } else {\n                if (attribute) {\n                    if (remove[attribute] == e[attribute]) {\n                        e = null;\n                    }\n                } else {\n                    if (remove == e) {\n                        e = null;\n                    }\n                }\n            }\n\n            if (e != null) {\n                out.push(e);\n            }\n        }\n\n        return out;\n    };\n});\n\nmodule.filter('capitalize', function() {\n    return function(input) {\n        if (!input) {\n            return;\n        }\n        var splittedWords = input.split(/\\s+/);\n        for (var i=0; i<splittedWords.length ; i++) {\n            splittedWords[i] = splittedWords[i].charAt(0).toUpperCase() + splittedWords[i].slice(1);\n        };\n        return splittedWords.join(\" \");\n    };\n});\n\n/*\n * Guarantees a deterministic property iteration order.\n * See: http://www.2ality.com/2015/10/property-traversal-order-es6.html\n */\nmodule.filter('toOrderedMapSortedByKey', function(){\n   return function(input){\n\n       if(!input){\n           return input;\n       }\n\n       var keys = Object.keys(input);\n\n       if(keys.length <= 1){\n           return input;\n       }\n\n       keys.sort();\n\n       var result = {};\n       for (var i = 0; i < keys.length; i++) {\n           result[keys[i]] = input[keys[i]];\n       }\n\n       return result;\n   };\n});\n\nmodule.directive('kcSidebarResize', function ($window) {\n    return function (scope, element) {\n        function resize() {\n            var navBar = angular.element(document.getElementsByClassName('navbar-pf')).height();\n            var container = angular.element(document.getElementById(\"view\").getElementsByTagName(\"div\")[0]).height();\n            var height = Math.max(container, window.innerHeight - navBar - 3);\n\n            element[0].style['min-height'] = height + 'px';\n        }\n\n        resize();\n\n        var w = angular.element($window);\n        scope.$watch(function () {\n            return {\n                'h': window.innerHeight,\n                'w': window.innerWidth\n            };\n        }, function () {\n            resize();\n        }, true);\n        w.bind('resize', function () {\n            scope.$apply();\n        });\n    }\n});\n\n\n\nmodule.directive('kcTooltip', function($compile) {\n        return {\n            restrict: 'E',\n            replace: false,\n            terminal: true,\n            priority: 1000,\n            link: function link(scope,element, attrs) {\n                var angularElement = angular.element(element[0]);\n                var tooltip = angularElement.text();\n                angularElement.text('');\n                element.addClass('hidden');\n\n                var label = angular.element(element.parent().children()[0]);\n                label.append(' <i class=\"fa fa-question-circle text-muted\" tooltip=\"' + tooltip + '\" tooltip-placement=\"right\" tooltip-trigger=\"mouseover mouseout\"></i>');\n\n                $compile(label)(scope);\n            }\n        };\n});\n\nmodule.directive( 'kcOpen', function ( $location ) {\n    return function ( scope, element, attrs ) {\n        var path;\n\n        attrs.$observe( 'kcOpen', function (val) {\n            path = val;\n        });\n\n        element.bind( 'click', function () {\n            scope.$apply( function () {\n                $location.path(path);\n            });\n        });\n    };\n});\n\nmodule.directive('kcOnReadFile', function ($parse) {\n    console.debug('kcOnReadFile');\n    return {\n        restrict: 'A',\n        scope: false,\n        link: function(scope, element, attrs) {\n            var fn = $parse(attrs.kcOnReadFile);\n\n            element.on('change', function(onChangeEvent) {\n                var reader = new FileReader();\n\n                reader.onload = function(onLoadEvent) {\n                    scope.$apply(function() {\n                        fn(scope, {$fileContent:onLoadEvent.target.result});\n                    });\n                };\n\n                reader.readAsText((onChangeEvent.srcElement || onChangeEvent.target).files[0]);\n            });\n        }\n    };\n});\n","repo_name":"wildfly-security-incubator/keycloak","path":"themes/src/main/resources/theme/base/admin/resources/js/app.js","language":"JavaScript","license":"apache-2.0","size":99144},"truncated_cells":[]},{"row_idx":65,"row":{"code":"<html>\n<head>\n<title>RSEM-EVAL: A novel reference-free transcriptome assembly evaluation measure</title>\n<!--This file is autogenerated. Edit the template instead.-->\n<script type=\"text/x-mathjax-config\">\nMathJax.Hub.Config({\n  tex2jax: {inlineMath: [['$','$']]}\n});\n</script>\n<script src=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_SVG\" type=\"text/javascript\"></script>\n<style type=\"text/css\">\nbody { max-width: 50em; }\nbody, td { font-family: sans-serif; }\ndt { font-family: monospace; }\nh1, h2 { color: #990000; }\n</style>\n</head>\n<body>\n<h1>RSEM-EVAL: A novel reference-free transcriptome assembly evaluation measure</h1>\n<h2><a name=\"introduction\"></a> Introduction</h2>\n\n<p>RSEM-EVAL is built off of RSEM. It is a reference-free de novo transcriptome assembly evaluator.</p>\n\n<h2><a name=\"compilation\"></a> Compilation &amp; Installation</h2>\n\n<p>To compile RSEM-EVAL, simply run</p>\n\n<pre><code>make\n</code></pre>\n\n<p>To install, simply put the rsem directory in your environment's PATH\nvariable.</p>\n\n<h3>Prerequisites</h3>\n\n<p>C++, Perl and R are required to be installed. </p>\n\n<p>To take advantage of RSEM-EVAL's built-in support for the Bowtie alignment\nprogram, you must have <a href=\"http://bowtie-bio.sourceforge.net\">Bowtie</a> installed.</p>\n\n<h2><a name=\"usage\"></a> Usage</h2>\n\n<h3>I. Build an assembly from the RNA-Seq data using an assembler</h3>\n\n<p>Please note that the RNA-Seq data set used to build the assembly\nshould be exactly the same as the RNA-Seq data set for evaluating this\nassembly. RSEM-EVAL supports both single-end and paired-end reads.</p>\n\n<h3>II. Estimate Transcript Length Distribution Parameters</h3>\n\n<p>RSEM-EVAL provides a script\n'rsem-eval-estimate-transcript-length-distribution' to estimate\ntranscript length distribution from a set of transcript\nsequences. Transcripts can be from a closely related species to the\norgaism whose transcriptome is sequenced. Its usage is:</p>\n\n<pre><code>rsem-eval-estimate-transcript-length-distribution input.fasta parameter_file\n</code></pre>\n\n<p>__input.fasta__ is a multi-FASTA file contains all transcript sequences used to learn the true transcript length distribution's parameters. <br>\n__parameter_file__ records the learned parameters--the estimated mean and standard deviation (separated by a tab character).</p>\n\n<p>We have some learned paramter files stored at folder\n'true_transcript_length_distribution'. Please refer to\n'true_length_dist_mean_sd.txt' in the folder for more details.</p>\n\n<h3>III. Calculate the RSEM-EVAL score</h3>\n\n<p>To calculate the RSEM-EVAL score, you should use 'rsem-eval-calculate-score'. Run</p>\n\n<pre><code>rsem-eval-calculate-score --help\n</code></pre>\n\n<p>to get usage information.</p>\n\n<h3>IV. Outputs related to the evaluation score</h3>\n\n<p>RSEM-EVAL produces the following three score related files:\n'sample_name.score', 'sample_name.score.isoforms.results' and\n'sample_name.score.genes.results'.</p>\n\n<p>'sample_name.score' stores the evaluation score for the evaluated\nassembly. It contains 13 lines and each line contains a name and a\nvalue separated by a tab.</p>\n\n<p>The first 6 lines provide: 'Score', the RSEM-EVAL score;\n'BIC_penalty', the BIC penalty term; 'Prior_score_on_contig_lengths (f\nfunction canceled)', the log score of priors of contig lengths, with f\nfunction values excluded (f function is defined in equation (4) at\npage 5 of Additional file 1, which is the supplementary methods,\ntables and figures of our DETONATE paper);\n'Prior_score_on_contig_sequences', the log score of priors of contig\nsequence bases; 'Data_likelihood_in_log_space_without_correction', the\nRSEM log data likelihood calculated with contig-level read generating\nprobabilities mentioned in section 4 of Additional file 1;\n'Correction_term_(f_function_canceled)', the correction term, with f\nfunction values excluded. Score = BIC_penalty +\nPrior_score_on_contig_lengths + Prior_score_on_contig_sequences +\nData_likelihood_in_log_space_without_correction -\nCorrection_term. Because both 'Prior_score_on_contig_lengths' and\n'Correction_term' share the same f function values for each contig,\nthe f function values can be canceled out. Then\n'Prior_score_on_contig_lengths_(f_function_canceled)' is the sum of\nlog $c_{\\lambda}(\\ell)$ terms in equation (9) at page 5 of Additional\nfile 1. 'Correction_term_(f_function_canceled)' is the sum of log $(1\n- p_{\\lambda_i})$ terms in equation (23) at page 9 of Additional file\n1. For the correction term, we use $\\lambda_i$ instead of $\\lambda'_i$\nto make f function canceled out.</p>\n\n<p>NOTE: Higher RSEM-EVAL scores are better than lower scores. This is \ntrue despite the fact that the scores are always negative.  For \nexample, a score of -80000 is better than a score of -200000, since\n-80000 &gt; -200000.</p>\n\n<p>The next 7 lines provide statistics that may help users to understand\nthe RSEM-EVAL score better. They are: 'Number_of_contigs', the number\nof contigs contained in the assembly;\n'Expected_number_of_aligned_reads_given_the_data', the expected number\nof reads assigned to each contig estimated using the contig-level read\ngenerating probabilities mentioned in section 4 of Additional file 1;\n'Number_of_contigs_smaller_than_expected_read/fragment_length', the\nnumber of contigs whose length is smaller than the expected\nread/fragment length; 'Number_of_contigs_with_no_read_aligned_to', the\nnumber of contigs whose expected number of aligned reads is smaller\nthan 0.005; 'Maximum_data_likelihood_in_log_space', the maximum data\nlikelihood in log space calculated from RSEM by treating the assembly\nas \"true\" transcripts; 'Number_of_alignable_reads', the number of\nreads that have at least one alignment found by the aligner (Because\n'rsem-calculate-expression' tries to use a very loose criteria to find\nalignments, reads with only low quality alignments may also be counted\nas alignable reads here); 'Number_of_alignments_in_total', the number\nof total alignments found by the aligner.</p>\n\n<p>'sample_name.score.isoforms.results' and\n'sample_name.score.genes.results' output \"corrected\" expression levels\nbased on contig-level read generating probabilities mentioned in\nsection 4 of Additional file 1. Unlike 'sample_name.isoforms.results'\nand 'sample_name.genes.results', which are calculated by treating the\ncontigs as true transcripts, calculating\n'sample_name.score.isoforms.results' and\n'sample_name.score.genes.results' involves first estimating expected\nread coverage for each contig and then convert the expected read\ncoverage into contig-level read generating probabilities. This\nprocedure is aware of that provided sequences are contigs and gives\nbetter expression estimates for very short contigs. In addtion, the\n'TPM' field is changed to 'CPM' field, which stands for contig per\nmillion.</p>\n\n<p>For 'sample_name.score.isoforms.results', one additional\ncolumn is added. The additional column is named as\n'contig_impact_score' and gives the contig impact score for each\ncontig as described in section 5 of Additional file 1.</p>\n\n<h2><a name=\"example\"></a> Example</h2>\n\n<p>We have a toy example in the 'examples' folder of the detonate distribution. A\nsingle true transcript is stored at file 'toy_ref.fa'. The single-end, 76bp\nreads generated from this transcript are stored in file 'toy_SE.fq'. In\naddition, we have three different assemblies based on the data:\n'toy_assembly_1.fa', 'toy_assembly_2.fa' and 'toy_assembly_3.fa'. We also know\nthe true transcript is from mouse and thus use 'mouse.txt' under\n'true_transcript_length_distribution' as our transcript length parameter file.</p>\n\n<p>We run (assuming that we are in the rsem-eval directory)</p>\n\n<pre><code>./rsem-eval-calculate-score -p 8 \\\n              --transcript-length-parameters true_transcript_length_distribution/mouse.txt \\\n              ../examples/toy_SE.fq \\\n              ../examples/toy_assembly_1.fa \\\n              toy_assembly_1\n              76\n</code></pre>\n\n<p>to obtain the RSEM-EVAL score. </p>\n\n<p>The RSEM-EVAL score can be found in 'toy_assembly_1.score'. The\ncontig impact scores can be found in\n'toy_assembly_1.score.isoforms.results'.</p>\n\n<h2><a name=\"authors\"></a> Authors</h2>\n\n<p>RSEM-EVAL is developed by Bo Li, with substaintial technical input from Colin Dewey and Nate Fillmore.</p>\n\n<h2><a name=\"acknowledgements\"></a> Acknowledgements</h2>\n\n<p>Please refer to the acknowledgements section in 'README_RSEM.md'.</p>\n\n<h2><a name=\"license\"></a> License</h2>\n\n<p>RSEM-EVAL is licensed under the <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">GNU General Public License\nv3</a>.</p>\n</body>\n</html>","repo_name":"fmaguire/BayeHem","path":"bayehem/rsem/detonate-1.11/html/rsem-eval.html","language":"HTML","license":"apache-2.0","size":8616},"truncated_cells":[]},{"row_idx":66,"row":{"code":"/*\n * AnyOf_test.cpp\n *\n *  Created on: Jan 30, 2016\n *      Author: ljeff\n */\n\n#include \"AnyOf.h\"\n\nnamespace algorithm {\n\n} /* namespace algorithm */\n","repo_name":"jidol/boost-algorithms","path":"AnyOf_test.cpp","language":"C++","license":"apache-2.0","size":151},"truncated_cells":[]},{"row_idx":67,"row":{"code":"/*\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * permissions and limitations under the License.\n *\n * See also http://www.apache.org/licenses/LICENSE-2.0.html for an\n * explanation of the license and how it is applied.\n */\n\npackage org.mifos.customers.persistence;\n\nimport static org.mifos.application.meeting.util.helpers.MeetingType.CUSTOMER_MEETING;\nimport static org.mifos.application.meeting.util.helpers.RecurrenceType.WEEKLY;\nimport static org.mifos.framework.util.helpers.TestObjectFactory.EVERY_WEEK;\n\nimport java.sql.Date;\nimport java.util.ArrayList;\nimport java.util.Calendar;\nimport java.util.GregorianCalendar;\nimport java.util.List;\n\nimport junit.framework.Assert;\n\nimport org.mifos.accounts.business.AccountActionDateEntity;\nimport org.mifos.accounts.business.AccountBO;\nimport org.mifos.accounts.business.AccountFeesEntity;\nimport org.mifos.accounts.business.AccountStateEntity;\nimport org.mifos.accounts.business.AccountTestUtils;\nimport org.mifos.accounts.exceptions.AccountException;\nimport org.mifos.accounts.fees.business.AmountFeeBO;\nimport org.mifos.accounts.fees.business.FeeBO;\nimport org.mifos.accounts.fees.util.helpers.FeeCategory;\nimport org.mifos.accounts.loan.business.LoanBO;\nimport org.mifos.accounts.productdefinition.business.LoanOfferingBO;\nimport org.mifos.accounts.productdefinition.business.SavingsOfferingBO;\nimport org.mifos.accounts.productdefinition.util.helpers.RecommendedAmountUnit;\nimport org.mifos.accounts.savings.business.SavingsBO;\nimport org.mifos.accounts.util.helpers.AccountState;\nimport org.mifos.accounts.util.helpers.AccountStateFlag;\nimport org.mifos.accounts.util.helpers.AccountTypes;\nimport org.mifos.application.master.business.MifosCurrency;\nimport org.mifos.application.meeting.business.MeetingBO;\nimport org.mifos.application.meeting.exceptions.MeetingException;\nimport org.mifos.application.meeting.persistence.MeetingPersistence;\nimport org.mifos.application.meeting.util.helpers.RecurrenceType;\nimport org.mifos.application.servicefacade.CollectionSheetCustomerDto;\nimport org.mifos.application.util.helpers.YesNoFlag;\nimport org.mifos.config.AccountingRulesConstants;\nimport org.mifos.config.ConfigurationManager;\nimport org.mifos.core.CurrencyMismatchException;\nimport org.mifos.customers.business.CustomerAccountBO;\nimport org.mifos.customers.business.CustomerBO;\nimport org.mifos.customers.business.CustomerBOTestUtils;\nimport org.mifos.customers.business.CustomerNoteEntity;\nimport org.mifos.customers.business.CustomerPerformanceHistoryView;\nimport org.mifos.customers.business.CustomerSearch;\nimport org.mifos.customers.business.CustomerStatusEntity;\nimport org.mifos.customers.business.CustomerView;\nimport org.mifos.customers.center.business.CenterBO;\nimport org.mifos.customers.checklist.business.CheckListBO;\nimport org.mifos.customers.checklist.business.CustomerCheckListBO;\nimport org.mifos.customers.checklist.util.helpers.CheckListConstants;\nimport org.mifos.customers.client.business.AttendanceType;\nimport org.mifos.customers.client.business.ClientBO;\nimport org.mifos.customers.client.util.helpers.ClientConstants;\nimport org.mifos.customers.group.BasicGroupInfo;\nimport org.mifos.customers.group.business.GroupBO;\nimport org.mifos.customers.personnel.business.PersonnelBO;\nimport org.mifos.customers.personnel.util.helpers.PersonnelConstants;\nimport org.mifos.customers.util.helpers.ChildrenStateType;\nimport org.mifos.customers.util.helpers.CustomerLevel;\nimport org.mifos.customers.util.helpers.CustomerStatus;\nimport org.mifos.customers.util.helpers.CustomerStatusFlag;\nimport org.mifos.framework.MifosIntegrationTestCase;\nimport org.mifos.framework.TestUtils;\nimport org.mifos.framework.exceptions.ApplicationException;\nimport org.mifos.framework.exceptions.PersistenceException;\nimport org.mifos.framework.exceptions.SystemException;\nimport org.mifos.framework.hibernate.helper.QueryResult;\nimport org.mifos.framework.hibernate.helper.StaticHibernateUtil;\nimport org.mifos.framework.util.helpers.Money;\nimport org.mifos.framework.util.helpers.TestObjectFactory;\nimport org.mifos.security.util.UserContext;\n\npublic class CustomerPersistenceIntegrationTest extends MifosIntegrationTestCase {\n\n    public CustomerPersistenceIntegrationTest() throws Exception {\n        super();\n    }\n\n    private MeetingBO meeting;\n\n    private CustomerBO center;\n\n    private ClientBO client;\n\n    private CustomerBO group2;\n\n    private CustomerBO group;\n\n    private AccountBO account;\n\n    private LoanBO groupAccount;\n\n    private LoanBO clientAccount;\n\n    private SavingsBO centerSavingsAccount;\n\n    private SavingsBO groupSavingsAccount;\n\n    private SavingsBO clientSavingsAccount;\n\n    private SavingsOfferingBO savingsOffering;\n\n    private final CustomerPersistence customerPersistence = new CustomerPersistence();\n\n    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n    }\n\n    @Override\n    public void tearDown() throws Exception {\n        try {\n            TestObjectFactory.cleanUp(centerSavingsAccount);\n            TestObjectFactory.cleanUp(groupSavingsAccount);\n            TestObjectFactory.cleanUp(clientSavingsAccount);\n            TestObjectFactory.cleanUp(groupAccount);\n            TestObjectFactory.cleanUp(clientAccount);\n            TestObjectFactory.cleanUp(account);\n            TestObjectFactory.cleanUp(client);\n            TestObjectFactory.cleanUp(group2);\n            TestObjectFactory.cleanUp(group);\n            TestObjectFactory.cleanUp(center);\n            StaticHibernateUtil.closeSession();\n        } catch (Exception e) {\n            // Throwing from tearDown will tend to mask the real failure.\n            e.printStackTrace();\n        }\n        super.tearDown();\n    }\n\n    public void testGetTotalAmountForAllClientsOfGroupForSingleCurrency() throws Exception {\n        MeetingBO meeting = TestObjectFactory.createMeeting(TestObjectFactory.getTypicalMeeting());\n        center = createCenter(\"new_center\");\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group\", CustomerStatus.GROUP_ACTIVE, center);\n        client = TestObjectFactory.createClient(\"client1\", CustomerStatus.CLIENT_ACTIVE, group);\n\n        AccountBO clientAccount1 = getLoanAccount(client, meeting, \"fdbdhgsgh\", \"54hg\", TestUtils.RUPEE);\n        AccountBO clientAccount2 = getLoanAccount(client, meeting, \"fasdfdsfasdf\", \"1qwe\", TestUtils.RUPEE);\n        Money amount = customerPersistence.getTotalAmountForAllClientsOfGroup(group.getOffice().getOfficeId(),\n                AccountState.LOAN_ACTIVE_IN_GOOD_STANDING, group.getSearchId() + \".%\");\n        Assert.assertEquals(new Money(TestUtils.RUPEE, \"600\"), amount);\n\n        TestObjectFactory.cleanUp(clientAccount1);\n        TestObjectFactory.cleanUp(clientAccount2);\n\n    }\n\n    /*\n     * When trying to sum amounts across loans with different currencies, we should get an exception\n     */\n    public void testGetTotalAmountForAllClientsOfGroupForMultipleCurrencies() throws Exception {\n        ConfigurationManager configMgr = ConfigurationManager.getInstance();\n        configMgr.setProperty(AccountingRulesConstants.ADDITIONAL_CURRENCY_CODES, TestUtils.EURO.getCurrencyCode());\n\n        AccountBO clientAccount1;\n        AccountBO clientAccount2;\n\n        try {\n            MeetingBO meeting = TestObjectFactory.createMeeting(TestObjectFactory.getTypicalMeeting());\n            center = createCenter(\"new_center\");\n            group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group\", CustomerStatus.GROUP_ACTIVE, center);\n            client = TestObjectFactory.createClient(\"client1\", CustomerStatus.CLIENT_ACTIVE, group);\n\n            clientAccount1 = getLoanAccount(client, meeting, \"fdbdhgsgh\", \"54hg\", TestUtils.RUPEE);\n            clientAccount2 = getLoanAccount(client, meeting, \"fasdfdsfasdf\", \"1qwe\", TestUtils.EURO);\n\n            try {\n                customerPersistence.getTotalAmountForAllClientsOfGroup(group.getOffice().getOfficeId(),\n                        AccountState.LOAN_ACTIVE_IN_GOOD_STANDING, group.getSearchId() + \".%\");\n                fail(\"didn't get the expected CurrencyMismatchException\");\n            } catch (CurrencyMismatchException e) {\n                // if we got here then we got the exception we were expecting\n                assertNotNull(e);\n            } catch (Exception e) {\n                fail(\"didn't get the expected CurrencyMismatchException\");\n            }\n        } finally {\n            configMgr.clearProperty(AccountingRulesConstants.ADDITIONAL_CURRENCY_CODES);\n        }\n\n        TestObjectFactory.cleanUp(clientAccount1);\n        TestObjectFactory.cleanUp(clientAccount2);\n\n    }\n\n    /*\n     * When trying to sum amounts across loans with different currencies, we should get an exception\n     */\n    public void testGetTotalAmountForGroupForMultipleCurrencies() throws Exception {\n        ConfigurationManager configMgr = ConfigurationManager.getInstance();\n        configMgr.setProperty(AccountingRulesConstants.ADDITIONAL_CURRENCY_CODES, TestUtils.EURO.getCurrencyCode());\n\n        GroupBO group1;\n        AccountBO account1;\n        AccountBO account2;\n\n        try {\n            CustomerPersistence customerPersistence = new CustomerPersistence();\n            meeting = TestObjectFactory.createMeeting(TestObjectFactory.getNewMeetingForToday(WEEKLY, EVERY_WEEK,\n                    CUSTOMER_MEETING));\n            center = TestObjectFactory.createWeeklyFeeCenter(\"Center\", meeting);\n            group1 = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group1\", CustomerStatus.GROUP_ACTIVE, center);\n            account1 = getLoanAccount(group1, meeting, \"adsfdsfsd\", \"3saf\", TestUtils.RUPEE);\n            account2 = getLoanAccount(group1, meeting, \"adspp\", \"kkaf\", TestUtils.EURO);\n\n            try {\n                customerPersistence.getTotalAmountForGroup(group1.getCustomerId(),\n                        AccountState.LOAN_ACTIVE_IN_GOOD_STANDING);\n                fail(\"didn't get the expected CurrencyMismatchException\");\n            } catch (CurrencyMismatchException e) {\n                // if we got here then we got the exception we were expecting\n                assertNotNull(e);\n            } catch (Exception e) {\n                fail(\"didn't get the expected CurrencyMismatchException\");\n            }\n        } finally {\n            configMgr.clearProperty(AccountingRulesConstants.ADDITIONAL_CURRENCY_CODES);\n        }\n\n        TestObjectFactory.cleanUp(account1);\n        TestObjectFactory.cleanUp(account2);\n        TestObjectFactory.cleanUp(group1);\n    }\n\n    public void testGetTotalAmountForGroup() throws Exception {\n        CustomerPersistence customerPersistence = new CustomerPersistence();\n        meeting = TestObjectFactory.createMeeting(TestObjectFactory.getNewMeetingForToday(WEEKLY, EVERY_WEEK,\n                CUSTOMER_MEETING));\n        center = TestObjectFactory.createWeeklyFeeCenter(\"Center\", meeting);\n        GroupBO group1 = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group1\", CustomerStatus.GROUP_ACTIVE, center);\n        AccountBO account1 = getLoanAccount(group1, meeting, \"adsfdsfsd\", \"3saf\");\n        AccountBO account2 = getLoanAccount(group1, meeting, \"adspp\", \"kkaf\");\n        Money amount = customerPersistence.getTotalAmountForGroup(group1.getCustomerId(),\n                AccountState.LOAN_ACTIVE_IN_GOOD_STANDING);\n       Assert.assertEquals(new Money(getCurrency(), \"600\"), amount);\n        AccountBO account3 = getLoanAccountInActiveBadStanding(group1, meeting, \"adsfdsfsd1\", \"4sa\");\n        AccountBO account4 = getLoanAccountInActiveBadStanding(group1, meeting, \"adspp2\", \"kaf5\");\n        Money amount2 = customerPersistence.getTotalAmountForGroup(group1.getCustomerId(),\n                AccountState.LOAN_ACTIVE_IN_BAD_STANDING);\n       Assert.assertEquals(new Money(getCurrency(), \"600\"), amount2);\n\n        TestObjectFactory.cleanUp(account1);\n        TestObjectFactory.cleanUp(account2);\n        TestObjectFactory.cleanUp(account3);\n        TestObjectFactory.cleanUp(account4);\n        TestObjectFactory.cleanUp(group1);\n    }\n\n    public void testGetTotalAmountForAllClientsOfGroup() throws Exception {\n\n        MeetingBO meeting = TestObjectFactory.createMeeting(TestObjectFactory.getTypicalMeeting());\n        center = createCenter(\"new_center\");\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group\", CustomerStatus.GROUP_ACTIVE, center);\n        client = TestObjectFactory.createClient(\"client1\", CustomerStatus.CLIENT_ACTIVE, group);\n\n        AccountBO clientAccount1 = getLoanAccount(client, meeting, \"fdbdhgsgh\", \"54hg\");\n        AccountBO clientAccount2 = getLoanAccount(client, meeting, \"fasdfdsfasdf\", \"1qwe\");\n        Money amount = customerPersistence.getTotalAmountForAllClientsOfGroup(group.getOffice().getOfficeId(),\n                AccountState.LOAN_ACTIVE_IN_GOOD_STANDING, group.getSearchId() + \".%\");\n       Assert.assertEquals(new Money(getCurrency(), \"600\"), amount);\n        clientAccount1.changeStatus(AccountState.LOAN_ACTIVE_IN_BAD_STANDING.getValue(), null, \"none\");\n        clientAccount2.changeStatus(AccountState.LOAN_ACTIVE_IN_BAD_STANDING.getValue(), null, \"none\");\n        TestObjectFactory.updateObject(clientAccount1);\n        TestObjectFactory.updateObject(clientAccount2);\n        StaticHibernateUtil.commitTransaction();\n        Money amount2 = customerPersistence.getTotalAmountForAllClientsOfGroup(group.getOffice().getOfficeId(),\n                AccountState.LOAN_ACTIVE_IN_BAD_STANDING, group.getSearchId() + \".%\");\n       Assert.assertEquals(new Money(getCurrency(), \"600\"), amount2);\n\n        TestObjectFactory.cleanUp(clientAccount1);\n        TestObjectFactory.cleanUp(clientAccount2);\n\n    }\n\n    public void testGetAllBasicGroupInfo() throws Exception {\n        CustomerPersistence customerPersistence = new CustomerPersistence();\n        center = createCenter(\"new_center\");\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group\", CustomerStatus.GROUP_ACTIVE, center);\n        GroupBO newGroup = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"newGroup\", CustomerStatus.GROUP_HOLD, center);\n        GroupBO newGroup2 = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"newGroup2\", CustomerStatus.GROUP_CANCELLED,\n                center);\n        GroupBO newGroup3 = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"newGroup3\", CustomerStatus.GROUP_CLOSED, center);\n        GroupBO newGroup4 = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"newGroup4\", CustomerStatus.GROUP_PARTIAL, center);\n        GroupBO newGroup5 = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"newGroup5\", CustomerStatus.GROUP_PENDING, center);\n        List<BasicGroupInfo> groupInfos = customerPersistence.getAllBasicGroupInfo();\n        Assert.assertEquals(2, groupInfos.size());\n        Assert.assertEquals(group.getDisplayName(), groupInfos.get(0).getGroupName());\n        Assert.assertEquals(group.getSearchId(), groupInfos.get(0).getSearchId());\n        Assert.assertEquals(group.getOffice().getOfficeId(), groupInfos.get(0).getBranchId());\n        Assert.assertEquals(group.getCustomerId(), groupInfos.get(0).getGroupId());\n        Assert.assertEquals(newGroup.getDisplayName(), groupInfos.get(1).getGroupName());\n        Assert.assertEquals(newGroup.getSearchId(), groupInfos.get(1).getSearchId());\n        Assert.assertEquals(newGroup.getOffice().getOfficeId(), groupInfos.get(1).getBranchId());\n        Assert.assertEquals(newGroup.getCustomerId(), groupInfos.get(1).getGroupId());\n        TestObjectFactory.cleanUp(newGroup);\n        TestObjectFactory.cleanUp(newGroup2);\n        TestObjectFactory.cleanUp(newGroup3);\n        TestObjectFactory.cleanUp(newGroup4);\n        TestObjectFactory.cleanUp(newGroup5);\n\n    }\n\n    public void testCustomersUnderLO() throws Exception {\n        CustomerPersistence customerPersistence = new CustomerPersistence();\n        meeting = TestObjectFactory.createMeeting(TestObjectFactory.getTypicalMeeting());\n        center = TestObjectFactory.createWeeklyFeeCenter(\"Center_Active\", meeting);\n        List<CustomerView> customers = customerPersistence.getActiveParentList(Short.valueOf(\"1\"), CustomerLevel.CENTER\n                .getValue(), Short.valueOf(\"3\"));\n        Assert.assertEquals(1, customers.size());\n\n    }\n\n    public void testActiveCustomersUnderParent() throws Exception {\n        CustomerPersistence customerPersistence = new CustomerPersistence();\n        createCustomers(CustomerStatus.GROUP_ACTIVE, CustomerStatus.CLIENT_ACTIVE);\n        List<CustomerView> customers = customerPersistence.getChildrenForParent(center.getCustomerId(), center\n                .getSearchId(), center.getOffice().getOfficeId());\n        Assert.assertEquals(2, customers.size());\n    }\n\n    public void testOnHoldCustomersUnderParent() throws Exception {\n        CustomerPersistence customerPersistence = new CustomerPersistence();\n        createCustomers(CustomerStatus.GROUP_HOLD, CustomerStatus.CLIENT_HOLD);\n        List<CustomerView> customers = customerPersistence.getChildrenForParent(center.getCustomerId(), center\n                .getSearchId(), center.getOffice().getOfficeId());\n        Assert.assertEquals(2, customers.size());\n    }\n\n    public void testGetLastMeetingDateForCustomer() throws Exception {\n        CustomerPersistence customerPersistence = new CustomerPersistence();\n        meeting = TestObjectFactory.createMeeting(TestObjectFactory.getNewMeetingForToday(WEEKLY, EVERY_WEEK,\n                CUSTOMER_MEETING));\n        center = TestObjectFactory.createWeeklyFeeCenter(\"Center\", meeting);\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group\", CustomerStatus.GROUP_ACTIVE, center);\n        account = getLoanAccount(group, meeting, \"adsfdsfsd\", \"3saf\");\n        // Date actionDate = new Date(2006,03,13);\n        Date meetingDate = customerPersistence.getLastMeetingDateForCustomer(center.getCustomerId());\n        Assert.assertEquals(new Date(getMeetingDates(meeting).getTime()).toString(), meetingDate.toString());\n\n    }\n\n    public void testGetChildernOtherThanClosed() throws Exception {\n        CustomerPersistence customerPersistence = new CustomerPersistence();\n        center = createCenter();\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group1\", CustomerStatus.GROUP_ACTIVE, center);\n        client = TestObjectFactory.createClient(\"client1\", CustomerStatus.CLIENT_ACTIVE, group);\n        ClientBO client2 = TestObjectFactory.createClient(\"client2\", CustomerStatus.CLIENT_CLOSED, group);\n        ClientBO client3 = TestObjectFactory.createClient(\"client3\", CustomerStatus.CLIENT_CANCELLED, group);\n        ClientBO client4 = TestObjectFactory.createClient(\"client4\", CustomerStatus.CLIENT_PENDING, group);\n\n        List<CustomerBO> customerList = customerPersistence.getChildren(center.getSearchId(), center.getOffice()\n                .getOfficeId(), CustomerLevel.CLIENT, ChildrenStateType.OTHER_THAN_CLOSED);\n        Assert.assertEquals(new Integer(\"3\").intValue(), customerList.size());\n\n        for (CustomerBO customer : customerList) {\n            if (customer.getCustomerId().intValue() == client3.getCustomerId().intValue()) {\n                Assert.assertTrue(true);\n            }\n        }\n        TestObjectFactory.cleanUp(client2);\n        TestObjectFactory.cleanUp(client3);\n        TestObjectFactory.cleanUp(client4);\n    }\n\n    public void testGetChildernActiveAndHold() throws Exception {\n        CustomerPersistence customerPersistence = new CustomerPersistence();\n        center = createCenter();\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group1\", CustomerStatus.GROUP_ACTIVE, center);\n        client = TestObjectFactory.createClient(\"client1\", CustomerStatus.CLIENT_ACTIVE, group);\n        ClientBO client2 = TestObjectFactory.createClient(\"client2\", CustomerStatus.CLIENT_PARTIAL, group);\n        ClientBO client3 = TestObjectFactory.createClient(\"client3\", CustomerStatus.CLIENT_PENDING, group);\n        ClientBO client4 = TestObjectFactory.createClient(\"client4\", CustomerStatus.CLIENT_HOLD, group);\n\n        List<CustomerBO> customerList = customerPersistence.getChildren(center.getSearchId(), center.getOffice()\n                .getOfficeId(), CustomerLevel.CLIENT, ChildrenStateType.ACTIVE_AND_ONHOLD);\n        Assert.assertEquals(new Integer(\"2\").intValue(), customerList.size());\n\n        for (CustomerBO customer : customerList) {\n            if (customer.getCustomerId().intValue() == client.getCustomerId().intValue()) {\n                Assert.assertTrue(true);\n            }\n            if (customer.getCustomerId().intValue() == client4.getCustomerId().intValue()) {\n                Assert.assertTrue(true);\n            }\n        }\n        TestObjectFactory.cleanUp(client2);\n        TestObjectFactory.cleanUp(client3);\n        TestObjectFactory.cleanUp(client4);\n    }\n\n    public void testGetChildernOtherThanClosedAndCancelled() throws Exception {\n        CustomerPersistence customerPersistence = new CustomerPersistence();\n        center = createCenter();\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group1\", CustomerStatus.GROUP_ACTIVE, center);\n        client = TestObjectFactory.createClient(\"client1\", CustomerStatus.CLIENT_ACTIVE, group);\n        ClientBO client2 = TestObjectFactory.createClient(\"client2\", CustomerStatus.CLIENT_CLOSED, group);\n        ClientBO client3 = TestObjectFactory.createClient(\"client3\", CustomerStatus.CLIENT_CANCELLED, group);\n        ClientBO client4 = TestObjectFactory.createClient(\"client4\", CustomerStatus.CLIENT_PENDING, group);\n\n        List<CustomerBO> customerList = customerPersistence.getChildren(center.getSearchId(), center.getOffice()\n                .getOfficeId(), CustomerLevel.CLIENT, ChildrenStateType.OTHER_THAN_CANCELLED_AND_CLOSED);\n        Assert.assertEquals(new Integer(\"2\").intValue(), customerList.size());\n\n        for (CustomerBO customer : customerList) {\n            if (customer.getCustomerId().equals(client4.getCustomerId())) {\n                Assert.assertTrue(true);\n            }\n        }\n        TestObjectFactory.cleanUp(client2);\n        TestObjectFactory.cleanUp(client3);\n        TestObjectFactory.cleanUp(client4);\n    }\n\n    public void testGetAllChildern() throws Exception {\n        CustomerPersistence customerPersistence = new CustomerPersistence();\n        center = createCenter();\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group1\", CustomerStatus.GROUP_ACTIVE, center);\n        client = TestObjectFactory.createClient(\"client1\", CustomerStatus.CLIENT_ACTIVE, group);\n        ClientBO client2 = TestObjectFactory.createClient(\"client2\", CustomerStatus.CLIENT_CLOSED, group);\n        ClientBO client3 = TestObjectFactory.createClient(\"client3\", CustomerStatus.CLIENT_CANCELLED, group);\n        ClientBO client4 = TestObjectFactory.createClient(\"client4\", CustomerStatus.CLIENT_PENDING, group);\n\n        List<CustomerBO> customerList = customerPersistence.getChildren(center.getSearchId(), center.getOffice()\n                .getOfficeId(), CustomerLevel.CLIENT, ChildrenStateType.ALL);\n        Assert.assertEquals(new Integer(\"4\").intValue(), customerList.size());\n\n        for (CustomerBO customer : customerList) {\n            if (customer.getCustomerId().equals(client2.getCustomerId())) {\n                Assert.assertTrue(true);\n            }\n        }\n        TestObjectFactory.cleanUp(client2);\n        TestObjectFactory.cleanUp(client3);\n        TestObjectFactory.cleanUp(client4);\n    }\n\n    public void testRetrieveSavingsAccountForCustomer() throws Exception {\n        java.util.Date currentDate = new java.util.Date();\n\n        CustomerPersistence customerPersistence = new CustomerPersistence();\n        center = createCenter();\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group1\", CustomerStatus.GROUP_ACTIVE, center);\n        savingsOffering = TestObjectFactory.createSavingsProduct(\"SavingPrd1\", \"S\", currentDate, RecommendedAmountUnit.COMPLETE_GROUP);\n        UserContext user = new UserContext();\n        user.setId(PersonnelConstants.SYSTEM_USER);\n        account = TestObjectFactory.createSavingsAccount(\"000100000000020\", group, AccountState.SAVINGS_ACTIVE,\n                currentDate, savingsOffering, user);\n        StaticHibernateUtil.closeSession();\n        List<SavingsBO> savingsList = customerPersistence.retrieveSavingsAccountForCustomer(group.getCustomerId());\n        Assert.assertEquals(1, savingsList.size());\n        account = savingsList.get(0);\n        group = account.getCustomer();\n        center = group.getParentCustomer();\n    }\n\n    public void testNumberOfMeetingsAttended() throws Exception {\n        center = createCenter();\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group\", CustomerStatus.GROUP_ACTIVE, center);\n        client = TestObjectFactory.createClient(\"Client\", CustomerStatus.CLIENT_ACTIVE, group);\n\n        client.handleAttendance(new Date(System.currentTimeMillis()), AttendanceType.ABSENT);\n\n        client.handleAttendance(new Date(System.currentTimeMillis()), AttendanceType.PRESENT);\n\n        Calendar currentDate = new GregorianCalendar();\n        currentDate.roll(Calendar.DATE, 1);\n\n        client.handleAttendance(new Date(currentDate.getTimeInMillis()), AttendanceType.LATE);\n\n        StaticHibernateUtil.commitTransaction();\n\n        CustomerPerformanceHistoryView customerPerformanceHistoryView = customerPersistence.numberOfMeetings(true,\n                client.getCustomerId());\n        Assert.assertEquals(2, customerPerformanceHistoryView.getMeetingsAttended().intValue());\n\n        StaticHibernateUtil.closeSession();\n    }\n\n    public void testNumberOfMeetingsMissed() throws Exception {\n        center = createCenter();\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group\", CustomerStatus.GROUP_ACTIVE, center);\n        client = TestObjectFactory.createClient(\"Client\", CustomerStatus.CLIENT_ACTIVE, group);\n\n        client.handleAttendance(new Date(System.currentTimeMillis()), AttendanceType.PRESENT);\n        client.handleAttendance(new Date(System.currentTimeMillis()), AttendanceType.ABSENT);\n\n        Calendar currentDate = new GregorianCalendar();\n        currentDate.roll(Calendar.DATE, 1);\n\n        client.handleAttendance(new Date(currentDate.getTimeInMillis()), AttendanceType.APPROVED_LEAVE);\n\n        StaticHibernateUtil.commitTransaction();\n\n        CustomerPerformanceHistoryView customerPerformanceHistoryView = customerPersistence.numberOfMeetings(false,\n                client.getCustomerId());\n        Assert.assertEquals(2, customerPerformanceHistoryView.getMeetingsMissed().intValue());\n        StaticHibernateUtil.closeSession();\n    }\n\n    public void testLastLoanAmount() throws PersistenceException, AccountException {\n        Date startDate = new Date(System.currentTimeMillis());\n        center = createCenter();\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group\", CustomerStatus.GROUP_ACTIVE, center);\n        client = TestObjectFactory.createClient(\"Client\", CustomerStatus.CLIENT_ACTIVE, group);\n        LoanOfferingBO loanOffering = TestObjectFactory.createLoanOffering(startDate, center.getCustomerMeeting()\n                .getMeeting());\n        LoanBO loanBO = TestObjectFactory.createLoanAccount(\"42423142341\", client,\n                AccountState.LOAN_ACTIVE_IN_GOOD_STANDING, startDate, loanOffering);\n        StaticHibernateUtil.commitTransaction();\n        StaticHibernateUtil.closeSession();\n        account = (AccountBO) StaticHibernateUtil.getSessionTL().get(LoanBO.class, loanBO.getAccountId());\n        AccountStateEntity accountStateEntity = new AccountStateEntity(AccountState.LOAN_CLOSED_OBLIGATIONS_MET);\n        account.setUserContext(TestObjectFactory.getContext());\n        account.changeStatus(accountStateEntity.getId(), null, \"\");\n        TestObjectFactory.updateObject(account);\n        CustomerPersistence customerPersistence = new CustomerPersistence();\n        CustomerPerformanceHistoryView customerPerformanceHistoryView = customerPersistence.getLastLoanAmount(client\n                .getCustomerId());\n        Assert.assertEquals(\"300.0\", customerPerformanceHistoryView.getLastLoanAmount());\n    }\n\n    public void testFindBySystemId() throws Exception {\n        center = createCenter();\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group_Active_test\", CustomerStatus.GROUP_ACTIVE, center);\n        GroupBO groupBO = (GroupBO) customerPersistence.findBySystemId(group.getGlobalCustNum());\n        Assert.assertEquals(groupBO.getDisplayName(), group.getDisplayName());\n    }\n\n    public void testGetBySystemId() throws Exception {\n        center = createCenter();\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group_Active_test\", CustomerStatus.GROUP_ACTIVE, center);\n        GroupBO groupBO = (GroupBO) customerPersistence.findBySystemId(group.getGlobalCustNum(), group\n                .getCustomerLevel().getId());\n        Assert.assertEquals(groupBO.getDisplayName(), group.getDisplayName());\n    }\n\n    public void testOptionalCustomerStates() throws Exception {\n        Assert.assertEquals(Integer.valueOf(0).intValue(), customerPersistence.getCustomerStates(Short.valueOf(\"0\"))\n                .size());\n    }\n\n    public void testCustomerStatesInUse() throws Exception {\n        Assert.assertEquals(Integer.valueOf(14).intValue(), customerPersistence.getCustomerStates(Short.valueOf(\"1\"))\n                .size());\n    }\n\n    public void testGetCustomersWithUpdatedMeetings() throws Exception {\n        center = createCenter();\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group1\", CustomerStatus.GROUP_ACTIVE, center);\n        CustomerBOTestUtils.setUpdatedFlag(group.getCustomerMeeting(), YesNoFlag.YES.getValue());\n        TestObjectFactory.updateObject(group);\n        List<Integer> customerIds = customerPersistence.getCustomersWithUpdatedMeetings();\n        Assert.assertEquals(1, customerIds.size());\n\n    }\n\n    public void testRetrieveAllLoanAccountUnderCustomer() throws PersistenceException {\n        MeetingBO meeting = TestObjectFactory.createMeeting(TestObjectFactory.getTypicalMeeting());\n        center = createCenter(\"center\");\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group\", CustomerStatus.GROUP_ACTIVE, center);\n        CenterBO center1 = createCenter(\"center1\");\n        GroupBO group1 = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group1\", CustomerStatus.GROUP_ACTIVE, center1);\n        client = TestObjectFactory.createClient(\"client1\", CustomerStatus.CLIENT_ACTIVE, group);\n        ClientBO client2 = TestObjectFactory.createClient(\"client2\", CustomerStatus.CLIENT_ACTIVE, group);\n        ClientBO client3 = TestObjectFactory.createClient(\"client3\", CustomerStatus.CLIENT_ACTIVE, group1);\n        account = getLoanAccount(group, meeting, \"cdfggdfs\", \"1qdd\");\n        AccountBO account1 = getLoanAccount(client, meeting, \"fdbdhgsgh\", \"54hg\");\n        AccountBO account2 = getLoanAccount(client2, meeting, \"fasdfdsfasdf\", \"1qwe\");\n        AccountBO account3 = getLoanAccount(client3, meeting, \"fdsgdfgfd\", \"543g\");\n        AccountBO account4 = getLoanAccount(group1, meeting, \"fasdf23\", \"3fds\");\n        CustomerBOTestUtils.setCustomerStatus(client2, new CustomerStatusEntity(CustomerStatus.CLIENT_CLOSED));\n\n        TestObjectFactory.updateObject(client2);\n        client2 = TestObjectFactory.getClient(client2.getCustomerId());\n        CustomerBOTestUtils.setCustomerStatus(client3, new CustomerStatusEntity(CustomerStatus.CLIENT_CANCELLED));\n        TestObjectFactory.updateObject(client3);\n        client3 = TestObjectFactory.getClient(client3.getCustomerId());\n\n        List<AccountBO> loansForCenter = customerPersistence.retrieveAccountsUnderCustomer(center.getSearchId(), Short\n                .valueOf(\"3\"), Short.valueOf(\"1\"));\n        Assert.assertEquals(3, loansForCenter.size());\n        List<AccountBO> loansForGroup = customerPersistence.retrieveAccountsUnderCustomer(group.getSearchId(), Short\n                .valueOf(\"3\"), Short.valueOf(\"1\"));\n        Assert.assertEquals(3, loansForGroup.size());\n        List<AccountBO> loansForClient = customerPersistence.retrieveAccountsUnderCustomer(client.getSearchId(), Short\n                .valueOf(\"3\"), Short.valueOf(\"1\"));\n        Assert.assertEquals(1, loansForClient.size());\n\n        TestObjectFactory.cleanUp(account4);\n        TestObjectFactory.cleanUp(account3);\n        TestObjectFactory.cleanUp(account2);\n        TestObjectFactory.cleanUp(account1);\n        TestObjectFactory.cleanUp(client3);\n        TestObjectFactory.cleanUp(client2);\n        TestObjectFactory.cleanUp(group1);\n        TestObjectFactory.cleanUp(center1);\n    }\n\n    public void testRetrieveAllSavingsAccountUnderCustomer() throws Exception {\n        center = createCenter(\"new_center\");\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group\", CustomerStatus.GROUP_ACTIVE, center);\n        CenterBO center1 = createCenter(\"new_center1\");\n        GroupBO group1 = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group1\", CustomerStatus.GROUP_ACTIVE, center1);\n        client = TestObjectFactory.createClient(\"client1\", CustomerStatus.CLIENT_ACTIVE, group);\n        ClientBO client2 = TestObjectFactory.createClient(\"client2\", CustomerStatus.CLIENT_CLOSED, group);\n        ClientBO client3 = TestObjectFactory.createClient(\"client3\", CustomerStatus.CLIENT_CANCELLED, group1);\n        account = getSavingsAccount(center, \"Savings Prd1\", \"Abc1\");\n        AccountBO account1 = getSavingsAccount(client, \"Savings Prd2\", \"Abc2\");\n        AccountBO account2 = getSavingsAccount(client2, \"Savings Prd3\", \"Abc3\");\n        AccountBO account3 = getSavingsAccount(client3, \"Savings Prd4\", \"Abc4\");\n        AccountBO account4 = getSavingsAccount(group1, \"Savings Prd5\", \"Abc5\");\n        AccountBO account5 = getSavingsAccount(group, \"Savings Prd6\", \"Abc6\");\n        AccountBO account6 = getSavingsAccount(center1, \"Savings Prd7\", \"Abc7\");\n\n        List<AccountBO> savingsForCenter = customerPersistence.retrieveAccountsUnderCustomer(center.getSearchId(),\n                Short.valueOf(\"3\"), Short.valueOf(\"2\"));\n        Assert.assertEquals(4, savingsForCenter.size());\n        List<AccountBO> savingsForGroup = customerPersistence.retrieveAccountsUnderCustomer(group.getSearchId(), Short\n                .valueOf(\"3\"), Short.valueOf(\"2\"));\n        Assert.assertEquals(3, savingsForGroup.size());\n        List<AccountBO> savingsForClient = customerPersistence.retrieveAccountsUnderCustomer(client.getSearchId(),\n                Short.valueOf(\"3\"), Short.valueOf(\"2\"));\n        Assert.assertEquals(1, savingsForClient.size());\n\n        TestObjectFactory.cleanUp(account3);\n        TestObjectFactory.cleanUp(account2);\n        TestObjectFactory.cleanUp(account1);\n        TestObjectFactory.cleanUp(client3);\n        TestObjectFactory.cleanUp(client2);\n        TestObjectFactory.cleanUp(account4);\n        TestObjectFactory.cleanUp(account5);\n        TestObjectFactory.cleanUp(group1);\n        TestObjectFactory.cleanUp(account6);\n        TestObjectFactory.cleanUp(center1);\n    }\n\n    public void testGetAllChildrenForParent() throws NumberFormatException, PersistenceException {\n        center = createCenter(\"Center\");\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group\", CustomerStatus.GROUP_ACTIVE, center);\n        CenterBO center1 = createCenter(\"center11\");\n        GroupBO group1 = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group1\", CustomerStatus.GROUP_ACTIVE, center1);\n        client = TestObjectFactory.createClient(\"client1\", CustomerStatus.CLIENT_ACTIVE, group);\n        ClientBO client2 = TestObjectFactory.createClient(\"client2\", CustomerStatus.CLIENT_CLOSED, group);\n        ClientBO client3 = TestObjectFactory.createClient(\"client3\", CustomerStatus.CLIENT_CANCELLED, group1);\n\n        List<CustomerBO> customerList1 = customerPersistence.getAllChildrenForParent(center.getSearchId(), Short\n                .valueOf(\"3\"), CustomerLevel.CENTER.getValue());\n        Assert.assertEquals(2, customerList1.size());\n        List<CustomerBO> customerList2 = customerPersistence.getAllChildrenForParent(center.getSearchId(), Short\n                .valueOf(\"3\"), CustomerLevel.GROUP.getValue());\n        Assert.assertEquals(1, customerList2.size());\n\n        TestObjectFactory.cleanUp(client3);\n        TestObjectFactory.cleanUp(client2);\n        TestObjectFactory.cleanUp(group1);\n        TestObjectFactory.cleanUp(center1);\n    }\n\n    public void testGetChildrenForParent() throws NumberFormatException, SystemException, ApplicationException {\n        center = createCenter(\"center\");\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group\", CustomerStatus.GROUP_ACTIVE, center);\n        CenterBO center1 = createCenter(\"center1\");\n        GroupBO group1 = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group1\", CustomerStatus.GROUP_ACTIVE, center1);\n        client = TestObjectFactory.createClient(\"client1\", CustomerStatus.CLIENT_ACTIVE, group);\n        ClientBO client2 = TestObjectFactory.createClient(\"client2\", CustomerStatus.CLIENT_CLOSED, group);\n        ClientBO client3 = TestObjectFactory.createClient(\"client3\", CustomerStatus.CLIENT_CANCELLED, group1);\n        List<Integer> customerIds = customerPersistence.getChildrenForParent(center.getSearchId(), Short.valueOf(\"3\"));\n        Assert.assertEquals(3, customerIds.size());\n        CustomerBO customer = TestObjectFactory.getCustomer(customerIds.get(0));\n        Assert.assertEquals(\"Group\", customer.getDisplayName());\n        customer = TestObjectFactory.getCustomer(customerIds.get(1));\n        Assert.assertEquals(\"client1\", customer.getDisplayName());\n        customer = TestObjectFactory.getCustomer(customerIds.get(2));\n        Assert.assertEquals(\"client2\", customer.getDisplayName());\n\n        TestObjectFactory.cleanUp(client3);\n        TestObjectFactory.cleanUp(client2);\n        TestObjectFactory.cleanUp(group1);\n        TestObjectFactory.cleanUp(center1);\n    }\n\n    public void testGetCustomers() throws NumberFormatException, SystemException, ApplicationException {\n        center = createCenter(\"center\");\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group\", CustomerStatus.GROUP_ACTIVE, center);\n        CenterBO center1 = createCenter(\"center11\");\n        GroupBO group1 = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group1\", CustomerStatus.GROUP_ACTIVE, center1);\n        client = TestObjectFactory.createClient(\"client1\", CustomerStatus.CLIENT_ACTIVE, group);\n        ClientBO client2 = TestObjectFactory.createClient(\"client2\", CustomerStatus.CLIENT_CLOSED, group);\n        ClientBO client3 = TestObjectFactory.createClient(\"client3\", CustomerStatus.CLIENT_CANCELLED, group1);\n        List<Integer> customerIds = customerPersistence.getCustomers(CustomerLevel.CENTER.getValue());\n        Assert.assertEquals(2, customerIds.size());\n\n        TestObjectFactory.cleanUp(client3);\n        TestObjectFactory.cleanUp(client2);\n        TestObjectFactory.cleanUp(group1);\n        TestObjectFactory.cleanUp(center1);\n    }\n\n    public void testGetCustomerChecklist() throws NumberFormatException, SystemException, ApplicationException,\n            Exception {\n\n        center = createCenter(\"center\");\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group\", CustomerStatus.GROUP_ACTIVE, center);\n        client = TestObjectFactory.createClient(\"client1\", CustomerStatus.CLIENT_ACTIVE, group);\n        CustomerCheckListBO checklistCenter = TestObjectFactory.createCustomerChecklist(center.getCustomerLevel()\n                .getId(), center.getCustomerStatus().getId(), CheckListConstants.STATUS_ACTIVE);\n        CustomerCheckListBO checklistClient = TestObjectFactory.createCustomerChecklist(client.getCustomerLevel()\n                .getId(), client.getCustomerStatus().getId(), CheckListConstants.STATUS_INACTIVE);\n        CustomerCheckListBO checklistGroup = TestObjectFactory.createCustomerChecklist(\n                group.getCustomerLevel().getId(), group.getCustomerStatus().getId(), CheckListConstants.STATUS_ACTIVE);\n        StaticHibernateUtil.closeSession();\n        Assert.assertEquals(1, customerPersistence.getStatusChecklist(center.getCustomerStatus().getId(),\n                center.getCustomerLevel().getId()).size());\n        client = (ClientBO) StaticHibernateUtil.getSessionTL().get(ClientBO.class,\n                Integer.valueOf(client.getCustomerId()));\n        group = (GroupBO) StaticHibernateUtil.getSessionTL().get(GroupBO.class, Integer.valueOf(group.getCustomerId()));\n        center = (CenterBO) StaticHibernateUtil.getSessionTL().get(CenterBO.class,\n                Integer.valueOf(center.getCustomerId()));\n        checklistCenter = (CustomerCheckListBO) StaticHibernateUtil.getSessionTL().get(CheckListBO.class,\n                new Short(checklistCenter.getChecklistId()));\n        checklistClient = (CustomerCheckListBO) StaticHibernateUtil.getSessionTL().get(CheckListBO.class,\n                new Short(checklistClient.getChecklistId()));\n        checklistGroup = (CustomerCheckListBO) StaticHibernateUtil.getSessionTL().get(CheckListBO.class,\n                new Short(checklistGroup.getChecklistId()));\n        TestObjectFactory.cleanUp(checklistCenter);\n        TestObjectFactory.cleanUp(checklistClient);\n        TestObjectFactory.cleanUp(checklistGroup);\n\n    }\n\n    public void testRetrieveAllCustomerStatusList() throws NumberFormatException, SystemException, ApplicationException {\n        center = createCenter();\n        Assert.assertEquals(2, customerPersistence.retrieveAllCustomerStatusList(center.getCustomerLevel().getId())\n                .size());\n    }\n\n    public void testCustomerCountByOffice() throws Exception {\n        int count = customerPersistence.getCustomerCountForOffice(CustomerLevel.CENTER, Short.valueOf(\"3\"));\n        Assert.assertEquals(0, count);\n        center = createCenter();\n        count = customerPersistence.getCustomerCountForOffice(CustomerLevel.CENTER, Short.valueOf(\"3\"));\n        Assert.assertEquals(1, count);\n    }\n\n    public void testGetAllCustomerNotes() throws Exception {\n        center = createCenter();\n        center.addCustomerNotes(TestObjectFactory.getCustomerNote(\"Test Note\", center));\n        TestObjectFactory.updateObject(center);\n        Assert.assertEquals(1, customerPersistence.getAllCustomerNotes(center.getCustomerId()).getSize());\n        for (CustomerNoteEntity note : center.getCustomerNotes()) {\n            Assert.assertEquals(\"Test Note\", note.getComment());\n            Assert.assertEquals(center.getPersonnel().getPersonnelId(), note.getPersonnel().getPersonnelId());\n        }\n        center = (CenterBO) StaticHibernateUtil.getSessionTL().get(CenterBO.class,\n                Integer.valueOf(center.getCustomerId()));\n    }\n\n    public void testGetAllCustomerNotesWithZeroNotes() throws Exception {\n        center = createCenter();\n        Assert.assertEquals(0, customerPersistence.getAllCustomerNotes(center.getCustomerId()).getSize());\n        Assert.assertEquals(0, center.getCustomerNotes().size());\n    }\n\n    public void testGetFormedByPersonnel() throws NumberFormatException, SystemException, ApplicationException {\n        center = createCenter();\n        Assert.assertEquals(1, customerPersistence.getFormedByPersonnel(ClientConstants.LOAN_OFFICER_LEVEL,\n                center.getOffice().getOfficeId()).size());\n    }\n\n    public void testGetAllClosedAccounts() throws Exception {\n        getCustomer();\n        groupAccount.changeStatus(AccountState.LOAN_CANCELLED.getValue(), AccountStateFlag.LOAN_WITHDRAW.getValue(),\n                \"WITHDRAW LOAN ACCOUNT\");\n        clientAccount.changeStatus(AccountState.LOAN_CLOSED_WRITTEN_OFF.getValue(), null, \"WITHDRAW LOAN ACCOUNT\");\n        clientSavingsAccount.changeStatus(AccountState.SAVINGS_CANCELLED.getValue(), AccountStateFlag.SAVINGS_REJECTED\n                .getValue(), \"WITHDRAW LOAN ACCOUNT\");\n        TestObjectFactory.updateObject(groupAccount);\n        TestObjectFactory.updateObject(clientAccount);\n        TestObjectFactory.updateObject(clientSavingsAccount);\n        StaticHibernateUtil.commitTransaction();\n        Assert.assertEquals(1, customerPersistence.getAllClosedAccount(client.getCustomerId(),\n                AccountTypes.LOAN_ACCOUNT.getValue()).size());\n        Assert.assertEquals(1, customerPersistence.getAllClosedAccount(group.getCustomerId(),\n                AccountTypes.LOAN_ACCOUNT.getValue()).size());\n        Assert.assertEquals(1, customerPersistence.getAllClosedAccount(client.getCustomerId(),\n                AccountTypes.SAVINGS_ACCOUNT.getValue()).size());\n    }\n\n    public void testGetAllClosedAccountsWhenNoAccountsClosed() throws Exception {\n        getCustomer();\n        Assert.assertEquals(0, customerPersistence.getAllClosedAccount(client.getCustomerId(),\n                AccountTypes.LOAN_ACCOUNT.getValue()).size());\n        Assert.assertEquals(0, customerPersistence.getAllClosedAccount(group.getCustomerId(),\n                AccountTypes.LOAN_ACCOUNT.getValue()).size());\n        Assert.assertEquals(0, customerPersistence.getAllClosedAccount(client.getCustomerId(),\n                AccountTypes.SAVINGS_ACCOUNT.getValue()).size());\n    }\n\n    public void testGetLOForCustomer() throws PersistenceException {\n        createCustomers(CustomerStatus.GROUP_ACTIVE, CustomerStatus.CLIENT_ACTIVE);\n        Short LO = customerPersistence.getLoanOfficerForCustomer(center.getCustomerId());\n        Assert.assertEquals(center.getPersonnel().getPersonnelId(), LO);\n    }\n\n    public void testUpdateLOsForAllChildren() {\n        createCustomers(CustomerStatus.GROUP_ACTIVE, CustomerStatus.CLIENT_ACTIVE);\n        Assert.assertEquals(center.getPersonnel().getPersonnelId(), group.getPersonnel().getPersonnelId());\n        Assert.assertEquals(center.getPersonnel().getPersonnelId(), client.getPersonnel().getPersonnelId());\n        StaticHibernateUtil.startTransaction();\n        PersonnelBO newLO = TestObjectFactory.getPersonnel(Short.valueOf(\"2\"));\n        new CustomerPersistence().updateLOsForAllChildren(newLO.getPersonnelId(), center.getSearchId(), center\n                .getOffice().getOfficeId());\n        StaticHibernateUtil.commitTransaction();\n        StaticHibernateUtil.closeSession();\n        center = TestObjectFactory.getCenter(center.getCustomerId());\n        group = TestObjectFactory.getGroup(group.getCustomerId());\n        client = TestObjectFactory.getClient(client.getCustomerId());\n        Assert.assertEquals(newLO.getPersonnelId(), group.getPersonnel().getPersonnelId());\n        Assert.assertEquals(newLO.getPersonnelId(), client.getPersonnel().getPersonnelId());\n    }\n\n    public void testUpdateLOsForAllChildrenAccounts() throws Exception {\n        createCustomers(CustomerStatus.GROUP_ACTIVE, CustomerStatus.CLIENT_ACTIVE);\n        Assert.assertEquals(center.getPersonnel().getPersonnelId(), group.getPersonnel().getPersonnelId());\n        Assert.assertEquals(center.getPersonnel().getPersonnelId(), client.getPersonnel().getPersonnelId());\n        StaticHibernateUtil.startTransaction();\n        PersonnelBO newLO = TestObjectFactory.getPersonnel(Short.valueOf(\"2\"));\n        new CustomerPersistence().updateLOsForAllChildrenAccounts(newLO.getPersonnelId(), center.getSearchId(), center\n                .getOffice().getOfficeId());\n        StaticHibernateUtil.commitTransaction();\n        StaticHibernateUtil.closeSession();\n        client = TestObjectFactory.getClient(client.getCustomerId());\n        for (AccountBO account : client.getAccounts()) {\n            Assert.assertEquals(newLO.getPersonnelId(), account.getPersonnel().getPersonnelId());\n        }\n    }\n\n    public void testCustomerDeleteMeeting() throws Exception {\n        MeetingBO meeting = TestObjectFactory.createMeeting(TestObjectFactory.getTypicalMeeting());\n        client = TestObjectFactory.createClient(\"myClient\", meeting, CustomerStatus.CLIENT_PENDING);\n        StaticHibernateUtil.closeSession();\n        client = TestObjectFactory.getClient(client.getCustomerId());\n        customerPersistence.deleteCustomerMeeting(client);\n        CustomerBOTestUtils.setCustomerMeeting(client, null);\n        StaticHibernateUtil.commitTransaction();\n        StaticHibernateUtil.closeSession();\n        client = TestObjectFactory.getClient(client.getCustomerId());\n        Assert.assertNull(client.getCustomerMeeting());\n    }\n\n    public void testDeleteMeeting() throws Exception {\n        MeetingBO meeting = TestObjectFactory.createMeeting(TestObjectFactory.getTypicalMeeting());\n        StaticHibernateUtil.closeSession();\n        meeting = new MeetingPersistence().getMeeting(meeting.getMeetingId());\n\n        customerPersistence.deleteMeeting(meeting);\n        StaticHibernateUtil.commitTransaction();\n        StaticHibernateUtil.closeSession();\n\n        meeting = new MeetingPersistence().getMeeting(meeting.getMeetingId());\n        Assert.assertNull(meeting);\n    }\n\n    public void testSearchWithOfficeId() throws Exception {\n        createCustomers(CustomerStatus.GROUP_ACTIVE, CustomerStatus.CLIENT_ACTIVE);\n        StaticHibernateUtil.commitTransaction();\n        QueryResult queryResult = new CustomerPersistence().search(\"C\", Short.valueOf(\"3\"), Short.valueOf(\"1\"), Short\n                .valueOf(\"1\"));\n        Assert.assertNotNull(queryResult);\n        Assert.assertEquals(2, queryResult.getSize());\n        Assert.assertEquals(2, queryResult.get(0, 10).size());\n    }\n\n    public void testSearchWithoutOfficeId() throws Exception {\n        createCustomers(CustomerStatus.GROUP_ACTIVE, CustomerStatus.CLIENT_ACTIVE);\n        StaticHibernateUtil.commitTransaction();\n        QueryResult queryResult = new CustomerPersistence().search(\"C\", Short.valueOf(\"0\"), Short.valueOf(\"1\"), Short\n                .valueOf(\"1\"));\n        Assert.assertNotNull(queryResult);\n        Assert.assertEquals(2, queryResult.getSize());\n        Assert.assertEquals(2, queryResult.get(0, 10).size());\n    }\n\n    public void testSearchWithGlobalNo() throws Exception {\n        createCustomers(CustomerStatus.GROUP_ACTIVE, CustomerStatus.CLIENT_ACTIVE);\n        StaticHibernateUtil.commitTransaction();\n        QueryResult queryResult = new CustomerPersistence().search(group.getGlobalCustNum(), Short.valueOf(\"3\"), Short\n                .valueOf(\"1\"), Short.valueOf(\"1\"));\n        Assert.assertNotNull(queryResult);\n        Assert.assertEquals(1, queryResult.getSize());\n        Assert.assertEquals(1, queryResult.get(0, 10).size());\n\n    }\n\n    public void testSearchWithGovernmentId() throws Exception {\n        createCustomersWithGovernmentId(CustomerStatus.GROUP_ACTIVE, CustomerStatus.CLIENT_ACTIVE);\n        StaticHibernateUtil.commitTransaction();\n        QueryResult queryResult = new CustomerPersistence().search(\"76346793216\", Short.valueOf(\"3\"), Short\n                .valueOf(\"1\"), Short.valueOf(\"1\"));\n        Assert.assertNotNull(queryResult);\n        Assert.assertEquals(1, queryResult.getSize());\n        Assert.assertEquals(1, queryResult.get(0, 10).size());\n\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    public void testSearchWithCancelLoanAccounts() throws Exception {\n        groupAccount = getLoanAccount();\n        groupAccount.changeStatus(AccountState.LOAN_CANCELLED.getValue(), AccountStateFlag.LOAN_WITHDRAW.getValue(),\n                \"WITHDRAW LOAN ACCOUNT\");\n        TestObjectFactory.updateObject(groupAccount);\n        StaticHibernateUtil.commitTransaction();\n        StaticHibernateUtil.closeSession();\n        groupAccount = TestObjectFactory.getObject(LoanBO.class, groupAccount.getAccountId());\n        center = TestObjectFactory.getCustomer(center.getCustomerId());\n        group = TestObjectFactory.getCustomer(group.getCustomerId());\n        QueryResult queryResult = new CustomerPersistence().search(group.getGlobalCustNum(), Short.valueOf(\"3\"), Short\n                .valueOf(\"1\"), Short.valueOf(\"1\"));\n        Assert.assertNotNull(queryResult);\n        Assert.assertEquals(1, queryResult.getSize());\n        List results = queryResult.get(0, 10);\n        Assert.assertEquals(1, results.size());\n        CustomerSearch customerSearch = (CustomerSearch) results.get(0);\n        Assert.assertEquals(0, customerSearch.getLoanGlobalAccountNum().size());\n    }\n\n    public void testSearchWithAccountGlobalNo() throws Exception {\n        getCustomer();\n        StaticHibernateUtil.commitTransaction();\n        QueryResult queryResult = new CustomerPersistence().search(groupAccount.getGlobalAccountNum(), Short\n                .valueOf(\"3\"), Short.valueOf(\"1\"), Short.valueOf(\"1\"));\n        Assert.assertNotNull(queryResult);\n        Assert.assertEquals(1, queryResult.getSize());\n        Assert.assertEquals(1, queryResult.get(0, 10).size());\n\n    }\n\n    public void testSearchGropAndClient() throws Exception {\n        createCustomers(CustomerStatus.GROUP_ACTIVE, CustomerStatus.CLIENT_ACTIVE);\n        StaticHibernateUtil.commitTransaction();\n        QueryResult queryResult = new CustomerPersistence().searchGroupClient(\"C\", Short.valueOf(\"1\"));\n        Assert.assertNotNull(queryResult);\n        Assert.assertEquals(1, queryResult.getSize());\n        Assert.assertEquals(1, queryResult.get(0, 10).size());\n\n    }\n\n    public void testSearchGropAndClientForLoNoResults() throws Exception {\n        meeting = TestObjectFactory.createMeeting(TestObjectFactory.getTypicalMeeting());\n        center = TestObjectFactory.createWeeklyFeeCenter(\"Center\", meeting, Short.valueOf(\"3\"), Short.valueOf(\"3\"));\n        group = TestObjectFactory.createGroupUnderCenter(\"Group\", CustomerStatus.GROUP_ACTIVE, \"1234\", true,\n                new java.util.Date(), null, null, null, Short.valueOf(\"3\"), center);\n        StaticHibernateUtil.commitTransaction();\n        QueryResult queryResult = new CustomerPersistence().searchGroupClient(\"C\", Short.valueOf(\"3\"));\n        Assert.assertNotNull(queryResult);\n        Assert.assertEquals(0, queryResult.getSize());\n        Assert.assertEquals(0, queryResult.get(0, 10).size());\n\n    }\n\n    public void testSearchGropAndClientForLo() throws Exception {\n        meeting = TestObjectFactory.createMeeting(TestObjectFactory.getTypicalMeeting());\n        center = TestObjectFactory.createWeeklyFeeCenter(\"Center\", meeting, Short.valueOf(\"3\"), Short.valueOf(\"3\"));\n        group = TestObjectFactory.createGroupUnderCenter(\"Group\", CustomerStatus.GROUP_ACTIVE, \"1234\", true,\n                new java.util.Date(), null, null, null, Short.valueOf(\"3\"), center);\n        StaticHibernateUtil.commitTransaction();\n        QueryResult queryResult = new CustomerPersistence().searchGroupClient(\"G\", Short.valueOf(\"3\"));\n        Assert.assertNotNull(queryResult);\n        Assert.assertEquals(1, queryResult.getSize());\n        Assert.assertEquals(1, queryResult.get(0, 10).size());\n\n    }\n\n    public void testSearchCustForSavings() throws Exception {\n        createCustomers(CustomerStatus.GROUP_ACTIVE, CustomerStatus.CLIENT_ACTIVE);\n        StaticHibernateUtil.commitTransaction();\n        QueryResult queryResult = new CustomerPersistence().searchCustForSavings(\"C\", Short.valueOf(\"1\"));\n        Assert.assertNotNull(queryResult);\n        Assert.assertEquals(2, queryResult.getSize());\n        Assert.assertEquals(2, queryResult.get(0, 10).size());\n\n    }\n\n    public void testGetCustomerAccountsForFee() throws Exception {\n        groupAccount = getLoanAccount();\n        FeeBO periodicFee = TestObjectFactory.createPeriodicAmountFee(\"ClientPeridoicFee\", FeeCategory.CENTER, \"5\",\n                RecurrenceType.WEEKLY, Short.valueOf(\"1\"));\n        AccountFeesEntity accountFee = new AccountFeesEntity(center.getCustomerAccount(), periodicFee,\n                ((AmountFeeBO) periodicFee).getFeeAmount().getAmountDoubleValue());\n        CustomerAccountBO customerAccount = center.getCustomerAccount();\n        AccountTestUtils.addAccountFees(accountFee, customerAccount);\n        TestObjectFactory.updateObject(customerAccount);\n        StaticHibernateUtil.commitTransaction();\n        StaticHibernateUtil.closeSession();\n\n        // check for the account fee\n        List<AccountBO> accountList = new CustomerPersistence().getCustomerAccountsForFee(periodicFee.getFeeId());\n        Assert.assertNotNull(accountList);\n        Assert.assertEquals(1, accountList.size());\n        Assert.assertTrue(accountList.get(0) instanceof CustomerAccountBO);\n        // get all objects again\n        groupAccount = TestObjectFactory.getObject(LoanBO.class, groupAccount.getAccountId());\n        group = TestObjectFactory.getCustomer(group.getCustomerId());\n        center = TestObjectFactory.getCustomer(center.getCustomerId());\n    }\n\n    public void testRetrieveCustomerAccountActionDetails() throws Exception {\n        center = createCenter();\n        Assert.assertNotNull(center.getCustomerAccount());\n        List<AccountActionDateEntity> actionDates = new CustomerPersistence().retrieveCustomerAccountActionDetails(\n                center.getCustomerAccount().getAccountId(), new java.sql.Date(System.currentTimeMillis()));\n        Assert.assertEquals(\"The size of the due insallments is \", actionDates.size(), 1);\n    }\n\n    public void testGetActiveCentersUnderUser() throws Exception {\n        MeetingBO meeting = TestObjectFactory.createMeeting(TestObjectFactory.getTypicalMeeting());\n        center = TestObjectFactory.createWeeklyFeeCenter(\"center\", meeting, Short.valueOf(\"1\"), Short.valueOf(\"1\"));\n        PersonnelBO personnel = TestObjectFactory.getPersonnel(Short.valueOf(\"1\"));\n        List<CustomerBO> customers = new CustomerPersistence().getActiveCentersUnderUser(personnel);\n        Assert.assertNotNull(customers);\n        Assert.assertEquals(1, customers.size());\n    }\n\n    public void testgetGroupsUnderUser() throws Exception {\n        MeetingBO meeting = TestObjectFactory.createMeeting(TestObjectFactory.getTypicalMeeting());\n        center = TestObjectFactory.createWeeklyFeeCenter(\"center\", meeting, Short.valueOf(\"1\"), Short.valueOf(\"1\"));\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group\", CustomerStatus.GROUP_ACTIVE, center);\n        group2 = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group33\", CustomerStatus.GROUP_CANCELLED, center);\n        PersonnelBO personnel = TestObjectFactory.getPersonnel(Short.valueOf(\"1\"));\n        List<CustomerBO> customers = new CustomerPersistence().getGroupsUnderUser(personnel);\n        Assert.assertNotNull(customers);\n        Assert.assertEquals(1, customers.size());\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    public void testSearchForActiveInBadStandingLoanAccount() throws Exception {\n        groupAccount = getLoanAccount();\n        groupAccount.changeStatus(AccountState.LOAN_ACTIVE_IN_BAD_STANDING.getValue(), null, \"Changing to badStanding\");\n        TestObjectFactory.updateObject(groupAccount);\n        StaticHibernateUtil.closeSession();\n        groupAccount = TestObjectFactory.getObject(LoanBO.class, groupAccount.getAccountId());\n        center = TestObjectFactory.getCustomer(center.getCustomerId());\n        group = TestObjectFactory.getCustomer(group.getCustomerId());\n        QueryResult queryResult = new CustomerPersistence().search(group.getGlobalCustNum(), Short.valueOf(\"3\"), Short\n                .valueOf(\"1\"), Short.valueOf(\"1\"));\n        Assert.assertNotNull(queryResult);\n        Assert.assertEquals(1, queryResult.getSize());\n        List results = queryResult.get(0, 10);\n        Assert.assertEquals(1, results.size());\n        CustomerSearch customerSearch = (CustomerSearch) results.get(0);\n        Assert.assertEquals(1, customerSearch.getLoanGlobalAccountNum().size());\n    }\n\n    public void testGetCustomersByLevelId() throws Exception {\n        createCustomers(CustomerStatus.GROUP_ACTIVE, CustomerStatus.CLIENT_ACTIVE);\n        StaticHibernateUtil.commitTransaction();\n        List<CustomerBO> client = new CustomerPersistence().getCustomersByLevelId(Short.parseShort(\"1\"));\n        Assert.assertNotNull(client);\n        Assert.assertEquals(1, client.size());\n\n        List<CustomerBO> group = new CustomerPersistence().getCustomersByLevelId(Short.parseShort(\"2\"));\n        Assert.assertNotNull(group);\n        Assert.assertEquals(1, group.size());\n\n        List<CustomerBO> center = new CustomerPersistence().getCustomersByLevelId(Short.parseShort(\"3\"));\n        Assert.assertNotNull(center);\n        Assert.assertEquals(1, center.size());\n    }\n\n    public void testFindCustomerWithNoAssocationsLoadedReturnsActiveCenter() throws Exception {\n\n        meeting = TestObjectFactory.createMeeting(TestObjectFactory.getNewMeetingForToday(WEEKLY,\n                EVERY_WEEK, CUSTOMER_MEETING));\n        center = TestObjectFactory.createWeeklyFeeCenter(\"Active Center\", meeting);\n\n        verifyCustomerLoaded(center.getCustomerId(), center.getDisplayName());\n\n    }\n\n    public void testFindCustomerWithNoAssocationsLoadedDoesntReturnInactiveCenter() throws Exception {\n\n        meeting = TestObjectFactory.createMeeting(TestObjectFactory.getNewMeetingForToday(WEEKLY,\n                EVERY_WEEK, CUSTOMER_MEETING));\n        center = TestObjectFactory.createWeeklyFeeCenter(\"Inactive Center\", meeting);\n        center.changeStatus(CustomerStatus.CENTER_INACTIVE, CustomerStatusFlag.GROUP_CANCEL_BLACKLISTED, \"Made Inactive\");\n\n        StaticHibernateUtil.commitTransaction();\n        StaticHibernateUtil.closeSession();\n        center = (CenterBO) StaticHibernateUtil.getSessionTL().get(CenterBO.class, center.getCustomerId());\n        verifyCustomerNotLoaded(center.getCustomerId(), center.getDisplayName());\n    }\n\n\n    public void testFindCustomerWithNoAssocationsLoadedReturnsActiveGroup() throws Exception {\n\n        meeting = TestObjectFactory.createMeeting(TestObjectFactory.getNewMeetingForToday(WEEKLY,\n                EVERY_WEEK, CUSTOMER_MEETING));\n        center = TestObjectFactory.createWeeklyFeeCenter(\"Active Center\", meeting);\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Active Group\", CustomerStatus.GROUP_ACTIVE,\n                center);\n\n        verifyCustomerLoaded(group.getCustomerId(), group.getDisplayName());\n    }\n\n    public void testFindCustomerWithNoAssocationsLoadedReturnsHoldGroup() throws Exception {\n\n        meeting = TestObjectFactory.createMeeting(TestObjectFactory.getNewMeetingForToday(WEEKLY,\n                EVERY_WEEK, CUSTOMER_MEETING));\n        center = TestObjectFactory.createWeeklyFeeCenter(\"Active Center\", meeting);\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Hold Group\", CustomerStatus.GROUP_HOLD,\n                center);\n\n        verifyCustomerLoaded(group.getCustomerId(), group.getDisplayName());\n    }\n\n    public void testFindCustomerWithNoAssocationsLoadedDoesntReturnClosedGroup() throws Exception {\n\n        meeting = TestObjectFactory.createMeeting(TestObjectFactory.getNewMeetingForToday(WEEKLY,\n                EVERY_WEEK, CUSTOMER_MEETING));\n        center = TestObjectFactory.createWeeklyFeeCenter(\"Active Center\", meeting);\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Closed Group\", CustomerStatus.GROUP_CLOSED,\n                center);\n\n        verifyCustomerNotLoaded(group.getCustomerId(), group.getDisplayName());\n    }\n\n    public void testFindCustomerWithNoAssocationsLoadedReturnsActiveClient() throws Exception {\n\n        meeting = TestObjectFactory.createMeeting(TestObjectFactory.getNewMeetingForToday(WEEKLY,\n                EVERY_WEEK, CUSTOMER_MEETING));\n        center = TestObjectFactory.createWeeklyFeeCenter(\"Active Center\", meeting);\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Active Group\", CustomerStatus.GROUP_ACTIVE,\n                center);\n        client = TestObjectFactory.createClient(\"Active Client\", CustomerStatus.CLIENT_ACTIVE, group);\n\n        verifyCustomerLoaded(client.getCustomerId(), client.getDisplayName());\n    }\n\n    public void testFindCustomerWithNoAssocationsLoadedReturnsHoldClient() throws Exception {\n\n        meeting = TestObjectFactory.createMeeting(TestObjectFactory.getNewMeetingForToday(WEEKLY,\n                EVERY_WEEK, CUSTOMER_MEETING));\n        center = TestObjectFactory.createWeeklyFeeCenter(\"Active Center\", meeting);\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Active Group\", CustomerStatus.GROUP_ACTIVE,\n                center);\n        client = TestObjectFactory.createClient(\"Hold Client\", CustomerStatus.CLIENT_HOLD, group);\n\n        verifyCustomerLoaded(client.getCustomerId(), client.getDisplayName());\n    }\n\n    public void testFindCustomerWithNoAssocationsLoadedDoesntReturnClosedClient() throws Exception {\n\n        meeting = TestObjectFactory.createMeeting(TestObjectFactory.getNewMeetingForToday(WEEKLY,\n                EVERY_WEEK, CUSTOMER_MEETING));\n        center = TestObjectFactory.createWeeklyFeeCenter(\"Active Center\", meeting);\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Active Group\", CustomerStatus.GROUP_ACTIVE,\n                center);\n        client = TestObjectFactory.createClient(\"Closed Client\", CustomerStatus.CLIENT_CLOSED, group);\n\n        verifyCustomerNotLoaded(client.getCustomerId(), client.getDisplayName());\n    }\n\n\n    private void verifyCustomerLoaded(Integer customerId, String customerName) {\n\n        CollectionSheetCustomerDto collectionSheetCustomerDto = customerPersistence\n        .findCustomerWithNoAssocationsLoaded(customerId);\n\n        Assert.assertNotNull(customerName + \" was not returned\", collectionSheetCustomerDto);\n        Assert.assertEquals(collectionSheetCustomerDto.getCustomerId(), customerId);\n    }\n\n    private void verifyCustomerNotLoaded(Integer customerId, String customerName) {\n\n        CollectionSheetCustomerDto collectionSheetCustomerDto = customerPersistence\n        .findCustomerWithNoAssocationsLoaded(customerId);\n\n        Assert.assertNull(customerName + \" was returned\", collectionSheetCustomerDto);\n    }\n\n\n    private AccountBO getSavingsAccount(final CustomerBO customer, final String prdOfferingname, final String shortName)\n            throws Exception {\n        Date startDate = new Date(System.currentTimeMillis());\n        SavingsOfferingBO savingsOffering = TestObjectFactory.createSavingsProduct(prdOfferingname, shortName,\n                startDate, RecommendedAmountUnit.COMPLETE_GROUP);\n        return TestObjectFactory.createSavingsAccount(\"432434\", customer, Short.valueOf(\"16\"), startDate,\n                savingsOffering);\n    }\n\n    private void getCustomer() throws Exception {\n        Date startDate = new Date(System.currentTimeMillis());\n\n        MeetingBO meeting = TestObjectFactory.createMeeting(TestObjectFactory.getTypicalMeeting());\n        center = TestObjectFactory.createWeeklyFeeCenter(\"Center\", meeting);\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group\", CustomerStatus.GROUP_ACTIVE, center);\n        client = TestObjectFactory.createClient(\"Client\", CustomerStatus.CLIENT_ACTIVE, group);\n        LoanOfferingBO loanOffering1 = TestObjectFactory.createLoanOffering(\"Loanwer\", \"43fs\", startDate, meeting);\n        LoanOfferingBO loanOffering2 = TestObjectFactory.createLoanOffering(\"Loancd123\", \"vfr\", startDate, meeting);\n        groupAccount = TestObjectFactory.createLoanAccount(\"42423142341\", group,\n                AccountState.LOAN_ACTIVE_IN_GOOD_STANDING, startDate, loanOffering1);\n        clientAccount = TestObjectFactory.createLoanAccount(\"3243\", client, AccountState.LOAN_ACTIVE_IN_GOOD_STANDING,\n                startDate, loanOffering2);\n        MeetingBO meetingIntCalc = TestObjectFactory.createMeeting(TestObjectFactory.getTypicalMeeting());\n        MeetingBO meetingIntPost = TestObjectFactory.createMeeting(TestObjectFactory.getTypicalMeeting());\n        SavingsOfferingBO savingsOffering = TestObjectFactory.createSavingsProduct(\"SavingPrd12\", \"abc1\", startDate,\n                RecommendedAmountUnit.COMPLETE_GROUP, meetingIntCalc, meetingIntPost);\n        SavingsOfferingBO savingsOffering1 = TestObjectFactory.createSavingsProduct(\"SavingPrd11\", \"abc2\", startDate,\n                RecommendedAmountUnit.COMPLETE_GROUP, meetingIntCalc, meetingIntPost);\n        centerSavingsAccount = TestObjectFactory.createSavingsAccount(\"432434\", center, Short.valueOf(\"16\"), startDate,\n                savingsOffering);\n        clientSavingsAccount = TestObjectFactory.createSavingsAccount(\"432434\", client, Short.valueOf(\"16\"), startDate,\n                savingsOffering1);\n    }\n\n    private void createCustomers(final CustomerStatus groupStatus, final CustomerStatus clientStatus) {\n        meeting = TestObjectFactory.createMeeting(TestObjectFactory.getTypicalMeeting());\n        center = TestObjectFactory.createWeeklyFeeCenter(\"Center\", meeting);\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group\", groupStatus, center);\n        client = TestObjectFactory.createClient(\"Client\", clientStatus, group);\n    }\n\n    private void createCustomersWithGovernmentId(final CustomerStatus groupStatus, final CustomerStatus clientStatus) {\n        meeting = TestObjectFactory.createMeeting(TestObjectFactory.getTypicalMeeting());\n        center = TestObjectFactory.createWeeklyFeeCenter(\"Center\", meeting);\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group\", groupStatus, center);\n        client = TestObjectFactory.createClient(\"Client\", clientStatus, group, TestObjectFactory.getFees(), \"76346793216\", new java.util.Date(1222333444000L));\n    }\n\n    private static java.util.Date getMeetingDates(final MeetingBO meeting) {\n        List<java.util.Date> dates = new ArrayList<java.util.Date>();\n        try {\n            dates = meeting.getAllDates(new java.util.Date(System.currentTimeMillis()));\n        } catch (MeetingException e) {\n            e.printStackTrace();\n        }\n        return dates.get(dates.size() - 1);\n    }\n\n    private CenterBO createCenter() {\n        return createCenter(\"Center_Active_test\");\n    }\n\n    private CenterBO createCenter(final String name) {\n        MeetingBO meeting = TestObjectFactory.createMeeting(TestObjectFactory.getNewMeetingForToday(WEEKLY, EVERY_WEEK,\n                CUSTOMER_MEETING));\n        return TestObjectFactory.createWeeklyFeeCenter(name, meeting);\n    }\n\n    private LoanBO getLoanAccount() {\n        Date startDate = new Date(System.currentTimeMillis());\n        MeetingBO meeting = TestObjectFactory.createMeeting(TestObjectFactory.getNewMeetingForToday(WEEKLY, EVERY_WEEK,\n                CUSTOMER_MEETING));\n        center = TestObjectFactory.createWeeklyFeeCenter(\"Center\", meeting);\n        group = TestObjectFactory.createWeeklyFeeGroupUnderCenter(\"Group\", CustomerStatus.GROUP_ACTIVE, center);\n        LoanOfferingBO loanOffering = TestObjectFactory.createLoanOffering(startDate, meeting);\n        return TestObjectFactory.createLoanAccount(\"42423142341\", group, AccountState.LOAN_ACTIVE_IN_GOOD_STANDING,\n                startDate, loanOffering);\n    }\n\n    private AccountBO getLoanAccount(final CustomerBO group, final MeetingBO meeting, final String offeringName,\n            final String shortName) {\n        Date startDate = new Date(System.currentTimeMillis());\n        LoanOfferingBO loanOffering = TestObjectFactory.createLoanOffering(offeringName, shortName, startDate, meeting);\n        return TestObjectFactory.createLoanAccount(\"42423142341\", group, AccountState.LOAN_ACTIVE_IN_GOOD_STANDING,\n                startDate, loanOffering);\n\n    }\n\n    private AccountBO getLoanAccount(final CustomerBO group, final MeetingBO meeting, final String offeringName,\n            final String shortName, MifosCurrency currency) {\n        Date startDate = new Date(System.currentTimeMillis());\n        LoanOfferingBO loanOffering = TestObjectFactory.createLoanOffering(offeringName, shortName, startDate, meeting, currency);\n        return TestObjectFactory.createLoanAccount(\"42423142341\", group, AccountState.LOAN_ACTIVE_IN_GOOD_STANDING,\n                startDate, loanOffering);\n\n    }\n\n\n    private AccountBO getLoanAccountInActiveBadStanding(final CustomerBO group, final MeetingBO meeting,\n            final String offeringName, final String shortName) {\n        Date startDate = new Date(System.currentTimeMillis());\n        LoanOfferingBO loanOffering = TestObjectFactory.createLoanOffering(offeringName, shortName, startDate, meeting);\n        return TestObjectFactory.createLoanAccount(\"42423141111\", group, AccountState.LOAN_ACTIVE_IN_BAD_STANDING,\n                startDate, loanOffering);\n\n    }\n}\n","repo_name":"mifos/1.5.x","path":"application/src/test/java/org/mifos/customers/persistence/CustomerPersistenceIntegrationTest.java","language":"Java","license":"apache-2.0","size":73142},"truncated_cells":[]},{"row_idx":68,"row":{"code":"/**\n*\n* @author Alex Karpov (mailto:karpov_aleksey@mail.ru)\n* @version $Id$\n* @since 0.1\n*/\npackage ru.job4j.max;","repo_name":"AlekseyKarpov/akarpov","path":"chapter_001/src/test/java/ru/job4j/max/package-info.java","language":"Java","license":"apache-2.0","size":113},"truncated_cells":[]},{"row_idx":69,"row":{"code":"package com.capgemini.resilience.employer.service;\n\npublic interface ErrorSimulationService {\n\n    void generateErrorDependingOnErrorPossibility();\n}\n","repo_name":"microservices-summit-2016/resilience-demo","path":"employer-service/src/main/java/com/capgemini/resilience/employer/service/ErrorSimulationService.java","language":"Java","license":"apache-2.0","size":150},"truncated_cells":[]},{"row_idx":70,"row":{"code":"﻿using UnityEngine;\nusing System.Collections;\n\npublic class blockGenerator : MonoBehaviour {\n\t\n\tpublic int spawnRate = 1;\n\tprivate float timeSinceLastSpawn = 0;\n\t\n\tpublic GameObject oneCube;\n\n\tpublic int count; \n\t// Use this for initialization\n\tvoid Start () {\n\t\t//Debug.Log(\"ran cube creator\");\n\t\tcount = 0; \n\t}\n\t\n\t// Update is called once per frame\n\tvoid Update () {\n\t\t\n\t\t//timeSinceLastSpawn += Time.realtimeSinceStartup;\n\t\t//Debug.Log(\"running cube creator\" + timeSinceLastSpawn );\n\t\t// if ( timeSinceLastSpawn > spawnRate )\n\t\t//  {\n\t\t//Clone the cubes and randomly place them\n\t\tcount = count + 1; \n\t\tif (count.Equals(50)) {\n\t\t\tGameObject newCube = (GameObject)GameObject.Instantiate (oneCube);\n\t\t\n\t\t\tnewCube.transform.position = new Vector3 (0, 0, 20.0f);\n\t\t\n\t\t\tnewCube.transform.Translate (Random.Range (-8, 8), Random.Range (0, 8), 1.0f);\n\t\t\ttimeSinceLastSpawn = 0;\n\t\t\t//Debug.Log(\"cube created\");\n\t\t\t// }\n\t\t\tcount = 0; \n\t\t}\n\t}\n}","repo_name":"josejlm2/HackTx2014","path":"Assets/Resources/Scripts/blockGenerator.cs","language":"C#","license":"apache-2.0","size":938},"truncated_cells":[]},{"row_idx":71,"row":{"code":"﻿// -----------------------------------------------------------------------\n//  <copyright file=\"Health.cs\" company=\"PlayFab Inc\">\n//    Copyright 2015 PlayFab Inc.\n//\n//    Licensed under the Apache License, Version 2.0 (the \"License\");\n//    you may not use this file except in compliance with the License.\n//    You may obtain a copy of the License at\n//\n//        http://www.apache.org/licenses/LICENSE-2.0\n//\n//    Unless required by applicable law or agreed to in writing, software\n//    distributed under the License is distributed on an \"AS IS\" BASIS,\n//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//    See the License for the specific language governing permissions and\n//    limitations under the License.\n//  </copyright>\n// -----------------------------------------------------------------------\n\nusing System.Threading;\nusing System.Threading.Tasks;\n\nnamespace Consul\n{\n    public interface IHealthEndpoint\n    {\n        Task<QueryResult<HealthCheck[]>> Checks(string service, CancellationToken ct = default(CancellationToken));\n        Task<QueryResult<HealthCheck[]>> Checks(string service, QueryOptions q, CancellationToken ct = default(CancellationToken));\n        Task<QueryResult<HealthCheck[]>> Node(string node, CancellationToken ct = default(CancellationToken));\n        Task<QueryResult<HealthCheck[]>> Node(string node, QueryOptions q, CancellationToken ct = default(CancellationToken));\n        Task<QueryResult<ServiceEntry[]>> Service(string service, CancellationToken ct = default(CancellationToken));\n        Task<QueryResult<ServiceEntry[]>> Service(string service, string tag, CancellationToken ct = default(CancellationToken));\n        Task<QueryResult<ServiceEntry[]>> Service(string service, string tag, bool passingOnly, CancellationToken ct = default(CancellationToken));\n        Task<QueryResult<ServiceEntry[]>> Service(string service, string tag, bool passingOnly, QueryOptions q, CancellationToken ct = default(CancellationToken));\n        Task<QueryResult<HealthCheck[]>> State(HealthStatus status, CancellationToken ct = default(CancellationToken));\n        Task<QueryResult<HealthCheck[]>> State(HealthStatus status, QueryOptions q, CancellationToken ct = default(CancellationToken));\n    }\n}","repo_name":"PlayFab/consuldotnet","path":"Consul/Interfaces/IHealthEndpoint.cs","language":"C#","license":"apache-2.0","size":2271},"truncated_cells":[]},{"row_idx":72,"row":{"code":"////////////////////////////////////////////////////////////////////////////////\n/// DISCLAIMER\n///\n/// Copyright 2014-2016 ArangoDB GmbH, Cologne, Germany\n/// Copyright 2004-2014 triAGENS GmbH, Cologne, Germany\n///\n/// Licensed under the Apache License, Version 2.0 (the \"License\");\n/// you may not use this file except in compliance with the License.\n/// You may obtain a copy of the License at\n///\n///     http://www.apache.org/licenses/LICENSE-2.0\n///\n/// Unless required by applicable law or agreed to in writing, software\n/// distributed under the License is distributed on an \"AS IS\" BASIS,\n/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n/// See the License for the specific language governing permissions and\n/// limitations under the License.\n///\n/// Copyright holder is ArangoDB GmbH, Cologne, Germany\n///\n/// @author Dr. Frank Celler\n////////////////////////////////////////////////////////////////////////////////\n\n#include \"RestHandler.h\"\n\n#include \"Basics/StringUtils.h\"\n#include \"Dispatcher/Dispatcher.h\"\n#include \"Logger/Logger.h\"\n#include \"Rest/GeneralRequest.h\"\n\nusing namespace arangodb;\nusing namespace arangodb::basics;\nusing namespace arangodb::rest;\n\nnamespace {\nstd::atomic_uint_fast64_t NEXT_HANDLER_ID(\n    static_cast<uint64_t>(TRI_microtime() * 100000.0));\n}\n\nRestHandler::RestHandler(GeneralRequest* request, GeneralResponse* response)\n    : _handlerId(NEXT_HANDLER_ID.fetch_add(1, std::memory_order_seq_cst)),\n      _taskId(0),\n      _request(request),\n      _response(response) {}\n\nRestHandler::~RestHandler() {\n  delete _request;\n  delete _response;\n}\n\nvoid RestHandler::setTaskId(uint64_t id, EventLoop loop) {\n  _taskId = id;\n  _loop = loop;\n}\n\nRestHandler::status RestHandler::executeFull() {\n  RestHandler::status result = status::FAILED;\n\n  requestStatisticsAgentSetRequestStart();\n\n#ifdef USE_DEV_TIMERS\n  TRI_request_statistics_t::STATS = _statistics;\n#endif\n\n  try {\n    prepareExecute();\n\n    try {\n      result = execute();\n    } catch (Exception const& ex) {\n      requestStatisticsAgentSetExecuteError();\n      handleError(ex);\n    } catch (std::bad_alloc const& ex) {\n      requestStatisticsAgentSetExecuteError();\n      Exception err(TRI_ERROR_OUT_OF_MEMORY, ex.what(), __FILE__, __LINE__);\n      handleError(err);\n    } catch (std::exception const& ex) {\n      requestStatisticsAgentSetExecuteError();\n      Exception err(TRI_ERROR_INTERNAL, ex.what(), __FILE__, __LINE__);\n      handleError(err);\n    } catch (...) {\n      requestStatisticsAgentSetExecuteError();\n      Exception err(TRI_ERROR_INTERNAL, __FILE__, __LINE__);\n      handleError(err);\n    }\n\n    finalizeExecute();\n\n    if (result != status::ASYNC && _response == nullptr) {\n      Exception err(TRI_ERROR_INTERNAL, \"no response received from handler\",\n                    __FILE__, __LINE__);\n\n      handleError(err);\n    }\n  } catch (Exception const& ex) {\n    result = status::FAILED;\n    requestStatisticsAgentSetExecuteError();\n    LOG(ERR) << \"caught exception: \" << DIAGNOSTIC_INFORMATION(ex);\n  } catch (std::exception const& ex) {\n    result = status::FAILED;\n    requestStatisticsAgentSetExecuteError();\n    LOG(ERR) << \"caught exception: \" << ex.what();\n  } catch (...) {\n    result = status::FAILED;\n    requestStatisticsAgentSetExecuteError();\n    LOG(ERR) << \"caught exception\";\n  }\n\n  requestStatisticsAgentSetRequestEnd();\n\n#ifdef USE_DEV_TIMERS\n  TRI_request_statistics_t::STATS = nullptr;\n#endif\n\n  return result;\n}\n\nGeneralRequest* RestHandler::stealRequest() {\n  GeneralRequest* tmp = _request;\n  _request = nullptr;\n  return tmp;\n}\n\nGeneralResponse* RestHandler::stealResponse() {\n  GeneralResponse* tmp = _response;\n  _response = nullptr;\n  return tmp;\n}\n\nvoid RestHandler::setResponseCode(GeneralResponse::ResponseCode code) {\n  TRI_ASSERT(_response != nullptr);\n  _response->reset(code);\n}\n","repo_name":"m0ppers/arangodb","path":"arangod/GeneralServer/RestHandler.cpp","language":"C++","license":"apache-2.0","size":3855},"truncated_cells":[]},{"row_idx":73,"row":{"code":"package com.box.boxjavalibv2.responseparsers;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\n\nimport junit.framework.Assert;\n\nimport org.apache.commons.io.IOUtils;\nimport org.apache.http.Header;\nimport org.apache.http.HttpEntity;\nimport org.apache.http.HttpResponse;\nimport org.apache.http.entity.StringEntity;\nimport org.apache.http.message.BasicHeader;\nimport org.apache.http.message.BasicHttpResponse;\nimport org.easymock.EasyMock;\nimport org.junit.Before;\nimport org.junit.Test;\n\nimport com.box.boxjavalibv2.dao.BoxPreview;\nimport com.box.restclientv2.exceptions.BoxRestException;\nimport com.box.restclientv2.responses.DefaultBoxResponse;\n\npublic class PreviewResponseParserTest {\n\n    private final static String PREVIEW_MOCK_CONTENT = \"arbitrary string\";\n    private final static String LINK_VALUE = \"<https://api.box.com/2.0/files/5000369410/preview.png?page=%d>; rel=\\\"first\\\", <https://api.box.com/2.0/files/5000369410/preview.png?page=%d>; rel=\\\"last\\\"\";\n    private final static String LINK_NAME = \"Link\";\n    private final static int firstPage = 1;\n    private final static int lastPage = 2;\n    private final static double length = 213;\n\n    private BoxPreview preview;\n    private DefaultBoxResponse boxResponse;\n    private HttpResponse response;\n    private HttpEntity entity;\n    private InputStream inputStream;\n    private Header header;\n\n    @Before\n    public void setUp() {\n        preview = new BoxPreview();\n        preview.setFirstPage(firstPage);\n        preview.setLastPage(lastPage);\n        boxResponse = EasyMock.createMock(DefaultBoxResponse.class);\n        response = EasyMock.createMock(BasicHttpResponse.class);\n        entity = EasyMock.createMock(StringEntity.class);\n        header = new BasicHeader(\"Link\", String.format(LINK_VALUE, firstPage, lastPage));\n    }\n\n    @Test\n    public void testCanParsePreview() throws IllegalStateException, IOException, BoxRestException {\n        EasyMock.reset(boxResponse, response, entity);\n        inputStream = new ByteArrayInputStream(PREVIEW_MOCK_CONTENT.getBytes());\n        EasyMock.expect(boxResponse.getHttpResponse()).andReturn(response);\n        EasyMock.expect(boxResponse.getContentLength()).andReturn(length);\n        EasyMock.expect(response.getEntity()).andReturn(entity);\n        EasyMock.expect(entity.getContent()).andReturn(inputStream);\n\n        EasyMock.expect(boxResponse.getHttpResponse()).andReturn(response);\n        EasyMock.expect(response.getFirstHeader(\"Link\")).andReturn(header);\n\n        EasyMock.replay(boxResponse, response, entity);\n        PreviewResponseParser parser = new PreviewResponseParser();\n        Object object = parser.parse(boxResponse);\n        Assert.assertEquals(BoxPreview.class, object.getClass());\n\n        BoxPreview parsed = (BoxPreview) object;\n        Assert.assertEquals(length, parsed.getContentLength());\n        Assert.assertEquals(firstPage, parsed.getFirstPage().intValue());\n        Assert.assertEquals(lastPage, parsed.getLastPage().intValue());\n        Assert.assertEquals(PREVIEW_MOCK_CONTENT, IOUtils.toString(parsed.getContent()));\n        EasyMock.verify(boxResponse, response, entity);\n\n    }\n}\n","repo_name":"shelsonjava/box-java-sdk-v2","path":"BoxJavaLibraryV2/tst/com/box/boxjavalibv2/responseparsers/PreviewResponseParserTest.java","language":"Java","license":"apache-2.0","size":3189},"truncated_cells":[]},{"row_idx":74,"row":{"code":"// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage com.google.gerrit.server.git.receive;\n\nimport com.google.common.collect.ImmutableList;\nimport com.google.gerrit.reviewdb.client.Change;\nimport java.util.ArrayList;\nimport java.util.EnumMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Keeps track of the change IDs thus far updated by ReceiveCommit.\n *\n * <p>This class is thread-safe.\n */\npublic class ResultChangeIds {\n  public enum Key {\n    CREATED,\n    REPLACED,\n    AUTOCLOSED,\n  }\n\n  private boolean isMagicPush;\n  private final Map<Key, List<Change.Id>> ids;\n\n  ResultChangeIds() {\n    ids = new EnumMap<>(Key.class);\n    for (Key k : Key.values()) {\n      ids.put(k, new ArrayList<>());\n    }\n  }\n\n  /** Record a change ID update as having completed. Thread-safe. */\n  public synchronized void add(Key key, Change.Id id) {\n    ids.get(key).add(id);\n  }\n\n  /** Indicate that the ReceiveCommits call involved a magic branch. */\n  public synchronized void setMagicPush(boolean magic) {\n    isMagicPush = magic;\n  }\n\n  public synchronized boolean isMagicPush() {\n    return isMagicPush;\n  }\n\n  /**\n   * Returns change IDs of the given type for which the BatchUpdate succeeded, or empty list if\n   * there are none. Thread-safe.\n   */\n  public synchronized List<Change.Id> get(Key key) {\n    return ImmutableList.copyOf(ids.get(key));\n  }\n}\n","repo_name":"qtproject/qtqa-gerrit","path":"java/com/google/gerrit/server/git/receive/ResultChangeIds.java","language":"Java","license":"apache-2.0","size":1920},"truncated_cells":[]},{"row_idx":75,"row":{"code":"# Copyright 2016 The Meson development team\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nimport os\nimport subprocess\nimport shutil\nimport argparse\nfrom .. import mlog\nfrom ..mesonlib import has_path_sep\nfrom . import destdir_join\nfrom .gettext import read_linguas\n\nparser = argparse.ArgumentParser()\nparser.add_argument('command')\nparser.add_argument('--id', dest='project_id')\nparser.add_argument('--subdir', dest='subdir')\nparser.add_argument('--installdir', dest='install_dir')\nparser.add_argument('--sources', dest='sources')\nparser.add_argument('--media', dest='media', default='')\nparser.add_argument('--langs', dest='langs', default='')\nparser.add_argument('--symlinks', type=bool, dest='symlinks', default=False)\n\ndef build_pot(srcdir, project_id, sources):\n    # Must be relative paths\n    sources = [os.path.join('C', source) for source in sources]\n    outfile = os.path.join(srcdir, project_id + '.pot')\n    subprocess.call(['itstool', '-o', outfile] + sources)\n\ndef update_po(srcdir, project_id, langs):\n    potfile = os.path.join(srcdir, project_id + '.pot')\n    for lang in langs:\n        pofile = os.path.join(srcdir, lang, lang + '.po')\n        subprocess.call(['msgmerge', '-q', '-o', pofile, pofile, potfile])\n\ndef build_translations(srcdir, blddir, langs):\n    for lang in langs:\n        outdir = os.path.join(blddir, lang)\n        os.makedirs(outdir, exist_ok=True)\n        subprocess.call([\n            'msgfmt', os.path.join(srcdir, lang, lang + '.po'),\n            '-o', os.path.join(outdir, lang + '.gmo')\n        ])\n\ndef merge_translations(blddir, sources, langs):\n    for lang in langs:\n        subprocess.call([\n            'itstool', '-m', os.path.join(blddir, lang, lang + '.gmo'),\n            '-o', os.path.join(blddir, lang)\n        ] + sources)\n\ndef install_help(srcdir, blddir, sources, media, langs, install_dir, destdir, project_id, symlinks):\n    c_install_dir = os.path.join(install_dir, 'C', project_id)\n    for lang in langs + ['C']:\n        indir = destdir_join(destdir, os.path.join(install_dir, lang, project_id))\n        os.makedirs(indir, exist_ok=True)\n        for source in sources:\n            infile = os.path.join(srcdir if lang == 'C' else blddir, lang, source)\n            outfile = os.path.join(indir, source)\n            mlog.log('Installing %s to %s' % (infile, outfile))\n            shutil.copyfile(infile, outfile)\n            shutil.copystat(infile, outfile)\n        for m in media:\n            infile = os.path.join(srcdir, lang, m)\n            outfile = os.path.join(indir, m)\n            c_infile = os.path.join(srcdir, 'C', m)\n            if not os.path.exists(infile):\n                if not os.path.exists(c_infile):\n                    mlog.warning('Media file \"%s\" did not exist in C directory' % m)\n                    continue\n                elif symlinks:\n                    srcfile = os.path.join(c_install_dir, m)\n                    mlog.log('Symlinking %s to %s.' % (outfile, srcfile))\n                    if has_path_sep(m):\n                        os.makedirs(os.path.dirname(outfile), exist_ok=True)\n                    try:\n                        try:\n                            os.symlink(srcfile, outfile)\n                        except FileExistsError:\n                            os.remove(outfile)\n                            os.symlink(srcfile, outfile)\n                        continue\n                    except (NotImplementedError, OSError):\n                        mlog.warning('Symlinking not supported, falling back to copying')\n                        infile = c_infile\n                else:\n                    # Lang doesn't have media file so copy it over 'C' one\n                    infile = c_infile\n            mlog.log('Installing %s to %s' % (infile, outfile))\n            if has_path_sep(m):\n                os.makedirs(os.path.dirname(outfile), exist_ok=True)\n            shutil.copyfile(infile, outfile)\n            shutil.copystat(infile, outfile)\n\ndef run(args):\n    options = parser.parse_args(args)\n    langs = options.langs.split('@@') if options.langs else []\n    media = options.media.split('@@') if options.media else []\n    sources = options.sources.split('@@')\n    destdir = os.environ.get('DESTDIR', '')\n    src_subdir = os.path.join(os.environ['MESON_SOURCE_ROOT'], options.subdir)\n    build_subdir = os.path.join(os.environ['MESON_BUILD_ROOT'], options.subdir)\n    abs_sources = [os.path.join(src_subdir, 'C', source) for source in sources]\n\n    if not langs:\n        langs = read_linguas(src_subdir)\n\n    if options.command == 'pot':\n        build_pot(src_subdir, options.project_id, sources)\n    elif options.command == 'update-po':\n        build_pot(src_subdir, options.project_id, sources)\n        update_po(src_subdir, options.project_id, langs)\n    elif options.command == 'build':\n        if langs:\n            build_translations(src_subdir, build_subdir, langs)\n    elif options.command == 'install':\n        install_dir = os.path.join(os.environ['MESON_INSTALL_PREFIX'], options.install_dir)\n        if langs:\n            build_translations(src_subdir, build_subdir, langs)\n            merge_translations(build_subdir, abs_sources, langs)\n        install_help(src_subdir, build_subdir, sources, media, langs, install_dir,\n                     destdir, options.project_id, options.symlinks)\n","repo_name":"becm/meson","path":"mesonbuild/scripts/yelphelper.py","language":"Python","license":"apache-2.0","size":5816},"truncated_cells":[]},{"row_idx":76,"row":{"code":"package com.veneweather.android;\n\nimport android.app.Fragment;\nimport android.app.ProgressDialog;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.support.annotation.Nullable;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.AdapterView;\nimport android.widget.ArrayAdapter;\nimport android.widget.Button;\nimport android.widget.ListView;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.veneweather.android.db.City;\nimport com.veneweather.android.db.County;\nimport com.veneweather.android.db.Province;\nimport com.veneweather.android.util.HttpUtil;\nimport com.veneweather.android.util.Utility;\n\nimport org.litepal.crud.DataSupport;\n\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport okhttp3.Call;\nimport okhttp3.Callback;\nimport okhttp3.Response;\n\n/**\n * Created by lenovo on 2017/4/10.\n */\n\npublic class ChooseAreaFragment extends Fragment {\n\n    public static final int LEVEL_PROVINCE = 0;\n\n    public static final int LEVEL_CITY = 1;\n\n    public static final int LEVEL_COUNTY = 2;\n\n    private ProgressDialog progressDialog;\n\n    private TextView titleText;\n\n    private Button btn_back;\n\n    private ListView listView;\n\n    private ArrayAdapter<String> adapter;\n\n    private List<String> dataList = new ArrayList<>();\n\n    /**\n     * 省列表\n     */\n    private List<Province> provinceList;\n\n    /**\n     * 市列表\n     */\n    private List<City> cityList;\n\n    /**\n     * 县列表\n     */\n    private List<County> countyList;\n\n    /**\n     * 选中的省份\n     */\n    private Province selectedProvince;\n\n    /**\n     * 选中的城市\n     */\n    private City selectedCity;\n\n    /**\n     * 当前选中的级别\n     */\n    private int currentLevel;\n\n    @Nullable\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        View view = inflater.inflate(R.layout.choose_area, container, false);\n        titleText = (TextView) view.findViewById(R.id.title_text);\n        btn_back = (Button) view.findViewById(R.id.back_button);\n        listView = (ListView) view.findViewById(R.id.list_view);\n        adapter = new ArrayAdapter<>(getContext(), android.R.layout.simple_list_item_1, dataList);\n        listView.setAdapter(adapter);\n        return view;\n    }\n\n    @Override\n    public void onActivityCreated(Bundle savedInstanceState) {\n        super.onActivityCreated(savedInstanceState);\n        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n            @Override\n            public void onItemClick(AdapterView<?> parent, View view, int position,\n                                    long id) {\n                if (currentLevel == LEVEL_PROVINCE) {\n                    selectedProvince = provinceList.get(position);\n                    queryCities();\n                } else if (currentLevel == LEVEL_CITY) {\n                    selectedCity = cityList.get(position);\n                    queryCounties();\n                } else if (currentLevel == LEVEL_COUNTY) {\n                    String weatherId = countyList.get(position).getWeatherId();\n                    if (getActivity() instanceof MainActivity) {\n                        Intent intent = new Intent(getActivity(), WeatherActivity.class);\n                        intent.putExtra(\"weather_id\", weatherId);\n                        startActivity(intent);\n                        getActivity().finish();\n                    } else if (getActivity() instanceof WeatherActivity) {\n                        WeatherActivity activity = (WeatherActivity) getActivity();\n                        activity.drawerLayout.closeDrawers();\n                        activity.swipeRefresh.setRefreshing(true);\n                        activity.requestWeather(weatherId);\n                    }\n\n                }\n            }\n        });\n        btn_back.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (currentLevel == LEVEL_CITY) {\n                    queryProvinces();\n                } else if (currentLevel == LEVEL_COUNTY) {\n                    queryCities();\n                }\n            }\n        });\n        queryProvinces();\n    }\n\n    /**\n     * 查询全国所有的省，优先从数据库查询，如果没有查询到再去服务器上查询\n     */\n    private void queryProvinces() {\n        titleText.setText(\"中国\");\n        btn_back.setVisibility(View.GONE);\n        provinceList = DataSupport.findAll(Province.class);\n        if (provinceList.size() > 0) {\n            dataList.clear();\n            for (Province province : provinceList) {\n                dataList.add(province.getProvinceName());\n            }\n            adapter.notifyDataSetChanged();\n            listView.setSelection(0);\n            currentLevel = LEVEL_PROVINCE;\n        } else {\n            String address = \"http://guolin.tech/api/china\";\n            queryFromServer(address, \"province\");\n        }\n    }\n\n    /**\n     * 查询选中省内所有市，优先从数据库查询，如果没有查询到再去服务器上查询\n     */\n    private void queryCities() {\n        titleText.setText(selectedProvince.getProvinceName());\n        btn_back.setVisibility(View.VISIBLE);\n        cityList = DataSupport.where(\"provinceid = ?\", String.valueOf(selectedProvince.getId())).find(City.class);\n        if (cityList.size() > 0) {\n            dataList.clear();\n            for (City city : cityList) {\n                dataList.add(city.getCityName());\n            }\n            adapter.notifyDataSetChanged();\n            listView.setSelection(0);\n            currentLevel = LEVEL_CITY;\n        } else {\n            int provinceCode = selectedProvince.getProvinceCode();\n            String address = \"http://guolin.tech/api/china/\" + provinceCode;\n            queryFromServer(address, \"city\");\n        }\n    }\n\n    /**\n     * 查询选中市内所有县，优先从数据库查询，如果没有查询到再去服务器上查询\n     */\n    private void queryCounties() {\n        titleText.setText(selectedCity.getCityName());\n        btn_back.setVisibility(View.VISIBLE);\n        countyList = DataSupport.where(\"cityid = ?\", String.valueOf(selectedCity.getId())).find(County.class);\n        if (countyList.size() > 0) {\n            dataList.clear();\n            for (County county : countyList) {\n                dataList.add(county.getCountyName());\n            }\n            adapter.notifyDataSetChanged();\n            listView.setSelection(0);\n            currentLevel = LEVEL_COUNTY;\n        } else {\n            int provinceCode = selectedProvince.getProvinceCode();\n            int cityCode = selectedCity.getCitycode();\n            String address = \"http://guolin.tech/api/china/\" + provinceCode + \"/\" + cityCode;\n            queryFromServer(address, \"county\");\n        }\n    }\n\n    /**\n     * 根据传入的地址和类型从服务器上查询省市县数据\n     */\n    private void queryFromServer(String address, final String type) {\n        showProgressDialog();\n        HttpUtil.sendOkHttpRequest(address, new Callback() {\n            @Override\n            public void onResponse(Call call, Response response) throws IOException {\n                String responseText = response.body().string();\n                boolean result = false;\n                if (\"province\".equals(type)) {\n                    result = Utility.handleProvinceResponse(responseText);\n                } else if (\"city\".equals(type)) {\n                    result = Utility.handleCityResponse(responseText, selectedProvince.getId());\n                } else if (\"county\".equals(type)) {\n                    result = Utility.handleCountyResponse(responseText, selectedCity.getId());\n                }\n                if (result) {\n                    getActivity().runOnUiThread(new Runnable() {\n                        @Override\n                        public void run() {\n                            closeProgressDialog();\n                            if (\"province\".equals(type)) {\n                                queryProvinces();\n                            } else if (\"city\".equals(type)) {\n                                queryCities();\n                            } else if (\"county\".equals(type)) {\n                                queryCounties();\n                            }\n                        }\n                    });\n                }\n            }\n\n            @Override\n            public void onFailure(Call call, IOException e) {\n                // 通过runOnUiThread()方法回到主线程处理逻辑\n                getActivity().runOnUiThread(new Runnable() {\n                    @Override\n                    public void run() {\n                        closeProgressDialog();\n                        Toast.makeText(getContext(), \"加载失败\", Toast.LENGTH_SHORT).show();\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * 显示进度对话框\n     */\n    private void showProgressDialog() {\n        if (progressDialog == null) {\n            progressDialog = new ProgressDialog(getActivity());\n            progressDialog.setMessage(\"正在加载...\");\n            progressDialog.setCanceledOnTouchOutside(false);\n        }\n        progressDialog.show();\n    }\n\n    /**\n     * 关闭进度对话框\n     */\n    private void closeProgressDialog() {\n        if (progressDialog != null) {\n            progressDialog.dismiss();\n        }\n    }\n}\n","repo_name":"Ackerm-Zed/veneweather","path":"app/src/main/java/com/veneweather/android/ChooseAreaFragment.java","language":"Java","license":"apache-2.0","size":9584},"truncated_cells":[]},{"row_idx":77,"row":{"code":"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<!-- NewPage -->\n<html lang=\"en\">\n<head>\n<!-- Generated by javadoc (1.8.0_152-ea) on Sat Jul 29 21:49:13 PDT 2017 -->\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<title>Uses of Class com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer (Jackson datatype: JSR310 2.9.0 API)</title>\n<meta name=\"date\" content=\"2017-07-29\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../../../../../../../stylesheet.css\" title=\"Style\">\n<script type=\"text/javascript\" src=\"../../../../../../../script.js\"></script>\n</head>\n<body>\n<script type=\"text/javascript\"><!--\n    try {\n        if (location.href.indexOf('is-external=true') == -1) {\n            parent.document.title=\"Uses of Class com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer (Jackson datatype: JSR310 2.9.0 API)\";\n        }\n    }\n    catch(err) {\n    }\n//-->\n</script>\n<noscript>\n<div>JavaScript is disabled on your browser.</div>\n</noscript>\n<!-- ========= START OF TOP NAVBAR ======= -->\n<div class=\"topNav\"><a name=\"navbar.top\">\n<!--   -->\n</a>\n<div class=\"skipNav\"><a href=\"#skip.navbar.top\" title=\"Skip navigation links\">Skip navigation links</a></div>\n<a name=\"navbar.top.firstrow\">\n<!--   -->\n</a>\n<ul class=\"navList\" title=\"Navigation\">\n<li><a href=\"../../../../../../../overview-summary.html\">Overview</a></li>\n<li><a href=\"../package-summary.html\">Package</a></li>\n<li><a href=\"../../../../../../../com/fasterxml/jackson/datatype/jsr310/ser/YearMonthSerializer.html\" title=\"class in com.fasterxml.jackson.datatype.jsr310.ser\">Class</a></li>\n<li class=\"navBarCell1Rev\">Use</li>\n<li><a href=\"../package-tree.html\">Tree</a></li>\n<li><a href=\"../../../../../../../deprecated-list.html\">Deprecated</a></li>\n<li><a href=\"../../../../../../../index-all.html\">Index</a></li>\n<li><a href=\"../../../../../../../help-doc.html\">Help</a></li>\n</ul>\n</div>\n<div class=\"subNav\">\n<ul class=\"navList\">\n<li>Prev</li>\n<li>Next</li>\n</ul>\n<ul class=\"navList\">\n<li><a href=\"../../../../../../../index.html?com/fasterxml/jackson/datatype/jsr310/ser/class-use/YearMonthSerializer.html\" target=\"_top\">Frames</a></li>\n<li><a href=\"YearMonthSerializer.html\" target=\"_top\">No&nbsp;Frames</a></li>\n</ul>\n<ul class=\"navList\" id=\"allclasses_navbar_top\">\n<li><a href=\"../../../../../../../allclasses-noframe.html\">All&nbsp;Classes</a></li>\n</ul>\n<div>\n<script type=\"text/javascript\"><!--\n  allClassesLink = document.getElementById(\"allclasses_navbar_top\");\n  if(window==top) {\n    allClassesLink.style.display = \"block\";\n  }\n  else {\n    allClassesLink.style.display = \"none\";\n  }\n  //-->\n</script>\n</div>\n<a name=\"skip.navbar.top\">\n<!--   -->\n</a></div>\n<!-- ========= END OF TOP NAVBAR ========= -->\n<div class=\"header\">\n<h2 title=\"Uses of Class com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer\" class=\"title\">Uses of Class<br>com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer</h2>\n</div>\n<div class=\"classUseContainer\">\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<table class=\"useSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Use table, listing packages, and an explanation\">\n<caption><span>Packages that use <a href=\"../../../../../../../com/fasterxml/jackson/datatype/jsr310/ser/YearMonthSerializer.html\" title=\"class in com.fasterxml.jackson.datatype.jsr310.ser\">YearMonthSerializer</a></span><span class=\"tabEnd\">&nbsp;</span></caption>\n<tr>\n<th class=\"colFirst\" scope=\"col\">Package</th>\n<th class=\"colLast\" scope=\"col\">Description</th>\n</tr>\n<tbody>\n<tr class=\"altColor\">\n<td class=\"colFirst\"><a href=\"#com.fasterxml.jackson.datatype.jsr310.ser\">com.fasterxml.jackson.datatype.jsr310.ser</a></td>\n<td class=\"colLast\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li class=\"blockList\">\n<ul class=\"blockList\">\n<li class=\"blockList\"><a name=\"com.fasterxml.jackson.datatype.jsr310.ser\">\n<!--   -->\n</a>\n<h3>Uses of <a href=\"../../../../../../../com/fasterxml/jackson/datatype/jsr310/ser/YearMonthSerializer.html\" title=\"class in com.fasterxml.jackson.datatype.jsr310.ser\">YearMonthSerializer</a> in <a href=\"../../../../../../../com/fasterxml/jackson/datatype/jsr310/ser/package-summary.html\">com.fasterxml.jackson.datatype.jsr310.ser</a></h3>\n<table class=\"useSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Use table, listing fields, and an explanation\">\n<caption><span>Fields in <a href=\"../../../../../../../com/fasterxml/jackson/datatype/jsr310/ser/package-summary.html\">com.fasterxml.jackson.datatype.jsr310.ser</a> declared as <a href=\"../../../../../../../com/fasterxml/jackson/datatype/jsr310/ser/YearMonthSerializer.html\" title=\"class in com.fasterxml.jackson.datatype.jsr310.ser\">YearMonthSerializer</a></span><span class=\"tabEnd\">&nbsp;</span></caption>\n<tr>\n<th class=\"colFirst\" scope=\"col\">Modifier and Type</th>\n<th class=\"colLast\" scope=\"col\">Field and Description</th>\n</tr>\n<tbody>\n<tr class=\"altColor\">\n<td class=\"colFirst\"><code>static <a href=\"../../../../../../../com/fasterxml/jackson/datatype/jsr310/ser/YearMonthSerializer.html\" title=\"class in com.fasterxml.jackson.datatype.jsr310.ser\">YearMonthSerializer</a></code></td>\n<td class=\"colLast\"><span class=\"typeNameLabel\">YearMonthSerializer.</span><code><span class=\"memberNameLink\"><a href=\"../../../../../../../com/fasterxml/jackson/datatype/jsr310/ser/YearMonthSerializer.html#INSTANCE\">INSTANCE</a></span></code>&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table class=\"useSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Use table, listing methods, and an explanation\">\n<caption><span>Methods in <a href=\"../../../../../../../com/fasterxml/jackson/datatype/jsr310/ser/package-summary.html\">com.fasterxml.jackson.datatype.jsr310.ser</a> that return <a href=\"../../../../../../../com/fasterxml/jackson/datatype/jsr310/ser/YearMonthSerializer.html\" title=\"class in com.fasterxml.jackson.datatype.jsr310.ser\">YearMonthSerializer</a></span><span class=\"tabEnd\">&nbsp;</span></caption>\n<tr>\n<th class=\"colFirst\" scope=\"col\">Modifier and Type</th>\n<th class=\"colLast\" scope=\"col\">Method and Description</th>\n</tr>\n<tbody>\n<tr class=\"altColor\">\n<td class=\"colFirst\"><code>protected <a href=\"../../../../../../../com/fasterxml/jackson/datatype/jsr310/ser/YearMonthSerializer.html\" title=\"class in com.fasterxml.jackson.datatype.jsr310.ser\">YearMonthSerializer</a></code></td>\n<td class=\"colLast\"><span class=\"typeNameLabel\">YearMonthSerializer.</span><code><span class=\"memberNameLink\"><a href=\"../../../../../../../com/fasterxml/jackson/datatype/jsr310/ser/YearMonthSerializer.html#withFormat-java.lang.Boolean-java.time.format.DateTimeFormatter-com.fasterxml.jackson.annotation.JsonFormat.Shape-\">withFormat</a></span>(<a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Boolean.html?is-external=true\" title=\"class or interface in java.lang\">Boolean</a>&nbsp;useTimestamp,\n          java.time.format.DateTimeFormatter&nbsp;formatter,\n          com.fasterxml.jackson.annotation.JsonFormat.Shape&nbsp;shape)</code>&nbsp;</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n<!-- ======= START OF BOTTOM NAVBAR ====== -->\n<div class=\"bottomNav\"><a name=\"navbar.bottom\">\n<!--   -->\n</a>\n<div class=\"skipNav\"><a href=\"#skip.navbar.bottom\" title=\"Skip navigation links\">Skip navigation links</a></div>\n<a name=\"navbar.bottom.firstrow\">\n<!--   -->\n</a>\n<ul class=\"navList\" title=\"Navigation\">\n<li><a href=\"../../../../../../../overview-summary.html\">Overview</a></li>\n<li><a href=\"../package-summary.html\">Package</a></li>\n<li><a href=\"../../../../../../../com/fasterxml/jackson/datatype/jsr310/ser/YearMonthSerializer.html\" title=\"class in com.fasterxml.jackson.datatype.jsr310.ser\">Class</a></li>\n<li class=\"navBarCell1Rev\">Use</li>\n<li><a href=\"../package-tree.html\">Tree</a></li>\n<li><a href=\"../../../../../../../deprecated-list.html\">Deprecated</a></li>\n<li><a href=\"../../../../../../../index-all.html\">Index</a></li>\n<li><a href=\"../../../../../../../help-doc.html\">Help</a></li>\n</ul>\n</div>\n<div class=\"subNav\">\n<ul class=\"navList\">\n<li>Prev</li>\n<li>Next</li>\n</ul>\n<ul class=\"navList\">\n<li><a href=\"../../../../../../../index.html?com/fasterxml/jackson/datatype/jsr310/ser/class-use/YearMonthSerializer.html\" target=\"_top\">Frames</a></li>\n<li><a href=\"YearMonthSerializer.html\" target=\"_top\">No&nbsp;Frames</a></li>\n</ul>\n<ul class=\"navList\" id=\"allclasses_navbar_bottom\">\n<li><a href=\"../../../../../../../allclasses-noframe.html\">All&nbsp;Classes</a></li>\n</ul>\n<div>\n<script type=\"text/javascript\"><!--\n  allClassesLink = document.getElementById(\"allclasses_navbar_bottom\");\n  if(window==top) {\n    allClassesLink.style.display = \"block\";\n  }\n  else {\n    allClassesLink.style.display = \"none\";\n  }\n  //-->\n</script>\n</div>\n<a name=\"skip.navbar.bottom\">\n<!--   -->\n</a></div>\n<!-- ======== END OF BOTTOM NAVBAR ======= -->\n<p class=\"legalCopy\"><small>Copyright &#169; 2017 <a href=\"http://fasterxml.com/\">FasterXML</a>. All rights reserved.</small></p>\n</body>\n</html>\n","repo_name":"FasterXML/jackson-modules-java8","path":"docs/javadoc/datetime/2.9/com/fasterxml/jackson/datatype/jsr310/ser/class-use/YearMonthSerializer.html","language":"HTML","license":"apache-2.0","size":8998},"truncated_cells":[]},{"row_idx":78,"row":{"code":"#\n#Programa Lista 4, questão 1;\n#Felipe Henrique Bastos Costa - 1615310032;\n#\n#\n#\n#\n\n\nlista = []#lista vazia;\ncont1 = 0#contador do indice;\ncont2 = 1#contador da posição do numero, se é o primeiro, segundo etc;\nv = 5#representaria o len da lista;\n\nwhile(cont1 < v):\n    x = int(input(\"Informe o %dº numero inteiro para colocar em sua lista:\\n\"%cont2))#x e a variavel que recebe\n                                                                                     #o numero do usuario\n    lista.append(x)#o numero informado para x e colocado dentro da lista;\n    cont1+=1#Os contadores estao\n    cont2+=1#sendo incrementados;\nprint(\"A lista de informada foi:\\n%s\"%lista)\n","repo_name":"any1m1c/ipc20161","path":"lista4/ipc_lista4.01.py","language":"Python","license":"apache-2.0","size":675},"truncated_cells":[]},{"row_idx":79,"row":{"code":"/*\n * proto/v1beta1/grafeas.proto\n *\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * API version: version not set\n * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)\n */\n\npackage grafeas\n\nimport (\n\t\"time\"\n)\n\n// An instance of an analysis type that has been found on a resource.\ntype V1beta1Occurrence struct {\n\t// Output only. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.\n\tName string `json:\"name,omitempty\"`\n\t// Required. Immutable. The resource for which the occurrence applies.\n\tResource *V1beta1Resource `json:\"resource,omitempty\"`\n\t// Required. Immutable. The analysis note associated with this occurrence, in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`. This field can be used as a filter in list requests.\n\tNoteName string `json:\"note_name,omitempty\"`\n\t// Output only. This explicitly denotes which of the occurrence details are specified. This field can be used as a filter in list requests.\n\tKind *V1beta1NoteKind `json:\"kind,omitempty\"`\n\t// A description of actions that can be taken to remedy the note.\n\tRemediation string `json:\"remediation,omitempty\"`\n\t// Output only. The time this occurrence was created.\n\tCreateTime time.Time `json:\"create_time,omitempty\"`\n\t// Output only. The time this occurrence was last updated.\n\tUpdateTime time.Time `json:\"update_time,omitempty\"`\n\t// Describes a security vulnerability.\n\tVulnerability *V1beta1vulnerabilityDetails `json:\"vulnerability,omitempty\"`\n\t// Describes a verifiable build.\n\tBuild *V1beta1buildDetails `json:\"build,omitempty\"`\n\t// Describes how this resource derives from the basis in the associated note.\n\tDerivedImage *V1beta1imageDetails `json:\"derived_image,omitempty\"`\n\t// Describes the installation of a package on the linked resource.\n\tInstallation *V1beta1packageDetails `json:\"installation,omitempty\"`\n\t// Describes the deployment of an artifact on a runtime.\n\tDeployment *V1beta1deploymentDetails `json:\"deployment,omitempty\"`\n\t// Describes when a resource was discovered.\n\tDiscovered *V1beta1discoveryDetails `json:\"discovered,omitempty\"`\n\t// Describes an attestation of an artifact.\n\tAttestation *V1beta1attestationDetails `json:\"attestation,omitempty\"`\n}\n","repo_name":"grafeas/client-go","path":"0.1.0/model_v1beta1_occurrence.go","language":"GO","license":"apache-2.0","size":2287},"truncated_cells":[]},{"row_idx":80,"row":{"code":"---\ndate: 2016-09-13T09:00:00+00:00\ntitle: Community support\ntype: page\nlayout: overview\naliases:\n    - /community/\n---\nVamp Community Edition is open source and Apache 2.0 licensed. For details of the **Vamp Enterprise Edition** please check the [Vamp feature matrix](/product/enterprise-edition/), [start a free trial] (/ee-trial-signup/), or [contact us](mailto:info@vamp.io) to discuss your requirements, pricing and features.\n\n## Community support\nIf you have a question about Vamp, please check the [Vamp documentation](/documentation/using-vamp/artifacts) first  - we're always adding new resources, tutorials and examples.\n\n* **Bug reports:** If you found a bug, please report it! [Create an issue on GitHub](https://github.com/magneticio/vamp/issues) and provide as much info as you can, specifically the version of Vamp you are running and the container driver you are using.\n* **Gitter:** You can post questions directly to us on our [public Gitter channel](https://gitter.im/magneticio/vamp)\n* **Twitter:** You can also follow us on Twitter: [@vamp_io](https://twitter.com/vamp_io)\n","repo_name":"magneticio/vamp.io","path":"content/community-support.md","language":"Markdown","license":"apache-2.0","size":1094},"truncated_cells":[]},{"row_idx":81,"row":{"code":"#include \"stdafx.h\"\n\n#include \"InputReader.h\"\n#include \"graph.h\"\n#include <iostream>\n#include <string>\nusing namespace std;\n\n\nInputReader::InputReader(const char* fileName, const char* stFileName)\n{\n\tin.open(fileName);\n\tif(!in.is_open())\n\t{\n\t\tcout<<\"Input file \"<<fileName<<\" doesn't exist!\"<<endl;\n\t\texit(1);\n\t}\n\n\tstIn.open(stFileName);\n\tif(!stIn.is_open())\n\t{\n\t\tcout<<\"Input file \"<<stFileName<<\" doesn't exist!\"<<endl;\n\t\tin.close();\n\t\texit(1);\n\t}\n}\n\nInputReader::~InputReader()\n{\n\tin.close();\n\tstIn.close();\n}\n\nvoid InputReader::ReadFirstLine()\n{\n\tin>>strLine;\n\tassert(strLine[0] == 'g');\n\t\n\tin>>strLine;\n\tassert(strLine[0] == '#');\n\n\tin>> gId;\n}\n\n\nbool InputReader::ReadGraph(Graph &g)\n{\n\tReadFirstLine();\n\tif(gId == 0)\n\t{\n\t\treturn false;                                         /*ÒÑ¾­Ã»ÓÐÍ¼*/\n\t}\n\tg.nId = gId;\n\n\tin>>strLine;\n\tassert(strLine[0] == 's');                                /*¶ÁÈ¡¶¥µãÊýºÍ±ßÊý*/\n\tin>>g.nV>>g.nE;\n\n\tassert(g.nV < MAX);                                       /*·ÀÖ¹ÁÚ½Ó¾ØÕó´óÐ¡²»¹»ÓÃ*/\n\n    /*ÏÂÃæ¶ÁÈ¡±ßµÄÐÅÏ¢*/\n\tint u,v;                                                  /*u,vÊÇÒ»Ìõ±ßµÄÁ½¸ö¶¥µã*/\n\tfor(int i = 1; i <= g.nE; i++)\n\t{\n\t\tin>>strLine;\n\t\tassert(strLine[0] == 'e');                            \n\t\tin>>u>>v;                                             /*×¢ÒâÕâ¸ö²»ÄÜÓëÏÂÃæµÄÐ´µ½Ò»Æð*/\n\t\tin>>g.matrix[u][v].iC>>g.matrix[u][v].dP>>g.matrix[u][v].iLabel;\n\t}\n\n\treturn true;\n}\n\nvoid InputReader::ReadSourceSink(int &s, int &t)\n{\n\tstIn>>s>>t;\n}","repo_name":"yuanmouren1hao/KeyEdge_Mining_On_UncertainGraph","path":"myFlow_caiwei/myFlow/InputReader.cpp","language":"C++","license":"apache-2.0","size":1474},"truncated_cells":[]},{"row_idx":82,"row":{"code":"<?php\n\nnamespace Illuminate\\Database\\Eloquent;\n\nuse Closure;\nuse BadMethodCallException;\nuse Illuminate\\Support\\Arr;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Pagination\\Paginator;\nuse Illuminate\\Contracts\\Support\\Arrayable;\nuse Illuminate\\Database\\Concerns\\BuildsQueries;\nuse Illuminate\\Database\\Eloquent\\Relations\\Relation;\nuse Illuminate\\Database\\Query\\Builder as QueryBuilder;\n\n/**\n * @mixin \\Illuminate\\Database\\Query\\Builder\n */\nclass Builder\n{\n    use BuildsQueries, Concerns\\QueriesRelationships;\n\n    /**\n     * The base query builder instance.\n     *\n     * @var \\Illuminate\\Database\\Query\\Builder\n     */\n    protected $query;\n\n    /**\n     * The model being queried.\n     *\n     * @var \\Illuminate\\Database\\Eloquent\\Model\n     */\n    protected $model;\n\n    /**\n     * The relationships that should be eager loaded.\n     *\n     * @var array\n     */\n    protected $eagerLoad = [];\n\n    /**\n     * All of the globally registered builder macros.\n     *\n     * @var array\n     */\n    protected static $macros = [];\n\n    /**\n     * All of the locally registered builder macros.\n     *\n     * @var array\n     */\n    protected $localMacros = [];\n\n    /**\n     * A replacement for the typical delete function.\n     *\n     * @var \\Closure\n     */\n    protected $onDelete;\n\n    /**\n     * The methods that should be returned from query builder.\n     *\n     * @var array\n     */\n    protected $passthru = [\n        'insert', 'insertGetId', 'getBindings', 'toSql',\n        'exists', 'doesntExist', 'count', 'min', 'max', 'avg', 'sum', 'getConnection',\n    ];\n\n    /**\n     * Applied global scopes.\n     *\n     * @var array\n     */\n    protected $scopes = [];\n\n    /**\n     * Removed global scopes.\n     *\n     * @var array\n     */\n    protected $removedScopes = [];\n\n    /**\n     * Create a new Eloquent query builder instance.\n     *\n     * @param  \\Illuminate\\Database\\Query\\Builder  $query\n     * @return void\n     */\n    public function __construct(QueryBuilder $query)\n    {\n        $this->query = $query;\n    }\n\n    /**\n     * Create and return an un-saved model instance.\n     *\n     * @param  array  $attributes\n     * @return \\Illuminate\\Database\\Eloquent\\Model\n     */\n    public function make(array $attributes = [])\n    {\n        return $this->newModelInstance($attributes);\n    }\n\n    /**\n     * Register a new global scope.\n     *\n     * @param  string  $identifier\n     * @param  \\Illuminate\\Database\\Eloquent\\Scope|\\Closure  $scope\n     * @return $this\n     */\n    public function withGlobalScope($identifier, $scope)\n    {\n        $this->scopes[$identifier] = $scope;\n\n        if (method_exists($scope, 'extend')) {\n            $scope->extend($this);\n        }\n\n        return $this;\n    }\n\n    /**\n     * Remove a registered global scope.\n     *\n     * @param  \\Illuminate\\Database\\Eloquent\\Scope|string  $scope\n     * @return $this\n     */\n    public function withoutGlobalScope($scope)\n    {\n        if (! is_string($scope)) {\n            $scope = get_class($scope);\n        }\n\n        unset($this->scopes[$scope]);\n\n        $this->removedScopes[] = $scope;\n\n        return $this;\n    }\n\n    /**\n     * Remove all or passed registered global scopes.\n     *\n     * @param  array|null  $scopes\n     * @return $this\n     */\n    public function withoutGlobalScopes(array $scopes = null)\n    {\n        if (is_array($scopes)) {\n            foreach ($scopes as $scope) {\n                $this->withoutGlobalScope($scope);\n            }\n        } else {\n            $this->scopes = [];\n        }\n\n        return $this;\n    }\n\n    /**\n     * Get an array of global scopes that were removed from the query.\n     *\n     * @return array\n     */\n    public function removedScopes()\n    {\n        return $this->removedScopes;\n    }\n\n    /**\n     * Add a where clause on the primary key to the query.\n     *\n     * @param  mixed  $id\n     * @return $this\n     */\n    public function whereKey($id)\n    {\n        if (is_array($id) || $id instanceof Arrayable) {\n            $this->query->whereIn($this->model->getQualifiedKeyName(), $id);\n\n            return $this;\n        }\n\n        return $this->where($this->model->getQualifiedKeyName(), '=', $id);\n    }\n\n    /**\n     * Add a where clause on the primary key to the query.\n     *\n     * @param  mixed  $id\n     * @return $this\n     */\n    public function whereKeyNot($id)\n    {\n        if (is_array($id) || $id instanceof Arrayable) {\n            $this->query->whereNotIn($this->model->getQualifiedKeyName(), $id);\n\n            return $this;\n        }\n\n        return $this->where($this->model->getQualifiedKeyName(), '!=', $id);\n    }\n\n    /**\n     * Add a basic where clause to the query.\n     *\n     * @param  string|array|\\Closure  $column\n     * @param  string  $operator\n     * @param  mixed  $value\n     * @param  string  $boolean\n     * @return $this\n     */\n    public function where($column, $operator = null, $value = null, $boolean = 'and')\n    {\n        if ($column instanceof Closure) {\n            $column($query = $this->model->newModelQuery());\n\n            $this->query->addNestedWhereQuery($query->getQuery(), $boolean);\n        } else {\n            $this->query->where(...func_get_args());\n        }\n\n        return $this;\n    }\n\n    /**\n     * Add an \"or where\" clause to the query.\n     *\n     * @param  \\Closure|array|string  $column\n     * @param  string  $operator\n     * @param  mixed  $value\n     * @return \\Illuminate\\Database\\Eloquent\\Builder|static\n     */\n    public function orWhere($column, $operator = null, $value = null)\n    {\n        list($value, $operator) = $this->query->prepareValueAndOperator(\n            $value, $operator, func_num_args() == 2\n        );\n\n        return $this->where($column, $operator, $value, 'or');\n    }\n\n    /**\n     * Create a collection of models from plain arrays.\n     *\n     * @param  array  $items\n     * @return \\Illuminate\\Database\\Eloquent\\Collection\n     */\n    public function hydrate(array $items)\n    {\n        $instance = $this->newModelInstance();\n\n        return $instance->newCollection(array_map(function ($item) use ($instance) {\n            return $instance->newFromBuilder($item);\n        }, $items));\n    }\n\n    /**\n     * Create a collection of models from a raw query.\n     *\n     * @param  string  $query\n     * @param  array  $bindings\n     * @return \\Illuminate\\Database\\Eloquent\\Collection\n     */\n    public function fromQuery($query, $bindings = [])\n    {\n        return $this->hydrate(\n            $this->query->getConnection()->select($query, $bindings)\n        );\n    }\n\n    /**\n     * Find a model by its primary key.\n     *\n     * @param  mixed  $id\n     * @param  array  $columns\n     * @return \\Illuminate\\Database\\Eloquent\\Model|\\Illuminate\\Database\\Eloquent\\Collection|static[]|static|null\n     */\n    public function find($id, $columns = ['*'])\n    {\n        if (is_array($id) || $id instanceof Arrayable) {\n            return $this->findMany($id, $columns);\n        }\n\n        return $this->whereKey($id)->first($columns);\n    }\n\n    /**\n     * Find multiple models by their primary keys.\n     *\n     * @param  \\Illuminate\\Contracts\\Support\\Arrayable|array  $ids\n     * @param  array  $columns\n     * @return \\Illuminate\\Database\\Eloquent\\Collection\n     */\n    public function findMany($ids, $columns = ['*'])\n    {\n        if (empty($ids)) {\n            return $this->model->newCollection();\n        }\n\n        return $this->whereKey($ids)->get($columns);\n    }\n\n    /**\n     * Find a model by its primary key or throw an exception.\n     *\n     * @param  mixed  $id\n     * @param  array  $columns\n     * @return \\Illuminate\\Database\\Eloquent\\Model|\\Illuminate\\Database\\Eloquent\\Collection\n     *\n     * @throws \\Illuminate\\Database\\Eloquent\\ModelNotFoundException\n     */\n    public function findOrFail($id, $columns = ['*'])\n    {\n        $result = $this->find($id, $columns);\n\n        if (is_array($id)) {\n            if (count($result) == count(array_unique($id))) {\n                return $result;\n            }\n        } elseif (! is_null($result)) {\n            return $result;\n        }\n\n        throw (new ModelNotFoundException)->setModel(\n            get_class($this->model), $id\n        );\n    }\n\n    /**\n     * Find a model by its primary key or return fresh model instance.\n     *\n     * @param  mixed  $id\n     * @param  array  $columns\n     * @return \\Illuminate\\Database\\Eloquent\\Model\n     */\n    public function findOrNew($id, $columns = ['*'])\n    {\n        if (! is_null($model = $this->find($id, $columns))) {\n            return $model;\n        }\n\n        return $this->newModelInstance();\n    }\n\n    /**\n     * Get the first record matching the attributes or instantiate it.\n     *\n     * @param  array  $attributes\n     * @param  array  $values\n     * @return \\Illuminate\\Database\\Eloquent\\Model\n     */\n    public function firstOrNew(array $attributes, array $values = [])\n    {\n        if (! is_null($instance = $this->where($attributes)->first())) {\n            return $instance;\n        }\n\n        return $this->newModelInstance($attributes + $values);\n    }\n\n    /**\n     * Get the first record matching the attributes or create it.\n     *\n     * @param  array  $attributes\n     * @param  array  $values\n     * @return \\Illuminate\\Database\\Eloquent\\Model\n     */\n    public function firstOrCreate(array $attributes, array $values = [])\n    {\n        if (! is_null($instance = $this->where($attributes)->first())) {\n            return $instance;\n        }\n\n        return tap($this->newModelInstance($attributes + $values), function ($instance) {\n            $instance->save();\n        });\n    }\n\n    /**\n     * Create or update a record matching the attributes, and fill it with values.\n     *\n     * @param  array  $attributes\n     * @param  array  $values\n     * @return \\Illuminate\\Database\\Eloquent\\Model\n     */\n    public function updateOrCreate(array $attributes, array $values = [])\n    {\n        return tap($this->firstOrNew($attributes), function ($instance) use ($values) {\n            $instance->fill($values)->save();\n        });\n    }\n\n    /**\n     * Execute the query and get the first result or throw an exception.\n     *\n     * @param  array  $columns\n     * @return \\Illuminate\\Database\\Eloquent\\Model|static\n     *\n     * @throws \\Illuminate\\Database\\Eloquent\\ModelNotFoundException\n     */\n    public function firstOrFail($columns = ['*'])\n    {\n        if (! is_null($model = $this->first($columns))) {\n            return $model;\n        }\n\n        throw (new ModelNotFoundException)->setModel(get_class($this->model));\n    }\n\n    /**\n     * Execute the query and get the first result or call a callback.\n     *\n     * @param  \\Closure|array  $columns\n     * @param  \\Closure|null  $callback\n     * @return \\Illuminate\\Database\\Eloquent\\Model|static|mixed\n     */\n    public function firstOr($columns = ['*'], Closure $callback = null)\n    {\n        if ($columns instanceof Closure) {\n            $callback = $columns;\n\n            $columns = ['*'];\n        }\n\n        if (! is_null($model = $this->first($columns))) {\n            return $model;\n        }\n\n        return call_user_func($callback);\n    }\n\n    /**\n     * Get a single column's value from the first result of a query.\n     *\n     * @param  string  $column\n     * @return mixed\n     */\n    public function value($column)\n    {\n        if ($result = $this->first([$column])) {\n            return $result->{$column};\n        }\n    }\n\n    /**\n     * Execute the query as a \"select\" statement.\n     *\n     * @param  array  $columns\n     * @return \\Illuminate\\Database\\Eloquent\\Collection|static[]\n     */\n    public function get($columns = ['*'])\n    {\n        $builder = $this->applyScopes();\n\n        // If we actually found models we will also eager load any relationships that\n        // have been specified as needing to be eager loaded, which will solve the\n        // n+1 query issue for the developers to avoid running a lot of queries.\n        if (count($models = $builder->getModels($columns)) > 0) {\n            $models = $builder->eagerLoadRelations($models);\n        }\n\n        return $builder->getModel()->newCollection($models);\n    }\n\n    /**\n     * Get the hydrated models without eager loading.\n     *\n     * @param  array  $columns\n     * @return \\Illuminate\\Database\\Eloquent\\Model[]\n     */\n    public function getModels($columns = ['*'])\n    {\n        return $this->model->hydrate(\n            $this->query->get($columns)->all()\n        )->all();\n    }\n\n    /**\n     * Eager load the relationships for the models.\n     *\n     * @param  array  $models\n     * @return array\n     */\n    public function eagerLoadRelations(array $models)\n    {\n        foreach ($this->eagerLoad as $name => $constraints) {\n            // For nested eager loads we'll skip loading them here and they will be set as an\n            // eager load on the query to retrieve the relation so that they will be eager\n            // loaded on that query, because that is where they get hydrated as models.\n            if (strpos($name, '.') === false) {\n                $models = $this->eagerLoadRelation($models, $name, $constraints);\n            }\n        }\n\n        return $models;\n    }\n\n    /**\n     * Eagerly load the relationship on a set of models.\n     *\n     * @param  array  $models\n     * @param  string  $name\n     * @param  \\Closure  $constraints\n     * @return array\n     */\n    protected function eagerLoadRelation(array $models, $name, Closure $constraints)\n    {\n        // First we will \"back up\" the existing where conditions on the query so we can\n        // add our eager constraints. Then we will merge the wheres that were on the\n        // query back to it in order that any where conditions might be specified.\n        $relation = $this->getRelation($name);\n\n        $relation->addEagerConstraints($models);\n\n        $constraints($relation);\n\n        // Once we have the results, we just match those back up to their parent models\n        // using the relationship instance. Then we just return the finished arrays\n        // of models which have been eagerly hydrated and are readied for return.\n        return $relation->match(\n            $relation->initRelation($models, $name),\n            $relation->getEager(), $name\n        );\n    }\n\n    /**\n     * Get the relation instance for the given relation name.\n     *\n     * @param  string  $name\n     * @return \\Illuminate\\Database\\Eloquent\\Relations\\Relation\n     */\n    public function getRelation($name)\n    {\n        // We want to run a relationship query without any constrains so that we will\n        // not have to remove these where clauses manually which gets really hacky\n        // and error prone. We don't want constraints because we add eager ones.\n        $relation = Relation::noConstraints(function () use ($name) {\n            try {\n                return $this->getModel()->newInstance()->$name();\n            } catch (BadMethodCallException $e) {\n                throw RelationNotFoundException::make($this->getModel(), $name);\n            }\n        });\n\n        $nested = $this->relationsNestedUnder($name);\n\n        // If there are nested relationships set on the query, we will put those onto\n        // the query instances so that they can be handled after this relationship\n        // is loaded. In this way they will all trickle down as they are loaded.\n        if (count($nested) > 0) {\n            $relation->getQuery()->with($nested);\n        }\n\n        return $relation;\n    }\n\n    /**\n     * Get the deeply nested relations for a given top-level relation.\n     *\n     * @param  string  $relation\n     * @return array\n     */\n    protected function relationsNestedUnder($relation)\n    {\n        $nested = [];\n\n        // We are basically looking for any relationships that are nested deeper than\n        // the given top-level relationship. We will just check for any relations\n        // that start with the given top relations and adds them to our arrays.\n        foreach ($this->eagerLoad as $name => $constraints) {\n            if ($this->isNestedUnder($relation, $name)) {\n                $nested[substr($name, strlen($relation.'.'))] = $constraints;\n            }\n        }\n\n        return $nested;\n    }\n\n    /**\n     * Determine if the relationship is nested.\n     *\n     * @param  string  $relation\n     * @param  string  $name\n     * @return bool\n     */\n    protected function isNestedUnder($relation, $name)\n    {\n        return Str::contains($name, '.') && Str::startsWith($name, $relation.'.');\n    }\n\n    /**\n     * Get a generator for the given query.\n     *\n     * @return \\Generator\n     */\n    public function cursor()\n    {\n        foreach ($this->applyScopes()->query->cursor() as $record) {\n            yield $this->model->newFromBuilder($record);\n        }\n    }\n\n    /**\n     * Chunk the results of a query by comparing numeric IDs.\n     *\n     * @param  int  $count\n     * @param  callable  $callback\n     * @param  string  $column\n     * @param  string|null  $alias\n     * @return bool\n     */\n    public function chunkById($count, callable $callback, $column = null, $alias = null)\n    {\n        $column = is_null($column) ? $this->getModel()->getKeyName() : $column;\n\n        $alias = is_null($alias) ? $column : $alias;\n\n        $lastId = 0;\n\n        do {\n            $clone = clone $this;\n\n            // We'll execute the query for the given page and get the results. If there are\n            // no results we can just break and return from here. When there are results\n            // we will call the callback with the current chunk of these results here.\n            $results = $clone->forPageAfterId($count, $lastId, $column)->get();\n\n            $countResults = $results->count();\n\n            if ($countResults == 0) {\n                break;\n            }\n\n            // On each chunk result set, we will pass them to the callback and then let the\n            // developer take care of everything within the callback, which allows us to\n            // keep the memory low for spinning through large result sets for working.\n            if ($callback($results) === false) {\n                return false;\n            }\n\n            $lastId = $results->last()->{$alias};\n\n            unset($results);\n        } while ($countResults == $count);\n\n        return true;\n    }\n\n    /**\n     * Add a generic \"order by\" clause if the query doesn't already have one.\n     *\n     * @return void\n     */\n    protected function enforceOrderBy()\n    {\n        if (empty($this->query->orders) && empty($this->query->unionOrders)) {\n            $this->orderBy($this->model->getQualifiedKeyName(), 'asc');\n        }\n    }\n\n    /**\n     * Get an array with the values of a given column.\n     *\n     * @param  string  $column\n     * @param  string|null  $key\n     * @return \\Illuminate\\Support\\Collection\n     */\n    public function pluck($column, $key = null)\n    {\n        $results = $this->toBase()->pluck($column, $key);\n\n        // If the model has a mutator for the requested column, we will spin through\n        // the results and mutate the values so that the mutated version of these\n        // columns are returned as you would expect from these Eloquent models.\n        if (! $this->model->hasGetMutator($column) &&\n            ! $this->model->hasCast($column) &&\n            ! in_array($column, $this->model->getDates())) {\n            return $results;\n        }\n\n        return $results->map(function ($value) use ($column) {\n            return $this->model->newFromBuilder([$column => $value])->{$column};\n        });\n    }\n\n    /**\n     * Paginate the given query.\n     *\n     * @param  int  $perPage\n     * @param  array  $columns\n     * @param  string  $pageName\n     * @param  int|null  $page\n     * @return \\Illuminate\\Contracts\\Pagination\\LengthAwarePaginator\n     *\n     * @throws \\InvalidArgumentException\n     */\n    public function paginate($perPage = null, $columns = ['*'], $pageName = 'page', $page = null)\n    {\n        $page = $page ?: Paginator::resolveCurrentPage($pageName);\n\n        $perPage = $perPage ?: $this->model->getPerPage();\n\n        $results = ($total = $this->toBase()->getCountForPagination())\n                                    ? $this->forPage($page, $perPage)->get($columns)\n                                    : $this->model->newCollection();\n\n        return $this->paginator($results, $total, $perPage, $page, [\n            'path' => Paginator::resolveCurrentPath(),\n            'pageName' => $pageName,\n        ]);\n    }\n\n    /**\n     * Paginate the given query into a simple paginator.\n     *\n     * @param  int  $perPage\n     * @param  array  $columns\n     * @param  string  $pageName\n     * @param  int|null  $page\n     * @return \\Illuminate\\Contracts\\Pagination\\Paginator\n     */\n    public function simplePaginate($perPage = null, $columns = ['*'], $pageName = 'page', $page = null)\n    {\n        $page = $page ?: Paginator::resolveCurrentPage($pageName);\n\n        $perPage = $perPage ?: $this->model->getPerPage();\n\n        // Next we will set the limit and offset for this query so that when we get the\n        // results we get the proper section of results. Then, we'll create the full\n        // paginator instances for these results with the given page and per page.\n        $this->skip(($page - 1) * $perPage)->take($perPage + 1);\n\n        return $this->simplePaginator($this->get($columns), $perPage, $page, [\n            'path' => Paginator::resolveCurrentPath(),\n            'pageName' => $pageName,\n        ]);\n    }\n\n    /**\n     * Save a new model and return the instance.\n     *\n     * @param  array  $attributes\n     * @return \\Illuminate\\Database\\Eloquent\\Model|$this\n     */\n    public function create(array $attributes = [])\n    {\n        return tap($this->newModelInstance($attributes), function ($instance) {\n            $instance->save();\n        });\n    }\n\n    /**\n     * Save a new model and return the instance. Allow mass-assignment.\n     *\n     * @param  array  $attributes\n     * @return \\Illuminate\\Database\\Eloquent\\Model|$this\n     */\n    public function forceCreate(array $attributes)\n    {\n        return $this->model->unguarded(function () use ($attributes) {\n            return $this->newModelInstance()->create($attributes);\n        });\n    }\n\n    /**\n     * Update a record in the database.\n     *\n     * @param  array  $values\n     * @return int\n     */\n    public function update(array $values)\n    {\n        return $this->toBase()->update($this->addUpdatedAtColumn($values));\n    }\n\n    /**\n     * Increment a column's value by a given amount.\n     *\n     * @param  string  $column\n     * @param  int  $amount\n     * @param  array  $extra\n     * @return int\n     */\n    public function increment($column, $amount = 1, array $extra = [])\n    {\n        return $this->toBase()->increment(\n            $column, $amount, $this->addUpdatedAtColumn($extra)\n        );\n    }\n\n    /**\n     * Decrement a column's value by a given amount.\n     *\n     * @param  string  $column\n     * @param  int  $amount\n     * @param  array  $extra\n     * @return int\n     */\n    public function decrement($column, $amount = 1, array $extra = [])\n    {\n        return $this->toBase()->decrement(\n            $column, $amount, $this->addUpdatedAtColumn($extra)\n        );\n    }\n\n    /**\n     * Add the \"updated at\" column to an array of values.\n     *\n     * @param  array  $values\n     * @return array\n     */\n    protected function addUpdatedAtColumn(array $values)\n    {\n        if (! $this->model->usesTimestamps()) {\n            return $values;\n        }\n\n        return Arr::add(\n            $values, $this->model->getUpdatedAtColumn(),\n            $this->model->freshTimestampString()\n        );\n    }\n\n    /**\n     * Delete a record from the database.\n     *\n     * @return mixed\n     */\n    public function delete()\n    {\n        if (isset($this->onDelete)) {\n            return call_user_func($this->onDelete, $this);\n        }\n\n        return $this->toBase()->delete();\n    }\n\n    /**\n     * Run the default delete function on the builder.\n     *\n     * Since we do not apply scopes here, the row will actually be deleted.\n     *\n     * @return mixed\n     */\n    public function forceDelete()\n    {\n        return $this->query->delete();\n    }\n\n    /**\n     * Register a replacement for the default delete function.\n     *\n     * @param  \\Closure  $callback\n     * @return void\n     */\n    public function onDelete(Closure $callback)\n    {\n        $this->onDelete = $callback;\n    }\n\n    /**\n     * Call the given local model scopes.\n     *\n     * @param  array  $scopes\n     * @return mixed\n     */\n    public function scopes(array $scopes)\n    {\n        $builder = $this;\n\n        foreach ($scopes as $scope => $parameters) {\n            // If the scope key is an integer, then the scope was passed as the value and\n            // the parameter list is empty, so we will format the scope name and these\n            // parameters here. Then, we'll be ready to call the scope on the model.\n            if (is_int($scope)) {\n                list($scope, $parameters) = [$parameters, []];\n            }\n\n            // Next we'll pass the scope callback to the callScope method which will take\n            // care of grouping the \"wheres\" properly so the logical order doesn't get\n            // messed up when adding scopes. Then we'll return back out the builder.\n            $builder = $builder->callScope(\n                [$this->model, 'scope'.ucfirst($scope)],\n                (array) $parameters\n            );\n        }\n\n        return $builder;\n    }\n\n    /**\n     * Apply the scopes to the Eloquent builder instance and return it.\n     *\n     * @return \\Illuminate\\Database\\Eloquent\\Builder|static\n     */\n    public function applyScopes()\n    {\n        if (! $this->scopes) {\n            return $this;\n        }\n\n        $builder = clone $this;\n\n        foreach ($this->scopes as $identifier => $scope) {\n            if (! isset($builder->scopes[$identifier])) {\n                continue;\n            }\n\n            $builder->callScope(function (Builder $builder) use ($scope) {\n                // If the scope is a Closure we will just go ahead and call the scope with the\n                // builder instance. The \"callScope\" method will properly group the clauses\n                // that are added to this query so \"where\" clauses maintain proper logic.\n                if ($scope instanceof Closure) {\n                    $scope($builder);\n                }\n\n                // If the scope is a scope object, we will call the apply method on this scope\n                // passing in the builder and the model instance. After we run all of these\n                // scopes we will return back the builder instance to the outside caller.\n                if ($scope instanceof Scope) {\n                    $scope->apply($builder, $this->getModel());\n                }\n            });\n        }\n\n        return $builder;\n    }\n\n    /**\n     * Apply the given scope on the current builder instance.\n     *\n     * @param  callable  $scope\n     * @param  array  $parameters\n     * @return mixed\n     */\n    protected function callScope(callable $scope, $parameters = [])\n    {\n        array_unshift($parameters, $this);\n\n        $query = $this->getQuery();\n\n        // We will keep track of how many wheres are on the query before running the\n        // scope so that we can properly group the added scope constraints in the\n        // query as their own isolated nested where statement and avoid issues.\n        $originalWhereCount = is_null($query->wheres)\n                    ? 0 : count($query->wheres);\n\n        $result = $scope(...array_values($parameters)) ?? $this;\n\n        if (count((array) $query->wheres) > $originalWhereCount) {\n            $this->addNewWheresWithinGroup($query, $originalWhereCount);\n        }\n\n        return $result;\n    }\n\n    /**\n     * Nest where conditions by slicing them at the given where count.\n     *\n     * @param  \\Illuminate\\Database\\Query\\Builder  $query\n     * @param  int  $originalWhereCount\n     * @return void\n     */\n    protected function addNewWheresWithinGroup(QueryBuilder $query, $originalWhereCount)\n    {\n        // Here, we totally remove all of the where clauses since we are going to\n        // rebuild them as nested queries by slicing the groups of wheres into\n        // their own sections. This is to prevent any confusing logic order.\n        $allWheres = $query->wheres;\n\n        $query->wheres = [];\n\n        $this->groupWhereSliceForScope(\n            $query, array_slice($allWheres, 0, $originalWhereCount)\n        );\n\n        $this->groupWhereSliceForScope(\n            $query, array_slice($allWheres, $originalWhereCount)\n        );\n    }\n\n    /**\n     * Slice where conditions at the given offset and add them to the query as a nested condition.\n     *\n     * @param  \\Illuminate\\Database\\Query\\Builder  $query\n     * @param  array  $whereSlice\n     * @return void\n     */\n    protected function groupWhereSliceForScope(QueryBuilder $query, $whereSlice)\n    {\n        $whereBooleans = collect($whereSlice)->pluck('boolean');\n\n        // Here we'll check if the given subset of where clauses contains any \"or\"\n        // booleans and in this case create a nested where expression. That way\n        // we don't add any unnecessary nesting thus keeping the query clean.\n        if ($whereBooleans->contains('or')) {\n            $query->wheres[] = $this->createNestedWhere(\n                $whereSlice, $whereBooleans->first()\n            );\n        } else {\n            $query->wheres = array_merge($query->wheres, $whereSlice);\n        }\n    }\n\n    /**\n     * Create a where array with nested where conditions.\n     *\n     * @param  array  $whereSlice\n     * @param  string  $boolean\n     * @return array\n     */\n    protected function createNestedWhere($whereSlice, $boolean = 'and')\n    {\n        $whereGroup = $this->getQuery()->forNestedWhere();\n\n        $whereGroup->wheres = $whereSlice;\n\n        return ['type' => 'Nested', 'query' => $whereGroup, 'boolean' => $boolean];\n    }\n\n    /**\n     * Set the relationships that should be eager loaded.\n     *\n     * @param  mixed  $relations\n     * @return $this\n     */\n    public function with($relations)\n    {\n        $eagerLoad = $this->parseWithRelations(is_string($relations) ? func_get_args() : $relations);\n\n        $this->eagerLoad = array_merge($this->eagerLoad, $eagerLoad);\n\n        return $this;\n    }\n\n    /**\n     * Prevent the specified relations from being eager loaded.\n     *\n     * @param  mixed  $relations\n     * @return $this\n     */\n    public function without($relations)\n    {\n        $this->eagerLoad = array_diff_key($this->eagerLoad, array_flip(\n            is_string($relations) ? func_get_args() : $relations\n        ));\n\n        return $this;\n    }\n\n    /**\n     * Create a new instance of the model being queried.\n     *\n     * @param  array  $attributes\n     * @return \\Illuminate\\Database\\Eloquent\\Model\n     */\n    public function newModelInstance($attributes = [])\n    {\n        return $this->model->newInstance($attributes)->setConnection(\n            $this->query->getConnection()->getName()\n        );\n    }\n\n    /**\n     * Parse a list of relations into individuals.\n     *\n     * @param  array  $relations\n     * @return array\n     */\n    protected function parseWithRelations(array $relations)\n    {\n        $results = [];\n\n        foreach ($relations as $name => $constraints) {\n            // If the \"relation\" value is actually a numeric key, we can assume that no\n            // constraints have been specified for the eager load and we'll just put\n            // an empty Closure with the loader so that we can treat all the same.\n            if (is_numeric($name)) {\n                $name = $constraints;\n\n                list($name, $constraints) = Str::contains($name, ':')\n                            ? $this->createSelectWithConstraint($name)\n                            : [$name, function () {\n                                //\n                            }];\n            }\n\n            // We need to separate out any nested includes. Which allows the developers\n            // to load deep relationships using \"dots\" without stating each level of\n            // the relationship with its own key in the array of eager load names.\n            $results = $this->addNestedWiths($name, $results);\n\n            $results[$name] = $constraints;\n        }\n\n        return $results;\n    }\n\n    /**\n     * Create a constraint to select the given columns for the relation.\n     *\n     * @param  string  $name\n     * @return array\n     */\n    protected function createSelectWithConstraint($name)\n    {\n        return [explode(':', $name)[0], function ($query) use ($name) {\n            $query->select(explode(',', explode(':', $name)[1]));\n        }];\n    }\n\n    /**\n     * Parse the nested relationships in a relation.\n     *\n     * @param  string  $name\n     * @param  array  $results\n     * @return array\n     */\n    protected function addNestedWiths($name, $results)\n    {\n        $progress = [];\n\n        // If the relation has already been set on the result array, we will not set it\n        // again, since that would override any constraints that were already placed\n        // on the relationships. We will only set the ones that are not specified.\n        foreach (explode('.', $name) as $segment) {\n            $progress[] = $segment;\n\n            if (! isset($results[$last = implode('.', $progress)])) {\n                $results[$last] = function () {\n                    //\n                };\n            }\n        }\n\n        return $results;\n    }\n\n    /**\n     * Get the underlying query builder instance.\n     *\n     * @return \\Illuminate\\Database\\Query\\Builder\n     */\n    public function getQuery()\n    {\n        return $this->query;\n    }\n\n    /**\n     * Set the underlying query builder instance.\n     *\n     * @param  \\Illuminate\\Database\\Query\\Builder  $query\n     * @return $this\n     */\n    public function setQuery($query)\n    {\n        $this->query = $query;\n\n        return $this;\n    }\n\n    /**\n     * Get a base query builder instance.\n     *\n     * @return \\Illuminate\\Database\\Query\\Builder\n     */\n    public function toBase()\n    {\n        return $this->applyScopes()->getQuery();\n    }\n\n    /**\n     * Get the relationships being eagerly loaded.\n     *\n     * @return array\n     */\n    public function getEagerLoads()\n    {\n        return $this->eagerLoad;\n    }\n\n    /**\n     * Set the relationships being eagerly loaded.\n     *\n     * @param  array  $eagerLoad\n     * @return $this\n     */\n    public function setEagerLoads(array $eagerLoad)\n    {\n        $this->eagerLoad = $eagerLoad;\n\n        return $this;\n    }\n\n    /**\n     * Get the model instance being queried.\n     *\n     * @return \\Illuminate\\Database\\Eloquent\\Model\n     */\n    public function getModel()\n    {\n        return $this->model;\n    }\n\n    /**\n     * Set a model instance for the model being queried.\n     *\n     * @param  \\Illuminate\\Database\\Eloquent\\Model  $model\n     * @return $this\n     */\n    public function setModel(Model $model)\n    {\n        $this->model = $model;\n\n        $this->query->from($model->getTable());\n\n        return $this;\n    }\n\n    /**\n     * Qualify the given column name by the model's table.\n     *\n     * @param  string  $column\n     * @return string\n     */\n    public function qualifyColumn($column)\n    {\n        return $this->model->qualifyColumn($column);\n    }\n\n    /**\n     * Get the given macro by name.\n     *\n     * @param  string  $name\n     * @return \\Closure\n     */\n    public function getMacro($name)\n    {\n        return Arr::get($this->localMacros, $name);\n    }\n\n    /**\n     * Dynamically handle calls into the query instance.\n     *\n     * @param  string  $method\n     * @param  array  $parameters\n     * @return mixed\n     */\n    public function __call($method, $parameters)\n    {\n        if ($method === 'macro') {\n            $this->localMacros[$parameters[0]] = $parameters[1];\n\n            return;\n        }\n\n        if (isset($this->localMacros[$method])) {\n            array_unshift($parameters, $this);\n\n            return $this->localMacros[$method](...$parameters);\n        }\n\n        if (isset(static::$macros[$method])) {\n            if (static::$macros[$method] instanceof Closure) {\n                return call_user_func_array(static::$macros[$method]->bindTo($this, static::class), $parameters);\n            }\n\n            return call_user_func_array(static::$macros[$method], $parameters);\n        }\n\n        if (method_exists($this->model, $scope = 'scope'.ucfirst($method))) {\n            return $this->callScope([$this->model, $scope], $parameters);\n        }\n\n        if (in_array($method, $this->passthru)) {\n            return $this->toBase()->{$method}(...$parameters);\n        }\n\n        $this->query->{$method}(...$parameters);\n\n        return $this;\n    }\n\n    /**\n     * Dynamically handle calls into the query instance.\n     *\n     * @param  string  $method\n     * @param  array  $parameters\n     * @return mixed\n     *\n     * @throws \\BadMethodCallException\n     */\n    public static function __callStatic($method, $parameters)\n    {\n        if ($method === 'macro') {\n            static::$macros[$parameters[0]] = $parameters[1];\n\n            return;\n        }\n\n        if (! isset(static::$macros[$method])) {\n            throw new BadMethodCallException(\"Method {$method} does not exist.\");\n        }\n\n        if (static::$macros[$method] instanceof Closure) {\n            return call_user_func_array(Closure::bind(static::$macros[$method], null, static::class), $parameters);\n        }\n\n        return call_user_func_array(static::$macros[$method], $parameters);\n    }\n\n    /**\n     * Force a clone of the underlying query builder when cloning.\n     *\n     * @return void\n     */\n    public function __clone()\n    {\n        $this->query = clone $this->query;\n    }\n}\n","repo_name":"drthomas21/WordPress_Tutorial","path":"community_htdocs/vendor/illuminate/database/Eloquent/Builder.php","language":"PHP","license":"apache-2.0","size":37905},"truncated_cells":[]},{"row_idx":83,"row":{"code":"package operationExtensibility.tests;\r\n\r\nimport static org.junit.Assert.assertEquals;\r\nimport org.junit.BeforeClass;\r\nimport org.junit.Test;\r\nimport operationExtensibility.*;\r\n\r\npublic class TestEvaluator {\r\n\r\n\tprivate static Visitor<Integer> v;\r\n\t\r\n\t@BeforeClass\r\n\tpublic static void setUpBeforeClass() throws Exception {\r\n\t\tv = new Evaluator();\r\n\t}\r\n\t\r\n\t@Test\r\n\tpublic void testLit() {\r\n\t\tLit x = new Lit();\r\n\t\tx.setInfo(42);\r\n\t\tassertEquals(\"evaluate a literal\", 42, x.accept(v));\r\n\t}\r\n\t\r\n\t@Test\r\n\tpublic void testAdd() {\r\n\t\tAdd x = new Add();\r\n\t\tLit y = new Lit();\r\n\t\ty.setInfo(1);\r\n\t\tx.setLeft(y);\r\n\t\ty = new Lit();\r\n\t\ty.setInfo(2);\r\n\t\tx.setRight(y);\r\n\t\tassertEquals(\"evaluate addition\", 3, x.accept(v));\r\n\t}\t\r\n}\r\n","repo_name":"egaburov/funstuff","path":"Haskell/tytag/xproblem_src/samples/expressions/Java/operationExtensibility/tests/TestEvaluator.java","language":"Java","license":"apache-2.0","size":719},"truncated_cells":[]},{"row_idx":84,"row":{"code":"\nusing System;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing AspNetCoreTodo.Models;\n\nnamespace AspNetCoreTodo.Services\n{\n    public interface ITodoItemService\n    {\n        Task<IEnumerable<TodoItem>> GetIncompleteItemsAsync(ApplicationUser user);\n        Task<bool> AddItemAsync(NewTodoItem newItem, ApplicationUser user);\n        Task<bool> MarkDoneAsync(Guid id, ApplicationUser user);\n    }\n}","repo_name":"nqdien/littleaspnetcorebook","path":"Services/ITodoItemService.cs","language":"C#","license":"apache-2.0","size":420},"truncated_cells":[]},{"row_idx":85,"row":{"code":"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Frameset//EN\"\"http://www.w3.org/TR/REC-html40/frameset.dtd\">\n<HTML>\n<HEAD>\n<meta name=\"generator\" content=\"JDiff v1.0.9\">\n<!-- Generated by the JDiff Javadoc doclet -->\n<!-- (http://www.jdiff.org) -->\n<meta name=\"description\" content=\"JDiff is a Javadoc doclet which generates an HTML report of all the packages, classes, constructors, methods, and fields which have been removed, added or changed in any way, including their documentation, when two APIs are compared.\">\n<meta name=\"keywords\" content=\"diff, jdiff, javadiff, java diff, java difference, API difference, difference between two APIs, API diff, Javadoc, doclet\">\n<TITLE>\norg.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSecondaryKeyComparator\n</TITLE>\n<LINK REL=\"stylesheet\" TYPE=\"text/css\" HREF=\"../stylesheet-jdiff.css\" TITLE=\"Style\">\n</HEAD>\n<BODY>\n<!-- Start of nav bar -->\n<TABLE summary=\"Navigation bar\" BORDER=\"0\" WIDTH=\"100%\" CELLPADDING=\"1\" CELLSPACING=\"0\">\n  <TR>\n    <TD COLSPAN=2 BGCOLOR=\"#EEEEFF\" CLASS=\"NavBarCell1\">\n    <TABLE summary=\"Navigation bar\" BORDER=\"0\" CELLPADDING=\"0\" CELLSPACING=\"3\">\n    <TR ALIGN=\"center\" VALIGN=\"top\">\n      <TD BGCOLOR=\"#EEEEFF\" CLASS=\"NavBarCell1\"> <A HREF=\"../../api/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigSecondaryKeyComparator.html\" target=\"_top\"><FONT CLASS=\"NavBarFont1\"><B><tt>pig 0.8.0-CDH3B4-SNAPSHOT</tt></B></FONT></A>&nbsp;</TD>\n      <TD BGCOLOR=\"#EEEEFF\" CLASS=\"NavBarCell1\"> <A HREF=\"changes-summary.html\"><FONT CLASS=\"NavBarFont1\"><B>Overview</B></FONT></A>&nbsp;</TD>\n      <TD BGCOLOR=\"#EEEEFF\" CLASS=\"NavBarCell1\"> <A HREF=\"pkg_org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.html\"><FONT CLASS=\"NavBarFont1\"><B>Package</B></FONT></A>&nbsp;</TD>\n      <TD BGCOLOR=\"#FFFFFF\" CLASS=\"NavBarCell1Rev\"> &nbsp;<FONT CLASS=\"NavBarFont1Rev\"><B>Class</B></FONT>&nbsp;</TD>\n      <TD BGCOLOR=\"#EEEEFF\" CLASS=\"NavBarCell1\"> <A HREF=\"jdiff_statistics.html\"><FONT CLASS=\"NavBarFont1\"><B>Statistics</B></FONT></A>&nbsp;</TD>\n      <TD BGCOLOR=\"#EEEEFF\" CLASS=\"NavBarCell1\"> <A HREF=\"jdiff_help.html\"><FONT CLASS=\"NavBarFont1\"><B>Help</B></FONT></A>&nbsp;</TD>\n    </TR>\n    </TABLE>\n  </TD>\n  <TD ALIGN=\"right\" VALIGN=\"top\" ROWSPAN=3><EM><b>Generated by<br><a href=\"http://www.jdiff.org\" class=\"staysblack\" target=\"_top\">JDiff</a></b></EM></TD>\n</TR>\n<TR>\n  <TD BGCOLOR=\"#FFFFFF\" CLASS=\"NavBarCell2\"><FONT SIZE=\"-2\">\n&nbsp;<A HREF=\"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigRecordReader.html\"><B>PREV CLASS</B></A>\n&nbsp;<A HREF=\"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.html\"><B>NEXT CLASS</B></A>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n  <A HREF=\"../changes.html\" TARGET=\"_top\"><B>FRAMES</B></A>  &nbsp;\n  &nbsp;<A HREF=\"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSecondaryKeyComparator.html\" TARGET=\"_top\"><B>NO FRAMES</B></A></FONT></TD>\n  <TD BGCOLOR=\"#FFFFFF\" CLASS=\"NavBarCell3\"><FONT SIZE=\"-2\"> DETAIL: &nbsp;\n<a href=\"#constructors\">CONSTRUCTORS</a>&nbsp;|&nbsp;\n<a href=\"#methods\">METHODS</a>&nbsp;|&nbsp;\nFIELDS\n  </FONT></TD>\n</TR>\n</TABLE>\n<HR>\n<!-- End of nav bar -->\n<H2>\nClass org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.<A HREF=\"../../api/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigSecondaryKeyComparator.html\" target=\"_top\"><tt>PigSecondaryKeyComparator</tt></A>\n</H2>\n<a NAME=\"constructors\"></a>\n<p>\n<a NAME=\"Changed\"></a>\n<TABLE summary=\"Changed Constructors\" BORDER=\"1\" CELLPADDING=\"3\" CELLSPACING=\"0\" WIDTH=\"100%\">\n<TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\">\n  <TD VALIGN=\"TOP\" COLSPAN=3><FONT SIZE=\"+1\"><B>Changed Constructors</B></FONT></TD>\n</TR>\n<TR BGCOLOR=\"#FFFFFF\" CLASS=\"TableRowColor\">\n  <TD VALIGN=\"TOP\" WIDTH=\"25%\">\n  <A NAME=\"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSecondaryKeyComparator.ctor_changed()\"></A>\n  <nobr><A HREF=\"../../api/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigSecondaryKeyComparator.html#PigSecondaryKeyComparator()\" target=\"_top\"><tt>PigSecondaryKeyComparator</tt></A>(<code>void</code>)  </nobr>\n  </TD>\n  <TD VALIGN=\"TOP\" WIDTH=\"30%\">\nChange of visibility from public to protected.<br>\n  </TD>\n  <TD>&nbsp;</TD>\n</TR>\n</TABLE>\n&nbsp;\n<a NAME=\"methods\"></a>\n<p>\n<a NAME=\"Removed\"></a>\n<TABLE summary=\"Removed Methods\" BORDER=\"1\" CELLPADDING=\"3\" CELLSPACING=\"0\" WIDTH=\"100%\">\n<TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\">\n  <TD VALIGN=\"TOP\" COLSPAN=2><FONT SIZE=\"+1\"><B>Removed Methods</B></FONT></TD>\n</TR>\n<TR BGCOLOR=\"#FFFFFF\" CLASS=\"TableRowColor\">\n  <TD VALIGN=\"TOP\" WIDTH=\"25%\">\n  <A NAME=\"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSecondaryKeyComparator.compare_removed(java.lang.Object, java.lang.Object, int, int, boolean[], boolean)\"></A>\n  <nobr><code>int</code>&nbsp;<A HREF=\"http://hadoop.apache.org/pig/docs/r0.7.0/api/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigSecondaryKeyComparator.html#compare(java.lang.Object, java.lang.Object, int, int, boolean[], boolean)\" target=\"_top\"><tt>compare</tt></A>(<code>Object,</nobr> Object<nobr>,</nobr> int<nobr>,</nobr> int<nobr>,</nobr> boolean[]<nobr>,</nobr> boolean<nobr><nobr></code>)</nobr>\n  </TD>\n  <TD>&nbsp;</TD>\n</TR>\n</TABLE>\n&nbsp;\n<a NAME=\"fields\"></a>\n<HR>\n<!-- Start of nav bar -->\n<TABLE summary=\"Navigation bar\" BORDER=\"0\" WIDTH=\"100%\" CELLPADDING=\"1\" CELLSPACING=\"0\">\n  <TR>\n    <TD COLSPAN=2 BGCOLOR=\"#EEEEFF\" CLASS=\"NavBarCell1\">\n    <TABLE summary=\"Navigation bar\" BORDER=\"0\" CELLPADDING=\"0\" CELLSPACING=\"3\">\n    <TR ALIGN=\"center\" VALIGN=\"top\">\n      <TD BGCOLOR=\"#EEEEFF\" CLASS=\"NavBarCell1\"> <A HREF=\"../../api/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigSecondaryKeyComparator.html\" target=\"_top\"><FONT CLASS=\"NavBarFont1\"><B><tt>pig 0.8.0-CDH3B4-SNAPSHOT</tt></B></FONT></A>&nbsp;</TD>\n      <TD BGCOLOR=\"#EEEEFF\" CLASS=\"NavBarCell1\"> <A HREF=\"changes-summary.html\"><FONT CLASS=\"NavBarFont1\"><B>Overview</B></FONT></A>&nbsp;</TD>\n      <TD BGCOLOR=\"#EEEEFF\" CLASS=\"NavBarCell1\"> <A HREF=\"pkg_org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.html\"><FONT CLASS=\"NavBarFont1\"><B>Package</B></FONT></A>&nbsp;</TD>\n      <TD BGCOLOR=\"#FFFFFF\" CLASS=\"NavBarCell1Rev\"> &nbsp;<FONT CLASS=\"NavBarFont1Rev\"><B>Class</B></FONT>&nbsp;</TD>\n      <TD BGCOLOR=\"#EEEEFF\" CLASS=\"NavBarCell1\"> <A HREF=\"jdiff_statistics.html\"><FONT CLASS=\"NavBarFont1\"><B>Statistics</B></FONT></A>&nbsp;</TD>\n      <TD BGCOLOR=\"#EEEEFF\" CLASS=\"NavBarCell1\"> <A HREF=\"jdiff_help.html\"><FONT CLASS=\"NavBarFont1\"><B>Help</B></FONT></A>&nbsp;</TD>\n    </TR>\n    </TABLE>\n  </TD>\n  <TD ALIGN=\"right\" VALIGN=\"top\" ROWSPAN=3></TD>\n</TR>\n<TR>\n  <TD BGCOLOR=\"#FFFFFF\" CLASS=\"NavBarCell2\"><FONT SIZE=\"-2\">\n&nbsp;<A HREF=\"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigRecordReader.html\"><B>PREV CLASS</B></A>\n&nbsp;<A HREF=\"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit.html\"><B>NEXT CLASS</B></A>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n  <A HREF=\"../changes.html\" TARGET=\"_top\"><B>FRAMES</B></A>  &nbsp;\n  &nbsp;<A HREF=\"org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSecondaryKeyComparator.html\" TARGET=\"_top\"><B>NO FRAMES</B></A></FONT></TD>\n<TD BGCOLOR=\"0xFFFFFF\" CLASS=\"NavBarCell3\"></TD>\n</TR>\n</TABLE>\n<HR>\n<!-- End of nav bar -->\n</BODY>\n</HTML>\n","repo_name":"simplegeo/hadoop-pig","path":"docs/jdiff/changes/org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSecondaryKeyComparator.html","language":"HTML","license":"apache-2.0","size":7373},"truncated_cells":[]},{"row_idx":86,"row":{"code":"/*\n *  Licensed to the Apache Software Foundation (ASF) under one or more\n *  contributor license agreements.  See the NOTICE file distributed with\n *  this work for additional information regarding copyright ownership.\n *  The ASF licenses this file to You under the Apache License, Version 2.0\n *  (the \"License\"); you may not use this file except in compliance with\n *  the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\npackage org.apache.ivy.core.pack;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.InputStream;\n\nimport org.apache.ivy.util.FileUtil;\n\n/**\n * Packaging which handle OSGi bundles with inner packed jar\n */\npublic class OsgiBundlePacking extends ZipPacking {\n\n    private static final String[] NAMES = {\"bundle\"};\n\n    @Override\n    public String[] getNames() {\n        return NAMES;\n    }\n\n    @Override\n    protected void writeFile(InputStream zip, File f) throws IOException {\n        // XXX maybe we should only unpack file listed by the 'Bundle-ClassPath' MANIFEST header ?\n        if (f.getName().endsWith(\".jar.pack.gz\")) {\n            zip = FileUtil.unwrapPack200(zip);\n            f = new File(f.getParentFile(), f.getName().substring(0, f.getName().length() - 8));\n        }\n        super.writeFile(zip, f);\n    }\n}\n","repo_name":"jaikiran/ant-ivy","path":"src/java/org/apache/ivy/core/pack/OsgiBundlePacking.java","language":"Java","license":"apache-2.0","size":1656},"truncated_cells":[]},{"row_idx":87,"row":{"code":"package fr.openwide.core.wicket.more.markup.html.feedback;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.apache.wicket.MarkupContainer;\nimport org.apache.wicket.feedback.FeedbackMessage;\nimport org.apache.wicket.markup.html.panel.FeedbackPanel;\nimport org.apache.wicket.markup.html.panel.Panel;\n\npublic abstract class AbstractFeedbackPanel extends Panel {\n\t\n\tprivate static final long serialVersionUID = 8440891357292721078L;\n\t\n\tprivate static final int[] ERROR_MESSAGE_LEVELS = {\n\t\tFeedbackMessage.FATAL,\n\t\tFeedbackMessage.ERROR,\n\t\tFeedbackMessage.WARNING,\n\t\tFeedbackMessage.SUCCESS,\n\t\tFeedbackMessage.INFO,\n\t\tFeedbackMessage.DEBUG,\n\t\tFeedbackMessage.UNDEFINED\n\t};\n\t\n\tprivate static final String[] ERROR_MESSAGE_LEVEL_NAMES = {\n\t\t\"FATAL\",\n\t\t\"ERROR\",\n\t\t\"WARNING\",\n\t\t\"SUCCESS\",\n\t\t\"INFO\",\n\t\t\"DEBUG\",\n\t\t\"UNDEFINED\"\n\t};\n\t\n\tprivate List<FeedbackPanel> feedbackPanels = new ArrayList<FeedbackPanel>();\n\n\tpublic AbstractFeedbackPanel(String id, MarkupContainer container) {\n\t\tsuper(id);\n\t\t\n\t\tint i = 0;\n\t\tfor(int level: ERROR_MESSAGE_LEVELS) {\n\t\t\tFeedbackPanel f = getFeedbackPanel(ERROR_MESSAGE_LEVEL_NAMES[i] + \"feedbackPanel\", level, container);\n\t\t\tfeedbackPanels.add(f);\n\t\t\tadd(f);\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\tpublic abstract FeedbackPanel getFeedbackPanel(String id, int level, MarkupContainer container);\n}\n","repo_name":"openwide-java/owsi-core-parent","path":"owsi-core/owsi-core-components/owsi-core-component-wicket-more/src/main/java/fr/openwide/core/wicket/more/markup/html/feedback/AbstractFeedbackPanel.java","language":"Java","license":"apache-2.0","size":1314},"truncated_cells":[]},{"row_idx":88,"row":{"code":"<h3 class=\"page-header\">Розв'язок</h3>\n\n<div class=\"task-solution-top\"></div>\n<div class=\"task-solution-bg\">\n    <p>\n        В першу чергу, обчислимо ОДЗ:\n    </p>\n    <div class=\"formula-block\">\n        \\begin{equation*}\n        \\begin{aligned}\n        \\mbox{ОДЗ}:\\;&x-3\\geq 0;\\\\\n        &x\\geq 3;\n        \\end{aligned}\n        \\end{equation*}\n    </div>\n    <p>\n        Перший доданок є завжди додатним, бо це квадратний корінь. Другий доданок,\n        також завжди додатний, бо це модуль. Очевидно, що сума двох додатних чисел\n        рівна нулю лише тоді, коли ці числа рівні нулю. Тобто, ми маємо таку систему:\n    </p>\n    <div class=\"formula-block\">\n        \\begin{equation*}\n        \\begin{aligned}\n        &\\left\\{\n        \\begin{aligned}\n        &x-3=0,\\\\\n        &x^2-9=0;\n        \\end{aligned}\n        \\right.\\\\\n        &\\left\\{\n        \\begin{aligned}\n        &x=3,\\\\\n        &x=\\pm 3;\n        \\end{aligned}\n        \\right.\n        \\end{aligned}\n        \\end{equation*}\n    </div>\n    <p>\n        Значення $x=-3$ не задовольняє ОДЗ, тому відповідь буде:\n    </p>\n    <div class=\"formula-block\">\n        $$x=3.$$\n    </div>\n</div>\n","repo_name":"SMHFandA/Tex.TasksSolutions","path":"site/uk/chapter_5/group_1/solutions/solution_5_1_8.html","language":"HTML","license":"apache-2.0","size":1399},"truncated_cells":[]},{"row_idx":89,"row":{"code":"<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');\n/*\n| -------------------------------------------------------------------------\n| URI ROUTING\n| -------------------------------------------------------------------------\n| This file lets you re-map URI requests to specific controller functions.\n|\n| Typically there is a one-to-one relationship between a URL string\n| and its corresponding controller class/method. The segments in a\n| URL normally follow this pattern:\n|\n|\texample.com/class/method/id/\n|\n| In some instances, however, you may want to remap this relationship\n| so that a different class/function is called than the one\n| corresponding to the URL.\n|\n| Please see the user guide for complete details:\n|\n|\thttp://codeigniter.com/user_guide/general/routing.html\n|\n| -------------------------------------------------------------------------\n| RESERVED ROUTES\n| -------------------------------------------------------------------------\n|\n| There area two reserved routes:\n|\n|\t$route['default_controller'] = 'welcome';\n|\n| This route indicates which controller class should be loaded if the\n| URI contains no data. In the above example, the \"welcome\" class\n| would be loaded.\n|\n|\t$route['404_override'] = 'errors/page_missing';\n|\n| This route will tell the Router what URI segments to use if those provided\n| in the URL cannot be matched to a valid route.\n|\n*/\n\n$route['default_controller'] = \"reader\";\n$route['sitemap.xml'] = \"reader/sitemap\";\n$route['rss.xml'] = \"reader/feeds\";\n$route['atom.xml'] = \"reader/feeds/atom\";\n$route['admin'] = \"admin/series\";\n$route['admin/series/series/(:any)'] = \"admin/series/serie/$1\";\n$route['account'] = \"account/index/profile\";\n$route['account/profile'] = \"account/index/profile\";\n$route['account/teams'] = \"account/index/teams\";\n$route['account/leave_team/(:any)'] = \"account/index/leave_team/$1\";\n$route['account/request/(:any)'] = \"account/index/request/$1\";\n$route['account/leave_leadership/(:any)'] = \"account/index/leave_leadership/$1\";\n$route['reader/list'] = 'reader/lista';\n$route['reader/list/(:num)'] = 'reader/lista/$1';\n$route['admin/members/members'] = 'admin/members/membersa';\n\n// added for compatibility on upgrade 0.8.1 -> 0.8.2 on 30/09/2011\n$route['admin/upgrade'] = 'admin/system/upgrade';\n$route['404_override'] = '';\n\n\n/* End of file routes.php */\n/* Location: ./application/config/routes.php */","repo_name":"woxxy/FoOlSlide","path":"application/config/routes.php","language":"PHP","license":"apache-2.0","size":2388},"truncated_cells":[]},{"row_idx":90,"row":{"code":"/*\r\n * EditorMouseMenu.java\r\n *\r\n * Created on March 21, 2007, 10:34 AM; Updated May 29, 2007\r\n *\r\n * Copyright 2007 Grotto Networking\r\n */\r\n\r\npackage Samples.MouseMenu;\r\n\r\nimport edu.uci.ics.jung.algorithms.layout.Layout;\r\nimport edu.uci.ics.jung.algorithms.layout.StaticLayout;\r\nimport edu.uci.ics.jung.graph.SparseMultigraph;\r\nimport edu.uci.ics.jung.visualization.VisualizationViewer;\r\nimport edu.uci.ics.jung.visualization.control.EditingModalGraphMouse;\r\nimport edu.uci.ics.jung.visualization.control.ModalGraphMouse;\r\nimport edu.uci.ics.jung.visualization.decorators.ToStringLabeller;\r\nimport java.awt.Dimension;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JPopupMenu;\r\n\r\n/**\r\n * Illustrates the use of custom edge and vertex classes in a graph editing application.\r\n * Demonstrates a new graph mouse plugin for bringing up popup menus for vertices and\r\n * edges.\r\n * @author Dr. Greg M. Bernstein\r\n */\r\npublic class EditorMouseMenu {\r\n    \r\n    /**\r\n     * @param args the command line arguments\r\n     */\r\n    public static void main(String[] args) {        \r\n        JFrame frame = new JFrame(\"Editing and Mouse Menu Demo\");\r\n        SparseMultigraph<GraphElements.MyVertex, GraphElements.MyEdge> g = \r\n                new SparseMultigraph<GraphElements.MyVertex, GraphElements.MyEdge>();\r\n        // Layout<V, E>, VisualizationViewer<V,E>\r\n//        Map<GraphElements.MyVertex,Point2D> vertexLocations = new HashMap<GraphElements.MyVertex, Point2D>();\r\n        Layout<GraphElements.MyVertex, GraphElements.MyEdge> layout = new StaticLayout(g);\r\n        layout.setSize(new Dimension(300,300));\r\n        VisualizationViewer<GraphElements.MyVertex,GraphElements.MyEdge> vv = \r\n                new VisualizationViewer<GraphElements.MyVertex,GraphElements.MyEdge>(layout);\r\n        vv.setPreferredSize(new Dimension(350,350));\r\n        // Show vertex and edge labels\r\n        vv.getRenderContext().setVertexLabelTransformer(new ToStringLabeller());\r\n        vv.getRenderContext().setEdgeLabelTransformer(new ToStringLabeller());\r\n        // Create a graph mouse and add it to the visualization viewer\r\n        EditingModalGraphMouse gm = new EditingModalGraphMouse(vv.getRenderContext(), \r\n                 GraphElements.MyVertexFactory.getInstance(),\r\n                GraphElements.MyEdgeFactory.getInstance()); \r\n        // Set some defaults for the Edges...\r\n        GraphElements.MyEdgeFactory.setDefaultCapacity(192.0);\r\n        GraphElements.MyEdgeFactory.setDefaultWeight(5.0);\r\n        // Trying out our new popup menu mouse plugin...\r\n        PopupVertexEdgeMenuMousePlugin myPlugin = new PopupVertexEdgeMenuMousePlugin();\r\n        // Add some popup menus for the edges and vertices to our mouse plugin.\r\n        JPopupMenu edgeMenu = new MyMouseMenus.EdgeMenu(frame);\r\n        JPopupMenu vertexMenu = new MyMouseMenus.VertexMenu();\r\n        myPlugin.setEdgePopup(edgeMenu);\r\n        myPlugin.setVertexPopup(vertexMenu);\r\n        gm.remove(gm.getPopupEditingPlugin());  // Removes the existing popup editing plugin\r\n        \r\n        gm.add(myPlugin);   // Add our new plugin to the mouse\r\n        \r\n        vv.setGraphMouse(gm);\r\n\r\n        \r\n        //JFrame frame = new JFrame(\"Editing and Mouse Menu Demo\");\r\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        frame.getContentPane().add(vv);\r\n        \r\n        // Let's add a menu for changing mouse modes\r\n        JMenuBar menuBar = new JMenuBar();\r\n        JMenu modeMenu = gm.getModeMenu();\r\n        modeMenu.setText(\"Mouse Mode\");\r\n        modeMenu.setIcon(null); // I'm using this in a main menu\r\n        modeMenu.setPreferredSize(new Dimension(80,20)); // Change the size so I can see the text\r\n        \r\n        menuBar.add(modeMenu);\r\n        frame.setJMenuBar(menuBar);\r\n        gm.setMode(ModalGraphMouse.Mode.EDITING); // Start off in editing mode\r\n        frame.pack();\r\n        frame.setVisible(true);    \r\n    }\r\n    \r\n}\r\n","repo_name":"ksotala/BayesGame","path":"BayesGame/src/Samples/MouseMenu/EditorMouseMenu.java","language":"Java","license":"apache-2.0","size":3984},"truncated_cells":[]},{"row_idx":91,"row":{"code":"# vim: tabstop=4 shiftwidth=4 softtabstop=4\n#\n# Copyright 2016 Eugene Frolov <eugene@frolov.net.ru>\n#\n# All Rights Reserved.\n#\n#    Licensed under the Apache License, Version 2.0 (the \"License\"); you may\n#    not use this file except in compliance with the License. You may obtain\n#    a copy of the License at\n#\n#         http://www.apache.org/licenses/LICENSE-2.0\n#\n#    Unless required by applicable law or agreed to in writing, software\n#    distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n#    License for the specific language governing permissions and limitations\n#    under the License.\n\nimport random\nimport uuid as pyuuid\n\nimport mock\nimport requests\nfrom six.moves.urllib import parse\n\nfrom restalchemy.common import utils\nfrom restalchemy.storage import exceptions\nfrom restalchemy.storage.sql import engines\nfrom restalchemy.tests.functional.restapi.ra_based.microservice import (\n    storable_models as models)\nfrom restalchemy.tests.functional.restapi.ra_based.microservice import consts\nfrom restalchemy.tests.functional.restapi.ra_based.microservice import service\nfrom restalchemy.tests.unit import base\n\n\nTEMPL_SERVICE_ENDPOINT = utils.lastslash(\"http://127.0.0.1:%s/\")\nTEMPL_ROOT_COLLECTION_ENDPOINT = TEMPL_SERVICE_ENDPOINT\nTEMPL_V1_COLLECTION_ENDPOINT = utils.lastslash(parse.urljoin(\n    TEMPL_SERVICE_ENDPOINT, 'v1'))\nTEMPL_VMS_COLLECTION_ENDPOINT = utils.lastslash(parse.urljoin(\n    TEMPL_V1_COLLECTION_ENDPOINT, 'vms'))\nTEMPL_VM_RESOURCE_ENDPOINT = parse.urljoin(TEMPL_VMS_COLLECTION_ENDPOINT, '%s')\nTEMPL_POWERON_ACTION_ENDPOINT = parse.urljoin(\n    utils.lastslash(TEMPL_VM_RESOURCE_ENDPOINT),\n    'actions/poweron/invoke')\nTEMPL_PORTS_COLLECTION_ENDPOINT = utils.lastslash(parse.urljoin(\n    utils.lastslash(TEMPL_VM_RESOURCE_ENDPOINT), 'ports'))\nTEMPL_PORT_RESOURCE_ENDPOINT = parse.urljoin(TEMPL_PORTS_COLLECTION_ENDPOINT,\n                                             '%s')\n\n\nclass BaseResourceTestCase(base.BaseTestCase):\n\n    def get_endpoint(self, template, *args):\n        return template % ((self.service_port,) + tuple(args))\n\n    def setUp(self):\n        super(BaseResourceTestCase, self).setUp()\n        engines.engine_factory.configure_factory(consts.DATABASE_URI)\n        engine = engines.engine_factory.get_engine()\n        self.session = engine.get_session()\n        self.session.execute(\"\"\"CREATE TABLE IF NOT EXISTS vms (\n            uuid CHAR(36) NOT NULL,\n            state VARCHAR(10) NOT NULL,\n            name VARCHAR(255) NOT NULL,\n            PRIMARY KEY (uuid)\n        ) ENGINE=InnoDB DEFAULT CHARSET=utf8;\"\"\", None)\n        self.service_port = random.choice(range(2100, 2200))\n        url = parse.urlparse(self.get_endpoint(TEMPL_SERVICE_ENDPOINT))\n        self._service = service.RESTService(bind_host=url.hostname,\n                                            bind_port=url.port)\n        self._service.start()\n\n    def tearDown(self):\n        super(BaseResourceTestCase, self).tearDown()\n        self._service.stop()\n        self.session.execute(\"DROP TABLE IF EXISTS vms;\", None)\n\n\nclass TestRootResourceTestCase(BaseResourceTestCase):\n\n    def test_get_versions_list(self):\n\n        response = requests.get(self.get_endpoint(\n            TEMPL_ROOT_COLLECTION_ENDPOINT))\n\n        self.assertEqual(response.status_code, 200)\n        self.assertEqual(response.json(), [\"v1\"])\n\n\nclass TestVersionsResourceTestCase(BaseResourceTestCase):\n\n    def test_get_resources_list(self):\n\n        response = requests.get(\n            self.get_endpoint(TEMPL_V1_COLLECTION_ENDPOINT))\n\n        self.assertEqual(response.status_code, 200)\n        self.assertEqual(response.json(), [\"vms\"])\n\n\nclass TestVMResourceTestCase(BaseResourceTestCase):\n\n    def _insert_vm_to_db(self, uuid, name, state):\n        vm = models.VM(uuid=uuid, name=name, state=state)\n        vm.save()\n\n    def _vm_exists_in_db(self, uuid):\n        try:\n            models.VM.objects.get_one(filters={'uuid': uuid})\n            return True\n        except exceptions.RecordNotFound:\n            return False\n\n    @mock.patch('uuid.uuid4')\n    def test_create_vm_resource_successful(self, uuid4_mock):\n        RESOURCE_ID = pyuuid.UUID(\"00000000-0000-0000-0000-000000000001\")\n        uuid4_mock.return_value = RESOURCE_ID\n        vm_request_body = {\n            \"name\": \"test\"\n        }\n        vm_response_body = {\n            \"uuid\": str(RESOURCE_ID),\n            \"name\": \"test\",\n            \"state\": \"off\"\n        }\n        LOCATION = self.get_endpoint(TEMPL_VM_RESOURCE_ENDPOINT, RESOURCE_ID)\n\n        response = requests.post(self.get_endpoint(\n            TEMPL_VMS_COLLECTION_ENDPOINT), json=vm_request_body)\n\n        self.assertEqual(response.status_code, 201)\n        self.assertEqual(response.headers['location'], LOCATION)\n        self.assertEqual(response.json(), vm_response_body)\n\n    def test_get_vm_resource_by_uuid_successful(self):\n        RESOURCE_ID = pyuuid.UUID(\"00000000-0000-0000-0000-000000000001\")\n        self._insert_vm_to_db(uuid=RESOURCE_ID, name=\"test\", state=\"off\")\n        vm_response_body = {\n            \"uuid\": str(RESOURCE_ID),\n            \"name\": \"test\",\n            \"state\": \"off\"\n        }\n        VM_RES_ENDPOINT = self.get_endpoint(TEMPL_VM_RESOURCE_ENDPOINT,\n                                            RESOURCE_ID)\n\n        response = requests.get(VM_RES_ENDPOINT)\n\n        self.assertEqual(response.status_code, 200)\n        self.assertEqual(response.json(), vm_response_body)\n\n    def test_update_vm_resource_successful(self):\n        RESOURCE_ID = pyuuid.UUID(\"00000000-0000-0000-0000-000000000001\")\n        self._insert_vm_to_db(uuid=RESOURCE_ID, name=\"old\", state=\"off\")\n        vm_request_body = {\n            \"name\": \"new\"\n        }\n        vm_response_body = {\n            \"uuid\": str(RESOURCE_ID),\n            \"name\": \"new\",\n            \"state\": \"off\"\n        }\n        VM_RES_ENDPOINT = self.get_endpoint(TEMPL_VM_RESOURCE_ENDPOINT,\n                                            RESOURCE_ID)\n\n        response = requests.put(VM_RES_ENDPOINT, json=vm_request_body)\n\n        self.assertEqual(response.status_code, 200)\n        self.assertEqual(response.json(), vm_response_body)\n\n    def test_delete_vm_resource_successful(self):\n        RESOURCE_ID = pyuuid.UUID(\"00000000-0000-0000-0000-000000000001\")\n        self._insert_vm_to_db(uuid=RESOURCE_ID, name=\"test\", state=\"off\")\n\n        VM_RES_ENDPOINT = self.get_endpoint(TEMPL_VM_RESOURCE_ENDPOINT,\n                                            RESOURCE_ID)\n\n        response = requests.delete(VM_RES_ENDPOINT)\n\n        self.assertEqual(response.status_code, 204)\n        self.assertFalse(self._vm_exists_in_db(RESOURCE_ID))\n\n    def test_process_vm_action_successful(self):\n        RESOURCE_ID = pyuuid.UUID(\"00000000-0000-0000-0000-000000000001\")\n        self._insert_vm_to_db(uuid=RESOURCE_ID, name=\"test\", state=\"off\")\n        vm_response_body = {\n            \"uuid\": str(RESOURCE_ID),\n            \"name\": \"test\",\n            \"state\": \"on\"\n        }\n        POWERON_ACT_ENDPOINT = self.get_endpoint(TEMPL_POWERON_ACTION_ENDPOINT,\n                                                 RESOURCE_ID)\n\n        response = requests.post(POWERON_ACT_ENDPOINT)\n\n        self.assertEqual(response.status_code, 200)\n        self.assertEqual(response.json(), vm_response_body)\n\n    def test_get_collection_vms_successful(self):\n        RESOURCE_ID1 = pyuuid.UUID(\"00000000-0000-0000-0000-000000000001\")\n        RESOURCE_ID2 = pyuuid.UUID(\"00000000-0000-0000-0000-000000000002\")\n        self._insert_vm_to_db(uuid=RESOURCE_ID1, name=\"test1\", state=\"off\")\n        self._insert_vm_to_db(uuid=RESOURCE_ID2, name=\"test2\", state=\"on\")\n        vm_response_body = [{\n            \"uuid\": str(RESOURCE_ID1),\n            \"name\": \"test1\",\n            \"state\": \"off\"\n        }, {\n            \"uuid\": str(RESOURCE_ID2),\n            \"name\": \"test2\",\n            \"state\": \"on\"\n        }]\n\n        response = requests.get(self.get_endpoint(\n            TEMPL_VMS_COLLECTION_ENDPOINT))\n\n        self.assertEqual(response.status_code, 200)\n        self.assertEqual(response.json(), vm_response_body)\n\n\nclass TestNestedResourceTestCase(BaseResourceTestCase):\n\n    def setUp(self):\n        super(TestNestedResourceTestCase, self).setUp()\n        self.session.execute(\"\"\"CREATE TABLE IF NOT EXISTS ports (\n            uuid CHAR(36) NOT NULL,\n            mac CHAR(17) NOT NULL,\n            vm CHAR(36) NOT NULL,\n            PRIMARY KEY (uuid),\n            CONSTRAINT FOREIGN KEY ix_vms_uuid (vm) REFERENCES vms (uuid)\n        ) ENGINE=InnoDB DEFAULT CHARSET=utf8;\"\"\", None)\n        self.vm1 = models.VM(\n            uuid=pyuuid.UUID(\"00000000-0000-0000-0000-000000000001\"),\n            name=\"vm1\",\n            state=\"on\")\n        self.vm1.save(session=self.session)\n        self.vm2 = models.VM(\n            uuid=pyuuid.UUID(\"00000000-0000-0000-0000-000000000002\"),\n            name=\"vm2\",\n            state=\"off\")\n        self.vm2.save(session=self.session)\n        self.session.commit()\n\n    def tearDown(self):\n        self.session.execute(\"DROP TABLE IF EXISTS ports;\", None)\n        super(TestNestedResourceTestCase, self).tearDown()\n\n    @mock.patch('uuid.uuid4')\n    def test_create_nested_resource_successful(self, uuid4_mock):\n        VM_RESOURCE_ID = pyuuid.UUID(\"00000000-0000-0000-0000-000000000001\")\n        PORT_RESOURCE_ID = pyuuid.UUID(\"00000000-0000-0000-0000-000000000003\")\n        uuid4_mock.return_value = PORT_RESOURCE_ID\n        port_request_body = {\n            \"mac\": \"00:00:00:00:00:03\"\n        }\n        port_response_body = {\n            \"uuid\": str(PORT_RESOURCE_ID),\n            \"mac\": \"00:00:00:00:00:03\",\n            \"vm\": parse.urlparse(\n                self.get_endpoint(TEMPL_VM_RESOURCE_ENDPOINT,\n                                  VM_RESOURCE_ID)).path\n        }\n        LOCATION = self.get_endpoint(TEMPL_PORT_RESOURCE_ENDPOINT,\n                                     VM_RESOURCE_ID,\n                                     PORT_RESOURCE_ID)\n\n        response = requests.post(\n            self.get_endpoint(TEMPL_PORTS_COLLECTION_ENDPOINT, VM_RESOURCE_ID),\n            json=port_request_body)\n\n        self.assertEqual(response.status_code, 201)\n        self.assertEqual(response.headers['location'], LOCATION)\n        self.assertEqual(response.json(), port_response_body)\n\n    def test_get_nested_resource_successful(self):\n        VM_RESOURCE_ID = pyuuid.UUID(\"00000000-0000-0000-0000-000000000001\")\n        PORT_RESOURCE_ID = pyuuid.UUID(\"00000000-0000-0000-0000-000000000003\")\n        port = models.Port(uuid=PORT_RESOURCE_ID,\n                           mac=\"00:00:00:00:00:03\",\n                           vm=self.vm1)\n        port.save(session=self.session)\n        self.session.commit()\n        port_response_body = {\n            \"uuid\": str(PORT_RESOURCE_ID),\n            \"mac\": \"00:00:00:00:00:03\",\n            \"vm\": parse.urlparse(\n                self.get_endpoint(TEMPL_VM_RESOURCE_ENDPOINT,\n                                  VM_RESOURCE_ID)).path\n        }\n\n        response = requests.get(\n            self.get_endpoint(TEMPL_PORT_RESOURCE_ENDPOINT,\n                              VM_RESOURCE_ID,\n                              PORT_RESOURCE_ID))\n\n        self.assertEqual(response.status_code, 200)\n        self.assertEqual(response.json(), port_response_body)\n\n    def test_get_ports_collection_successful(self):\n        VM_RESOURCE_ID = pyuuid.UUID(\"00000000-0000-0000-0000-000000000001\")\n        PORT1_RESOURCE_ID = pyuuid.UUID(\"00000000-0000-0000-0000-000000000003\")\n        PORT2_RESOURCE_ID = pyuuid.UUID(\"00000000-0000-0000-0000-000000000004\")\n        PORT3_RESOURCE_ID = pyuuid.UUID(\"00000000-0000-0000-0000-000000000005\")\n        port1 = models.Port(uuid=PORT1_RESOURCE_ID,\n                            mac=\"00:00:00:00:00:03\",\n                            vm=self.vm1)\n        port1.save(session=self.session)\n        port2 = models.Port(uuid=PORT2_RESOURCE_ID,\n                            mac=\"00:00:00:00:00:04\",\n                            vm=self.vm1)\n        port2.save(session=self.session)\n        port3 = models.Port(uuid=PORT3_RESOURCE_ID,\n                            mac=\"00:00:00:00:00:05\",\n                            vm=self.vm2)\n        port3.save(session=self.session)\n        ports_response_body = [{\n            \"uuid\": str(PORT1_RESOURCE_ID),\n            \"mac\": \"00:00:00:00:00:03\",\n            \"vm\": parse.urlparse(\n                self.get_endpoint(TEMPL_VM_RESOURCE_ENDPOINT,\n                                  VM_RESOURCE_ID)).path\n        }, {\n            \"uuid\": str(PORT2_RESOURCE_ID),\n            \"mac\": \"00:00:00:00:00:04\",\n            \"vm\": parse.urlparse(\n                self.get_endpoint(TEMPL_VM_RESOURCE_ENDPOINT,\n                                  VM_RESOURCE_ID)).path\n        }]\n        self.session.commit()\n\n        response = requests.get(\n            self.get_endpoint(TEMPL_PORTS_COLLECTION_ENDPOINT, VM_RESOURCE_ID))\n\n        self.assertEqual(response.status_code, 200)\n        self.assertEqual(response.json(), ports_response_body)\n\n    def test_delete_nested_resource_successful(self):\n        VM_RESOURCE_ID = pyuuid.UUID(\"00000000-0000-0000-0000-000000000001\")\n        PORT_RESOURCE_ID = pyuuid.UUID(\"00000000-0000-0000-0000-000000000003\")\n        port = models.Port(uuid=PORT_RESOURCE_ID,\n                           mac=\"00:00:00:00:00:03\",\n                           vm=self.vm1)\n        port.save(session=self.session)\n        self.session.commit()\n\n        response = requests.delete(\n            self.get_endpoint(TEMPL_PORT_RESOURCE_ENDPOINT,\n                              VM_RESOURCE_ID,\n                              PORT_RESOURCE_ID))\n\n        self.assertEqual(response.status_code, 204)\n        self.assertRaises(exceptions.RecordNotFound,\n                          models.Port.objects.get_one,\n                          filters={'uuid': PORT_RESOURCE_ID})\n","repo_name":"phantomii/restalchemy","path":"restalchemy/tests/functional/restapi/ra_based/test_resources.py","language":"Python","license":"apache-2.0","size":13940},"truncated_cells":[]},{"row_idx":92,"row":{"code":"package ru.job4j.max;\n/**\n *Класс помогает узнать, какое из двух чисел больше.\n *@author ifedorenko\n *@since 14.08.2017\n *@version 1\n */\npublic class Max {\n\t/**\n\t*Возвращает большее число из двух.\n\t*@param first содержит первое число\n\t*@param second содержит второе число\n\t*@return Большее из двух\n\t*/\n\tpublic int max(int first, int second) {\n\t\treturn first > second ? first : second;\n\t}\n\t\t/**\n\t*Возвращает большее число из трех.\n\t*@param first содержит первое число\n\t*@param second содержит второе число\n\t*@param third содержит третье число\n\t*@return Большее из трех\n\t*/\n\tpublic int max(int first, int second, int third) {\n\t\treturn max(first, max(second, third));\n\t}\n}","repo_name":"fr3anthe/ifedorenko","path":"1.1-Base/src/main/java/ru/job4j/max/Max.java","language":"Java","license":"apache-2.0","size":887},"truncated_cells":[]},{"row_idx":93,"row":{"code":"/**\n * Autogenerated by Thrift\n *\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n */\npackage com.cloudera.flume.reporter.server;\n\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.util.HashMap;\nimport java.util.EnumMap;\nimport java.util.Set;\nimport java.util.HashSet;\nimport java.util.EnumSet;\nimport java.util.Collections;\nimport java.util.BitSet;\nimport java.util.Arrays;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport org.apache.thrift.*;\nimport org.apache.thrift.meta_data.*;\nimport org.apache.thrift.protocol.*;\n\npublic class FlumeReport implements TBase<FlumeReport._Fields>, java.io.Serializable, Cloneable {\n  private static final TStruct STRUCT_DESC = new TStruct(\"FlumeReport\");\n\n  private static final TField STRING_METRICS_FIELD_DESC = new TField(\"stringMetrics\", TType.MAP, (short)3);\n  private static final TField LONG_METRICS_FIELD_DESC = new TField(\"longMetrics\", TType.MAP, (short)4);\n  private static final TField DOUBLE_METRICS_FIELD_DESC = new TField(\"doubleMetrics\", TType.MAP, (short)5);\n\n  public Map<String,String> stringMetrics;\n  public Map<String,Long> longMetrics;\n  public Map<String,Double> doubleMetrics;\n\n  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */\n  public enum _Fields implements TFieldIdEnum {\n    STRING_METRICS((short)3, \"stringMetrics\"),\n    LONG_METRICS((short)4, \"longMetrics\"),\n    DOUBLE_METRICS((short)5, \"doubleMetrics\");\n\n    private static final Map<Integer, _Fields> byId = new HashMap<Integer, _Fields>();\n    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();\n\n    static {\n      for (_Fields field : EnumSet.allOf(_Fields.class)) {\n        byId.put((int)field._thriftId, field);\n        byName.put(field.getFieldName(), field);\n      }\n    }\n\n    /**\n     * Find the _Fields constant that matches fieldId, or null if its not found.\n     */\n    public static _Fields findByThriftId(int fieldId) {\n      return byId.get(fieldId);\n    }\n\n    /**\n     * Find the _Fields constant that matches fieldId, throwing an exception\n     * if it is not found.\n     */\n    public static _Fields findByThriftIdOrThrow(int fieldId) {\n      _Fields fields = findByThriftId(fieldId);\n      if (fields == null) throw new IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");\n      return fields;\n    }\n\n    /**\n     * Find the _Fields constant that matches name, or null if its not found.\n     */\n    public static _Fields findByName(String name) {\n      return byName.get(name);\n    }\n\n    private final short _thriftId;\n    private final String _fieldName;\n\n    _Fields(short thriftId, String fieldName) {\n      _thriftId = thriftId;\n      _fieldName = fieldName;\n    }\n\n    public short getThriftFieldId() {\n      return _thriftId;\n    }\n\n    public String getFieldName() {\n      return _fieldName;\n    }\n  }\n\n  // isset id assignments\n\n  public static final Map<_Fields, FieldMetaData> metaDataMap = Collections.unmodifiableMap(new EnumMap<_Fields, FieldMetaData>(_Fields.class) {{\n    put(_Fields.STRING_METRICS, new FieldMetaData(\"stringMetrics\", TFieldRequirementType.DEFAULT, \n        new MapMetaData(TType.MAP, \n            new FieldValueMetaData(TType.STRING), \n            new FieldValueMetaData(TType.STRING))));\n    put(_Fields.LONG_METRICS, new FieldMetaData(\"longMetrics\", TFieldRequirementType.DEFAULT, \n        new MapMetaData(TType.MAP, \n            new FieldValueMetaData(TType.STRING), \n            new FieldValueMetaData(TType.I64))));\n    put(_Fields.DOUBLE_METRICS, new FieldMetaData(\"doubleMetrics\", TFieldRequirementType.DEFAULT, \n        new MapMetaData(TType.MAP, \n            new FieldValueMetaData(TType.STRING), \n            new FieldValueMetaData(TType.DOUBLE))));\n  }});\n\n  static {\n    FieldMetaData.addStructMetaDataMap(FlumeReport.class, metaDataMap);\n  }\n\n  public FlumeReport() {\n  }\n\n  public FlumeReport(\n    Map<String,String> stringMetrics,\n    Map<String,Long> longMetrics,\n    Map<String,Double> doubleMetrics)\n  {\n    this();\n    this.stringMetrics = stringMetrics;\n    this.longMetrics = longMetrics;\n    this.doubleMetrics = doubleMetrics;\n  }\n\n  /**\n   * Performs a deep copy on <i>other</i>.\n   */\n  public FlumeReport(FlumeReport other) {\n    if (other.isSetStringMetrics()) {\n      Map<String,String> __this__stringMetrics = new HashMap<String,String>();\n      for (Map.Entry<String, String> other_element : other.stringMetrics.entrySet()) {\n\n        String other_element_key = other_element.getKey();\n        String other_element_value = other_element.getValue();\n\n        String __this__stringMetrics_copy_key = other_element_key;\n\n        String __this__stringMetrics_copy_value = other_element_value;\n\n        __this__stringMetrics.put(__this__stringMetrics_copy_key, __this__stringMetrics_copy_value);\n      }\n      this.stringMetrics = __this__stringMetrics;\n    }\n    if (other.isSetLongMetrics()) {\n      Map<String,Long> __this__longMetrics = new HashMap<String,Long>();\n      for (Map.Entry<String, Long> other_element : other.longMetrics.entrySet()) {\n\n        String other_element_key = other_element.getKey();\n        Long other_element_value = other_element.getValue();\n\n        String __this__longMetrics_copy_key = other_element_key;\n\n        Long __this__longMetrics_copy_value = other_element_value;\n\n        __this__longMetrics.put(__this__longMetrics_copy_key, __this__longMetrics_copy_value);\n      }\n      this.longMetrics = __this__longMetrics;\n    }\n    if (other.isSetDoubleMetrics()) {\n      Map<String,Double> __this__doubleMetrics = new HashMap<String,Double>();\n      for (Map.Entry<String, Double> other_element : other.doubleMetrics.entrySet()) {\n\n        String other_element_key = other_element.getKey();\n        Double other_element_value = other_element.getValue();\n\n        String __this__doubleMetrics_copy_key = other_element_key;\n\n        Double __this__doubleMetrics_copy_value = other_element_value;\n\n        __this__doubleMetrics.put(__this__doubleMetrics_copy_key, __this__doubleMetrics_copy_value);\n      }\n      this.doubleMetrics = __this__doubleMetrics;\n    }\n  }\n\n  public FlumeReport deepCopy() {\n    return new FlumeReport(this);\n  }\n\n  @Deprecated\n  public FlumeReport clone() {\n    return new FlumeReport(this);\n  }\n\n  public int getStringMetricsSize() {\n    return (this.stringMetrics == null) ? 0 : this.stringMetrics.size();\n  }\n\n  public void putToStringMetrics(String key, String val) {\n    if (this.stringMetrics == null) {\n      this.stringMetrics = new HashMap<String,String>();\n    }\n    this.stringMetrics.put(key, val);\n  }\n\n  public Map<String,String> getStringMetrics() {\n    return this.stringMetrics;\n  }\n\n  public FlumeReport setStringMetrics(Map<String,String> stringMetrics) {\n    this.stringMetrics = stringMetrics;\n    return this;\n  }\n\n  public void unsetStringMetrics() {\n    this.stringMetrics = null;\n  }\n\n  /** Returns true if field stringMetrics is set (has been asigned a value) and false otherwise */\n  public boolean isSetStringMetrics() {\n    return this.stringMetrics != null;\n  }\n\n  public void setStringMetricsIsSet(boolean value) {\n    if (!value) {\n      this.stringMetrics = null;\n    }\n  }\n\n  public int getLongMetricsSize() {\n    return (this.longMetrics == null) ? 0 : this.longMetrics.size();\n  }\n\n  public void putToLongMetrics(String key, long val) {\n    if (this.longMetrics == null) {\n      this.longMetrics = new HashMap<String,Long>();\n    }\n    this.longMetrics.put(key, val);\n  }\n\n  public Map<String,Long> getLongMetrics() {\n    return this.longMetrics;\n  }\n\n  public FlumeReport setLongMetrics(Map<String,Long> longMetrics) {\n    this.longMetrics = longMetrics;\n    return this;\n  }\n\n  public void unsetLongMetrics() {\n    this.longMetrics = null;\n  }\n\n  /** Returns true if field longMetrics is set (has been asigned a value) and false otherwise */\n  public boolean isSetLongMetrics() {\n    return this.longMetrics != null;\n  }\n\n  public void setLongMetricsIsSet(boolean value) {\n    if (!value) {\n      this.longMetrics = null;\n    }\n  }\n\n  public int getDoubleMetricsSize() {\n    return (this.doubleMetrics == null) ? 0 : this.doubleMetrics.size();\n  }\n\n  public void putToDoubleMetrics(String key, double val) {\n    if (this.doubleMetrics == null) {\n      this.doubleMetrics = new HashMap<String,Double>();\n    }\n    this.doubleMetrics.put(key, val);\n  }\n\n  public Map<String,Double> getDoubleMetrics() {\n    return this.doubleMetrics;\n  }\n\n  public FlumeReport setDoubleMetrics(Map<String,Double> doubleMetrics) {\n    this.doubleMetrics = doubleMetrics;\n    return this;\n  }\n\n  public void unsetDoubleMetrics() {\n    this.doubleMetrics = null;\n  }\n\n  /** Returns true if field doubleMetrics is set (has been asigned a value) and false otherwise */\n  public boolean isSetDoubleMetrics() {\n    return this.doubleMetrics != null;\n  }\n\n  public void setDoubleMetricsIsSet(boolean value) {\n    if (!value) {\n      this.doubleMetrics = null;\n    }\n  }\n\n  public void setFieldValue(_Fields field, Object value) {\n    switch (field) {\n    case STRING_METRICS:\n      if (value == null) {\n        unsetStringMetrics();\n      } else {\n        setStringMetrics((Map<String,String>)value);\n      }\n      break;\n\n    case LONG_METRICS:\n      if (value == null) {\n        unsetLongMetrics();\n      } else {\n        setLongMetrics((Map<String,Long>)value);\n      }\n      break;\n\n    case DOUBLE_METRICS:\n      if (value == null) {\n        unsetDoubleMetrics();\n      } else {\n        setDoubleMetrics((Map<String,Double>)value);\n      }\n      break;\n\n    }\n  }\n\n  public void setFieldValue(int fieldID, Object value) {\n    setFieldValue(_Fields.findByThriftIdOrThrow(fieldID), value);\n  }\n\n  public Object getFieldValue(_Fields field) {\n    switch (field) {\n    case STRING_METRICS:\n      return getStringMetrics();\n\n    case LONG_METRICS:\n      return getLongMetrics();\n\n    case DOUBLE_METRICS:\n      return getDoubleMetrics();\n\n    }\n    throw new IllegalStateException();\n  }\n\n  public Object getFieldValue(int fieldId) {\n    return getFieldValue(_Fields.findByThriftIdOrThrow(fieldId));\n  }\n\n  /** Returns true if field corresponding to fieldID is set (has been asigned a value) and false otherwise */\n  public boolean isSet(_Fields field) {\n    switch (field) {\n    case STRING_METRICS:\n      return isSetStringMetrics();\n    case LONG_METRICS:\n      return isSetLongMetrics();\n    case DOUBLE_METRICS:\n      return isSetDoubleMetrics();\n    }\n    throw new IllegalStateException();\n  }\n\n  public boolean isSet(int fieldID) {\n    return isSet(_Fields.findByThriftIdOrThrow(fieldID));\n  }\n\n  @Override\n  public boolean equals(Object that) {\n    if (that == null)\n      return false;\n    if (that instanceof FlumeReport)\n      return this.equals((FlumeReport)that);\n    return false;\n  }\n\n  public boolean equals(FlumeReport that) {\n    if (that == null)\n      return false;\n\n    boolean this_present_stringMetrics = true && this.isSetStringMetrics();\n    boolean that_present_stringMetrics = true && that.isSetStringMetrics();\n    if (this_present_stringMetrics || that_present_stringMetrics) {\n      if (!(this_present_stringMetrics && that_present_stringMetrics))\n        return false;\n      if (!this.stringMetrics.equals(that.stringMetrics))\n        return false;\n    }\n\n    boolean this_present_longMetrics = true && this.isSetLongMetrics();\n    boolean that_present_longMetrics = true && that.isSetLongMetrics();\n    if (this_present_longMetrics || that_present_longMetrics) {\n      if (!(this_present_longMetrics && that_present_longMetrics))\n        return false;\n      if (!this.longMetrics.equals(that.longMetrics))\n        return false;\n    }\n\n    boolean this_present_doubleMetrics = true && this.isSetDoubleMetrics();\n    boolean that_present_doubleMetrics = true && that.isSetDoubleMetrics();\n    if (this_present_doubleMetrics || that_present_doubleMetrics) {\n      if (!(this_present_doubleMetrics && that_present_doubleMetrics))\n        return false;\n      if (!this.doubleMetrics.equals(that.doubleMetrics))\n        return false;\n    }\n\n    return true;\n  }\n\n  @Override\n  public int hashCode() {\n    return 0;\n  }\n\n  public void read(TProtocol iprot) throws TException {\n    TField field;\n    iprot.readStructBegin();\n    while (true)\n    {\n      field = iprot.readFieldBegin();\n      if (field.type == TType.STOP) { \n        break;\n      }\n      _Fields fieldId = _Fields.findByThriftId(field.id);\n      if (fieldId == null) {\n        TProtocolUtil.skip(iprot, field.type);\n      } else {\n        switch (fieldId) {\n          case STRING_METRICS:\n            if (field.type == TType.MAP) {\n              {\n                TMap _map0 = iprot.readMapBegin();\n                this.stringMetrics = new HashMap<String,String>(2*_map0.size);\n                for (int _i1 = 0; _i1 < _map0.size; ++_i1)\n                {\n                  String _key2;\n                  String _val3;\n                  _key2 = iprot.readString();\n                  _val3 = iprot.readString();\n                  this.stringMetrics.put(_key2, _val3);\n                }\n                iprot.readMapEnd();\n              }\n            } else { \n              TProtocolUtil.skip(iprot, field.type);\n            }\n            break;\n          case LONG_METRICS:\n            if (field.type == TType.MAP) {\n              {\n                TMap _map4 = iprot.readMapBegin();\n                this.longMetrics = new HashMap<String,Long>(2*_map4.size);\n                for (int _i5 = 0; _i5 < _map4.size; ++_i5)\n                {\n                  String _key6;\n                  long _val7;\n                  _key6 = iprot.readString();\n                  _val7 = iprot.readI64();\n                  this.longMetrics.put(_key6, _val7);\n                }\n                iprot.readMapEnd();\n              }\n            } else { \n              TProtocolUtil.skip(iprot, field.type);\n            }\n            break;\n          case DOUBLE_METRICS:\n            if (field.type == TType.MAP) {\n              {\n                TMap _map8 = iprot.readMapBegin();\n                this.doubleMetrics = new HashMap<String,Double>(2*_map8.size);\n                for (int _i9 = 0; _i9 < _map8.size; ++_i9)\n                {\n                  String _key10;\n                  double _val11;\n                  _key10 = iprot.readString();\n                  _val11 = iprot.readDouble();\n                  this.doubleMetrics.put(_key10, _val11);\n                }\n                iprot.readMapEnd();\n              }\n            } else { \n              TProtocolUtil.skip(iprot, field.type);\n            }\n            break;\n        }\n        iprot.readFieldEnd();\n      }\n    }\n    iprot.readStructEnd();\n\n    // check for required fields of primitive type, which can't be checked in the validate method\n    validate();\n  }\n\n  public void write(TProtocol oprot) throws TException {\n    validate();\n\n    oprot.writeStructBegin(STRUCT_DESC);\n    if (this.stringMetrics != null) {\n      oprot.writeFieldBegin(STRING_METRICS_FIELD_DESC);\n      {\n        oprot.writeMapBegin(new TMap(TType.STRING, TType.STRING, this.stringMetrics.size()));\n        for (Map.Entry<String, String> _iter12 : this.stringMetrics.entrySet())\n        {\n          oprot.writeString(_iter12.getKey());\n          oprot.writeString(_iter12.getValue());\n        }\n        oprot.writeMapEnd();\n      }\n      oprot.writeFieldEnd();\n    }\n    if (this.longMetrics != null) {\n      oprot.writeFieldBegin(LONG_METRICS_FIELD_DESC);\n      {\n        oprot.writeMapBegin(new TMap(TType.STRING, TType.I64, this.longMetrics.size()));\n        for (Map.Entry<String, Long> _iter13 : this.longMetrics.entrySet())\n        {\n          oprot.writeString(_iter13.getKey());\n          oprot.writeI64(_iter13.getValue());\n        }\n        oprot.writeMapEnd();\n      }\n      oprot.writeFieldEnd();\n    }\n    if (this.doubleMetrics != null) {\n      oprot.writeFieldBegin(DOUBLE_METRICS_FIELD_DESC);\n      {\n        oprot.writeMapBegin(new TMap(TType.STRING, TType.DOUBLE, this.doubleMetrics.size()));\n        for (Map.Entry<String, Double> _iter14 : this.doubleMetrics.entrySet())\n        {\n          oprot.writeString(_iter14.getKey());\n          oprot.writeDouble(_iter14.getValue());\n        }\n        oprot.writeMapEnd();\n      }\n      oprot.writeFieldEnd();\n    }\n    oprot.writeFieldStop();\n    oprot.writeStructEnd();\n  }\n\n  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"FlumeReport(\");\n    boolean first = true;\n\n    sb.append(\"stringMetrics:\");\n    if (this.stringMetrics == null) {\n      sb.append(\"null\");\n    } else {\n      sb.append(this.stringMetrics);\n    }\n    first = false;\n    if (!first) sb.append(\", \");\n    sb.append(\"longMetrics:\");\n    if (this.longMetrics == null) {\n      sb.append(\"null\");\n    } else {\n      sb.append(this.longMetrics);\n    }\n    first = false;\n    if (!first) sb.append(\", \");\n    sb.append(\"doubleMetrics:\");\n    if (this.doubleMetrics == null) {\n      sb.append(\"null\");\n    } else {\n      sb.append(this.doubleMetrics);\n    }\n    first = false;\n    sb.append(\")\");\n    return sb.toString();\n  }\n\n  public void validate() throws TException {\n    // check for required fields\n  }\n\n}\n\n","repo_name":"hammer/flume","path":"src/gen-java/com/cloudera/flume/reporter/server/FlumeReport.java","language":"Java","license":"apache-2.0","size":17245},"truncated_cells":[]},{"row_idx":94,"row":{"code":"/**\n * Copyright 2005-2014 The Kuali Foundation\n *\n * Licensed under the Educational Community License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.opensource.org/licenses/ecl2.php\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.kuali.rice.kew.docsearch.dao.impl;\n\nimport java.sql.Connection;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Statement;\nimport java.util.List;\nimport javax.sql.DataSource;\nimport org.apache.commons.lang.StringUtils;\nimport org.kuali.rice.core.api.uif.RemotableAttributeField;\nimport org.kuali.rice.coreservice.framework.CoreFrameworkServiceLocator;\nimport org.kuali.rice.kew.api.KewApiConstants;\nimport org.kuali.rice.kew.api.document.search.DocumentSearchCriteria;\nimport org.kuali.rice.kew.api.document.search.DocumentSearchResults;\nimport org.kuali.rice.kew.docsearch.dao.DocumentSearchDAO;\nimport org.kuali.rice.kew.impl.document.search.DocumentSearchGenerator;\nimport org.kuali.rice.kew.util.PerformanceLogger;\nimport org.kuali.rice.krad.util.KRADConstants;\nimport org.springframework.dao.DataAccessException;\nimport org.springframework.jdbc.core.ConnectionCallback;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy;\n\n/**\n * Spring JdbcTemplate implementation of DocumentSearchDAO\n *\n * @author Kuali Rice Team (rice.collab@kuali.org)\n *\n */\npublic class DocumentSearchDAOJdbcImpl implements DocumentSearchDAO {\n\n    public static final org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(DocumentSearchDAOJdbcImpl.class);\n    private static final int DEFAULT_FETCH_MORE_ITERATION_LIMIT = 10;\n    \n    private DataSource dataSource;\n\n    public void setDataSource(DataSource dataSource) {\n        this.dataSource = new TransactionAwareDataSourceProxy(dataSource);\n    }\n\n    @Override\n    public DocumentSearchResults.Builder findDocuments(final DocumentSearchGenerator documentSearchGenerator, final DocumentSearchCriteria criteria, final boolean criteriaModified, final List<RemotableAttributeField> searchFields) {\n        final int maxResultCap = getMaxResultCap(criteria);\n        try {\n            final JdbcTemplate template = new JdbcTemplate(dataSource);\n\n            return template.execute(new ConnectionCallback<DocumentSearchResults.Builder>() {\n                @Override\n                public DocumentSearchResults.Builder doInConnection(final Connection con) throws SQLException {\n                    final Statement statement = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);\n                    try {\n                        final int fetchIterationLimit = getFetchMoreIterationLimit();\n                        final int fetchLimit = fetchIterationLimit * maxResultCap;\n                        statement.setFetchSize(maxResultCap + 1);\n                        statement.setMaxRows(fetchLimit + 1);\n\n                        PerformanceLogger perfLog = new PerformanceLogger();\n                        \n                        String sql = documentSearchGenerator.generateSearchSql(criteria, searchFields);\n\n                        perfLog.log(\"Time to generate search sql from documentSearchGenerator class: \" + documentSearchGenerator\n                                .getClass().getName(), true);\n                        LOG.info(\"Executing document search with statement max rows: \" + statement.getMaxRows());\n                        LOG.info(\"Executing document search with statement fetch size: \" + statement.getFetchSize());\n                        perfLog = new PerformanceLogger();\n                        final ResultSet rs = statement.executeQuery(sql);\n                        try {\n                            perfLog.log(\"Time to execute doc search database query.\", true);\n                            final Statement searchAttributeStatement = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);\n                            try {\n                           \t\treturn documentSearchGenerator.processResultSet(criteria, criteriaModified, searchAttributeStatement, rs, maxResultCap, fetchLimit);\n                            } finally {\n                                try {\n                                    searchAttributeStatement.close();\n                                } catch (SQLException e) {\n                                    LOG.warn(\"Could not close search attribute statement.\");\n                                }\n                            }\n                        } finally {\n                            try {\n                                rs.close();\n                            } catch (SQLException e) {\n                                LOG.warn(\"Could not close result set.\");\n                            }\n                        }\n                    } finally {\n                        try {\n                            statement.close();\n                        } catch (SQLException e) {\n                            LOG.warn(\"Could not close statement.\");\n                        }\n                    }\n                }\n            });\n\n        } catch (DataAccessException dae) {\n            String errorMsg = \"DataAccessException: \" + dae.getMessage();\n            LOG.error(\"getList() \" + errorMsg, dae);\n            throw new RuntimeException(errorMsg, dae);\n        } catch (Exception e) {\n            String errorMsg = \"LookupException: \" + e.getMessage();\n            LOG.error(\"getList() \" + errorMsg, e);\n            throw new RuntimeException(errorMsg, e);\n        }\n    }\n\n    /**\n     * Returns the maximum number of results that should be returned from the document search.\n     *\n     * @param criteria the criteria in which to check for a max results value\n     * @return the maximum number of results that should be returned from a document search\n     */\n    public int getMaxResultCap(DocumentSearchCriteria criteria) {\n        int systemLimit = KewApiConstants.DOCUMENT_LOOKUP_DEFAULT_RESULT_CAP;\n        String resultCapValue = CoreFrameworkServiceLocator.getParameterService().getParameterValueAsString(KewApiConstants.KEW_NAMESPACE, KRADConstants.DetailTypes.DOCUMENT_SEARCH_DETAIL_TYPE, KewApiConstants.DOC_SEARCH_RESULT_CAP);\n        if (StringUtils.isNotBlank(resultCapValue)) {\n            try {\n                int configuredLimit = Integer.parseInt(resultCapValue);\n                if (configuredLimit <= 0) {\n                    LOG.warn(KewApiConstants.DOC_SEARCH_RESULT_CAP + \" was less than or equal to zero.  Please use a positive integer.\");\n                } else {\n                    systemLimit = configuredLimit;\n                }\n            } catch (NumberFormatException e) {\n                LOG.warn(KewApiConstants.DOC_SEARCH_RESULT_CAP + \" is not a valid number.  Value was \" + resultCapValue + \".  Using default: \" + KewApiConstants.DOCUMENT_LOOKUP_DEFAULT_RESULT_CAP);\n            }\n        }\n        int maxResults = systemLimit;\n        if (criteria.getMaxResults() != null) {\n            int criteriaLimit = criteria.getMaxResults().intValue();\n            if (criteriaLimit > systemLimit) {\n                LOG.warn(\"Result set cap of \" + criteriaLimit + \" is greater than system value of \" + systemLimit);\n            } else {\n                if (criteriaLimit < 0) {\n                    LOG.warn(\"Criteria results limit was less than zero.\");\n                    criteriaLimit = 0;\n                }\n                maxResults = criteriaLimit;\n            }\n        }\n        return maxResults;\n    }\n\n    public int getFetchMoreIterationLimit() {\n        int fetchMoreLimit = DEFAULT_FETCH_MORE_ITERATION_LIMIT;\n        String fetchMoreLimitValue = CoreFrameworkServiceLocator.getParameterService().getParameterValueAsString(KewApiConstants.KEW_NAMESPACE, KRADConstants.DetailTypes.DOCUMENT_SEARCH_DETAIL_TYPE, KewApiConstants.DOC_SEARCH_FETCH_MORE_ITERATION_LIMIT);\n        if (!StringUtils.isBlank(fetchMoreLimitValue)) {\n            try {\n                fetchMoreLimit = Integer.parseInt(fetchMoreLimitValue);\n                if (fetchMoreLimit < 0) {\n                    LOG.warn(KewApiConstants.DOC_SEARCH_FETCH_MORE_ITERATION_LIMIT + \" was less than zero.  Please use a value greater than or equal to zero.\");\n                    fetchMoreLimit = DEFAULT_FETCH_MORE_ITERATION_LIMIT;\n                }\n            } catch (NumberFormatException e) {\n                LOG.warn(KewApiConstants.DOC_SEARCH_FETCH_MORE_ITERATION_LIMIT + \" is not a valid number.  Value was \" + fetchMoreLimitValue);\n            }\n        }\n        return fetchMoreLimit;\n    }\n\n}\n","repo_name":"ua-eas/ua-rice-2.1.9","path":"impl/src/main/java/org/kuali/rice/kew/docsearch/dao/impl/DocumentSearchDAOJdbcImpl.java","language":"Java","license":"apache-2.0","size":8999},"truncated_cells":[]},{"row_idx":95,"row":{"code":"/*\n * Copyright 2016 Alexander Severgin\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage eu.alpinweiss.filegen.util.generator.impl;\n\nimport eu.alpinweiss.filegen.model.FieldDefinition;\nimport eu.alpinweiss.filegen.model.FieldType;\nimport eu.alpinweiss.filegen.util.wrapper.AbstractDataWrapper;\nimport eu.alpinweiss.filegen.util.generator.FieldGenerator;\nimport eu.alpinweiss.filegen.util.vault.ParameterVault;\nimport eu.alpinweiss.filegen.util.vault.ValueVault;\nimport org.apache.commons.lang.StringUtils;\n\nimport java.util.concurrent.ThreadLocalRandom;\n\n/**\n * {@link AutoNumberGenerator}.\n *\n * @author Aleksandrs.Severgins | <a href=\"http://alpinweiss.eu\">SIA Alpinweiss</a>\n */\npublic class AutoNumberGenerator implements FieldGenerator {\n\n    private final FieldDefinition fieldDefinition;\n    private int startNum;\n\n    public AutoNumberGenerator(FieldDefinition fieldDefinition) {\n        this.fieldDefinition = fieldDefinition;\n        final String pattern = this.fieldDefinition.getPattern();\n        if (!pattern.isEmpty()) {\n            startNum = Integer.parseInt(pattern);\n        }\n    }\n\n    @Override\n    public void generate(final ParameterVault parameterVault, ThreadLocalRandom randomGenerator, ValueVault valueVault) {\n        valueVault.storeValue(new IntegerDataWrapper() {\n            @Override\n            public Double getNumberValue() {\n                int value = startNum + (parameterVault.rowCount() * parameterVault.dataPartNumber())  + parameterVault.iterationNumber();\n                return new Double(value);\n            }\n        });\n    }\n\n    private class IntegerDataWrapper extends AbstractDataWrapper {\n        @Override\n        public FieldType getFieldType() {\n            return FieldType.INTEGER;\n        }\n    }\n}\n","repo_name":"alpinweiss/filegen","path":"src/main/java/eu/alpinweiss/filegen/util/generator/impl/AutoNumberGenerator.java","language":"Java","license":"apache-2.0","size":2280},"truncated_cells":[]},{"row_idx":96,"row":{"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\n\npackage org.elasticsearch.xpack.analytics.mapper;\n\nimport org.elasticsearch.index.mapper.FieldTypeTestCase;\nimport org.elasticsearch.index.mapper.MappedFieldType;\n\npublic class HistogramFieldTypeTests extends FieldTypeTestCase<MappedFieldType> {\n\n    @Override\n    protected MappedFieldType createDefaultFieldType() {\n        return new HistogramFieldMapper.HistogramFieldType();\n    }\n}\n","repo_name":"uschindler/elasticsearch","path":"x-pack/plugin/analytics/src/test/java/org/elasticsearch/xpack/analytics/mapper/HistogramFieldTypeTests.java","language":"Java","license":"apache-2.0","size":632},"truncated_cells":[]},{"row_idx":97,"row":{"code":"/**\n * <copyright>\n * </copyright>\n *\n * $Id$\n */\npackage net.opengis.gml.provider;\n\n\nimport java.util.Collection;\nimport java.util.List;\n\nimport net.opengis.gml.FeatureStyleType;\nimport net.opengis.gml.GmlFactory;\nimport net.opengis.gml.GmlPackage;\n\nimport org.eclipse.emf.common.notify.AdapterFactory;\nimport org.eclipse.emf.common.notify.Notification;\n\nimport org.eclipse.emf.ecore.EStructuralFeature;\n\nimport org.eclipse.emf.ecore.util.FeatureMap;\nimport org.eclipse.emf.ecore.util.FeatureMapUtil;\n\nimport org.eclipse.emf.edit.provider.ComposeableAdapterFactory;\nimport org.eclipse.emf.edit.provider.IEditingDomainItemProvider;\nimport org.eclipse.emf.edit.provider.IItemLabelProvider;\nimport org.eclipse.emf.edit.provider.IItemPropertyDescriptor;\nimport org.eclipse.emf.edit.provider.IItemPropertySource;\nimport org.eclipse.emf.edit.provider.IStructuredItemContentProvider;\nimport org.eclipse.emf.edit.provider.ITreeItemContentProvider;\nimport org.eclipse.emf.edit.provider.ItemPropertyDescriptor;\nimport org.eclipse.emf.edit.provider.ViewerNotification;\n\n/**\n * This is the item provider adapter for a {@link net.opengis.gml.FeatureStyleType} object.\n * <!-- begin-user-doc -->\n * <!-- end-user-doc -->\n * @generated\n */\npublic class FeatureStyleTypeItemProvider\n\textends AbstractGMLTypeItemProvider\n\timplements\n\t\tIEditingDomainItemProvider,\n\t\tIStructuredItemContentProvider,\n\t\tITreeItemContentProvider,\n\t\tIItemLabelProvider,\n\t\tIItemPropertySource {\n\t/**\n\t * This constructs an instance from a factory and a notifier.\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\tpublic FeatureStyleTypeItemProvider(AdapterFactory adapterFactory) {\n\t\tsuper(adapterFactory);\n\t}\n\n\t/**\n\t * This returns the property descriptors for the adapted class.\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {\n\t\tif (itemPropertyDescriptors == null) {\n\t\t\tsuper.getPropertyDescriptors(object);\n\n\t\t\taddFeatureConstraintPropertyDescriptor(object);\n\t\t\taddBaseTypePropertyDescriptor(object);\n\t\t\taddFeatureTypePropertyDescriptor(object);\n\t\t\taddQueryGrammarPropertyDescriptor(object);\n\t\t}\n\t\treturn itemPropertyDescriptors;\n\t}\n\n\t/**\n\t * This adds a property descriptor for the Feature Constraint feature.\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\tprotected void addFeatureConstraintPropertyDescriptor(Object object) {\n\t\titemPropertyDescriptors.add\n\t\t\t(createItemPropertyDescriptor\n\t\t\t\t(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),\n\t\t\t\t getResourceLocator(),\n\t\t\t\t getString(\"_UI_FeatureStyleType_featureConstraint_feature\"),\n\t\t\t\t getString(\"_UI_PropertyDescriptor_description\", \"_UI_FeatureStyleType_featureConstraint_feature\", \"_UI_FeatureStyleType_type\"),\n\t\t\t\t GmlPackage.eINSTANCE.getFeatureStyleType_FeatureConstraint(),\n\t\t\t\t true,\n\t\t\t\t false,\n\t\t\t\t false,\n\t\t\t\t ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,\n\t\t\t\t null,\n\t\t\t\t null));\n\t}\n\n\t/**\n\t * This adds a property descriptor for the Base Type feature.\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\tprotected void addBaseTypePropertyDescriptor(Object object) {\n\t\titemPropertyDescriptors.add\n\t\t\t(createItemPropertyDescriptor\n\t\t\t\t(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),\n\t\t\t\t getResourceLocator(),\n\t\t\t\t getString(\"_UI_FeatureStyleType_baseType_feature\"),\n\t\t\t\t getString(\"_UI_PropertyDescriptor_description\", \"_UI_FeatureStyleType_baseType_feature\", \"_UI_FeatureStyleType_type\"),\n\t\t\t\t GmlPackage.eINSTANCE.getFeatureStyleType_BaseType(),\n\t\t\t\t true,\n\t\t\t\t false,\n\t\t\t\t false,\n\t\t\t\t ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,\n\t\t\t\t null,\n\t\t\t\t null));\n\t}\n\n\t/**\n\t * This adds a property descriptor for the Feature Type feature.\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\tprotected void addFeatureTypePropertyDescriptor(Object object) {\n\t\titemPropertyDescriptors.add\n\t\t\t(createItemPropertyDescriptor\n\t\t\t\t(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),\n\t\t\t\t getResourceLocator(),\n\t\t\t\t getString(\"_UI_FeatureStyleType_featureType_feature\"),\n\t\t\t\t getString(\"_UI_PropertyDescriptor_description\", \"_UI_FeatureStyleType_featureType_feature\", \"_UI_FeatureStyleType_type\"),\n\t\t\t\t GmlPackage.eINSTANCE.getFeatureStyleType_FeatureType(),\n\t\t\t\t true,\n\t\t\t\t false,\n\t\t\t\t false,\n\t\t\t\t ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,\n\t\t\t\t null,\n\t\t\t\t null));\n\t}\n\n\t/**\n\t * This adds a property descriptor for the Query Grammar feature.\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\tprotected void addQueryGrammarPropertyDescriptor(Object object) {\n\t\titemPropertyDescriptors.add\n\t\t\t(createItemPropertyDescriptor\n\t\t\t\t(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),\n\t\t\t\t getResourceLocator(),\n\t\t\t\t getString(\"_UI_FeatureStyleType_queryGrammar_feature\"),\n\t\t\t\t getString(\"_UI_PropertyDescriptor_description\", \"_UI_FeatureStyleType_queryGrammar_feature\", \"_UI_FeatureStyleType_type\"),\n\t\t\t\t GmlPackage.eINSTANCE.getFeatureStyleType_QueryGrammar(),\n\t\t\t\t true,\n\t\t\t\t false,\n\t\t\t\t false,\n\t\t\t\t ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,\n\t\t\t\t null,\n\t\t\t\t null));\n\t}\n\n\t/**\n\t * This specifies how to implement {@link #getChildren} and is used to deduce an appropriate feature for an\n\t * {@link org.eclipse.emf.edit.command.AddCommand}, {@link org.eclipse.emf.edit.command.RemoveCommand} or\n\t * {@link org.eclipse.emf.edit.command.MoveCommand} in {@link #createCommand}.\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {\n\t\tif (childrenFeatures == null) {\n\t\t\tsuper.getChildrenFeatures(object);\n\t\t\tchildrenFeatures.add(GmlPackage.eINSTANCE.getFeatureStyleType_GeometryStyle());\n\t\t\tchildrenFeatures.add(GmlPackage.eINSTANCE.getFeatureStyleType_TopologyStyle());\n\t\t\tchildrenFeatures.add(GmlPackage.eINSTANCE.getFeatureStyleType_LabelStyle());\n\t\t}\n\t\treturn childrenFeatures;\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tprotected EStructuralFeature getChildFeature(Object object, Object child) {\n\t\t// Check the type of the specified child object and return the proper feature to use for\n\t\t// adding (see {@link AddCommand}) it as a child.\n\n\t\treturn super.getChildFeature(object, child);\n\t}\n\n\t/**\n\t * This returns FeatureStyleType.gif.\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic Object getImage(Object object) {\n\t\treturn overlayImage(object, getResourceLocator().getImage(\"full/obj16/FeatureStyleType\"));\n\t}\n\n\t/**\n\t * This returns the label text for the adapted class.\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic String getText(Object object) {\n\t\tString label = ((FeatureStyleType)object).getId();\n\t\treturn label == null || label.length() == 0 ?\n\t\t\tgetString(\"_UI_FeatureStyleType_type\") :\n\t\t\tgetString(\"_UI_FeatureStyleType_type\") + \" \" + label;\n\t}\n\n\t/**\n\t * This handles model notifications by calling {@link #updateChildren} to update any cached\n\t * children and by creating a viewer notification, which it passes to {@link #fireNotifyChanged}.\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic void notifyChanged(Notification notification) {\n\t\tupdateChildren(notification);\n\n\t\tswitch (notification.getFeatureID(FeatureStyleType.class)) {\n\t\t\tcase GmlPackage.FEATURE_STYLE_TYPE__FEATURE_CONSTRAINT:\n\t\t\tcase GmlPackage.FEATURE_STYLE_TYPE__BASE_TYPE:\n\t\t\tcase GmlPackage.FEATURE_STYLE_TYPE__FEATURE_TYPE:\n\t\t\tcase GmlPackage.FEATURE_STYLE_TYPE__QUERY_GRAMMAR:\n\t\t\t\tfireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));\n\t\t\t\treturn;\n\t\t\tcase GmlPackage.FEATURE_STYLE_TYPE__GEOMETRY_STYLE:\n\t\t\tcase GmlPackage.FEATURE_STYLE_TYPE__TOPOLOGY_STYLE:\n\t\t\tcase GmlPackage.FEATURE_STYLE_TYPE__LABEL_STYLE:\n\t\t\t\tfireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));\n\t\t\t\treturn;\n\t\t}\n\t\tsuper.notifyChanged(notification);\n\t}\n\n\t/**\n\t * This adds {@link org.eclipse.emf.edit.command.CommandParameter}s describing the children\n\t * that can be created under this object.\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tprotected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {\n\t\tsuper.collectNewChildDescriptors(newChildDescriptors, object);\n\n\t\tnewChildDescriptors.add\n\t\t\t(createChildParameter\n\t\t\t\t(GmlPackage.eINSTANCE.getFeatureStyleType_GeometryStyle(),\n\t\t\t\t GmlFactory.eINSTANCE.createGeometryStylePropertyType()));\n\n\t\tnewChildDescriptors.add\n\t\t\t(createChildParameter\n\t\t\t\t(GmlPackage.eINSTANCE.getFeatureStyleType_TopologyStyle(),\n\t\t\t\t GmlFactory.eINSTANCE.createTopologyStylePropertyType()));\n\n\t\tnewChildDescriptors.add\n\t\t\t(createChildParameter\n\t\t\t\t(GmlPackage.eINSTANCE.getFeatureStyleType_LabelStyle(),\n\t\t\t\t GmlFactory.eINSTANCE.createLabelStylePropertyType()));\n\t}\n\n\t/**\n\t * This returns the label text for {@link org.eclipse.emf.edit.command.CreateChildCommand}.\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic String getCreateChildText(Object owner, Object feature, Object child, Collection<?> selection) {\n\t\tObject childFeature = feature;\n\t\tObject childObject = child;\n\n\t\tif (childFeature instanceof EStructuralFeature && FeatureMapUtil.isFeatureMap((EStructuralFeature)childFeature)) {\n\t\t\tFeatureMap.Entry entry = (FeatureMap.Entry)childObject;\n\t\t\tchildFeature = entry.getEStructuralFeature();\n\t\t\tchildObject = entry.getValue();\n\t\t}\n\n\t\tboolean qualify =\n\t\t\tchildFeature == GmlPackage.eINSTANCE.getAbstractGMLType_Name() ||\n\t\t\tchildFeature == GmlPackage.eINSTANCE.getDocumentRoot_CoordinateOperationName() ||\n\t\t\tchildFeature == GmlPackage.eINSTANCE.getDocumentRoot_CsName() ||\n\t\t\tchildFeature == GmlPackage.eINSTANCE.getDocumentRoot_DatumName() ||\n\t\t\tchildFeature == GmlPackage.eINSTANCE.getDocumentRoot_EllipsoidName() ||\n\t\t\tchildFeature == GmlPackage.eINSTANCE.getDocumentRoot_GroupName() ||\n\t\t\tchildFeature == GmlPackage.eINSTANCE.getDocumentRoot_MeridianName() ||\n\t\t\tchildFeature == GmlPackage.eINSTANCE.getDocumentRoot_MethodName() ||\n\t\t\tchildFeature == GmlPackage.eINSTANCE.getDocumentRoot_ParameterName() ||\n\t\t\tchildFeature == GmlPackage.eINSTANCE.getDocumentRoot_SrsName();\n\n\t\tif (qualify) {\n\t\t\treturn getString\n\t\t\t\t(\"_UI_CreateChild_text2\",\n\t\t\t\t new Object[] { getTypeText(childObject), getFeatureText(childFeature), getTypeText(owner) });\n\t\t}\n\t\treturn super.getCreateChildText(owner, feature, child, selection);\n\t}\n\n}\n","repo_name":"markus1978/citygml4emf","path":"de.hub.citygml.emf.ecore.edit/src/net/opengis/gml/provider/FeatureStyleTypeItemProvider.java","language":"Java","license":"apache-2.0","size":10661},"truncated_cells":[]},{"row_idx":98,"row":{"code":"\\section{ESRI}\n\\index{ESRI}\n\\index{Environmental Systems Research Institute}\n\nEnvironmental Systems Research Institute (ESRI) offers geospatial related data\nservices and process online through its proprietary API.  Features of the ESRI\nplatform include access to basemaps, geocoding, demographic data, a dynamic\nworld atlas, and multiple data sets in a open-data resource~\\cite{hid-sp18-505-ESRI2018}.\n","repo_name":"cloudmesh/book","path":"cloud-technologies/incomming/tex/abstract-esri-data-services.tex","language":"TeX","license":"apache-2.0","size":402},"truncated_cells":[]},{"row_idx":99,"row":{"code":"# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"GKE nodes service account permissions for logging.\n\nThe service account used by GKE nodes should have the logging.logWriter\nrole, otherwise ingestion of logs won't work.\n\"\"\"\n\nfrom gcpdiag import lint, models\nfrom gcpdiag.queries import gke, iam\n\nROLE = 'roles/logging.logWriter'\n\n\ndef prefetch_rule(context: models.Context):\n  # Make sure that we have the IAM policy in cache.\n  project_ids = {c.project_id for c in gke.get_clusters(context).values()}\n  for pid in project_ids:\n    iam.get_project_policy(pid)\n\n\ndef run_rule(context: models.Context, report: lint.LintReportRuleInterface):\n  # Find all clusters with logging enabled.\n  clusters = gke.get_clusters(context)\n  iam_policy = iam.get_project_policy(context.project_id)\n  if not clusters:\n    report.add_skipped(None, 'no clusters found')\n  for _, c in sorted(clusters.items()):\n    if not c.has_logging_enabled():\n      report.add_skipped(c, 'logging disabled')\n    else:\n      # Verify service-account permissions for every nodepool.\n      for np in c.nodepools:\n        sa = np.service_account\n        if not iam.is_service_account_enabled(sa, context.project_id):\n          report.add_failed(np, f'service account disabled or deleted: {sa}')\n        elif not iam_policy.has_role_permissions(f'serviceAccount:{sa}', ROLE):\n          report.add_failed(np, f'service account: {sa}\\nmissing role: {ROLE}')\n        else:\n          report.add_ok(np)\n","repo_name":"GoogleCloudPlatform/gcpdiag","path":"gcpdiag/lint/gke/err_2021_001_logging_perm.py","language":"Python","license":"apache-2.0","size":1986},"truncated_cells":[]}],"num_rows_total":670000,"num_rows_per_page":100}